1. Executing SystemVerilog frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0301] tests/simple_tests/ParameterRangeUsingDot/top.sv:1:1: Compile package "otp_ctrl_part_pkg".
[INF:CP0303] tests/simple_tests/ParameterRangeUsingDot/top.sv:232:1: Compile module "work@otp_ctrl_part_buf".
[INF:CP0303] tests/simple_tests/ParameterRangeUsingDot/top.sv:241:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[INF:CP0335] tests/simple_tests/ParameterRangeUsingDot/top.sv:243:39: Compile generate block "work@top.gen_block[0]".
[INF:CP0335] tests/simple_tests/ParameterRangeUsingDot/top.sv:243:39: Compile generate block "work@top.gen_block[1]".
[NTE:EL0503] tests/simple_tests/ParameterRangeUsingDot/top.sv:241:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 3.
[NTE:EL0510] Nb instances: 3.
[NTE:EL0511] Nb leaf instances: 2.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'otp_ctrl_part_pkg' of type 'package'
    Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'Secret0Key' of type 'enum_const'
      Object 'Secret1Key' of type 'enum_const'
      Object 'Secret2Key' of type 'enum_const'
    Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
      Object 'variant' of type 'typespec_member'
        Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Unbuffered' of type 'enum_const'
          Object 'Buffered' of type 'enum_const'
          Object 'LifeCycle' of type 'enum_const'
      Object 'offset' of type 'typespec_member'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'size' of type 'typespec_member'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'key_sel' of type 'typespec_member'
        Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Secret0Key' of type 'enum_const'
          Object 'Secret1Key' of type 'enum_const'
          Object 'Secret2Key' of type 'enum_const'
      Object 'secret' of type 'typespec_member'
      Object 'hw_digest' of type 'typespec_member'
      Object 'write_lock' of type 'typespec_member'
      Object 'read_lock' of type 'typespec_member'
      Object 'ecc_fatal' of type 'typespec_member'
    Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'Unbuffered' of type 'enum_const'
      Object 'Buffered' of type 'enum_const'
      Object 'LifeCycle' of type 'enum_const'
    Object 'NumPart' of type 'parameter'
    Object 'OtpByteAddrWidth' of type 'parameter'
    Object 'ConstSelWidth' of type 'parameter'
    Object 'PartInfoDefault' of type 'parameter'
      Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
        Object 'variant' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
        Object 'offset' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'size' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'key_sel' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
        Object 'secret' of type 'typespec_member'
        Object 'hw_digest' of type 'typespec_member'
        Object 'write_lock' of type 'typespec_member'
        Object 'read_lock' of type 'typespec_member'
        Object 'ecc_fatal' of type 'typespec_member'
    Object 'PartInfo' of type 'parameter'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
        Object 'variant' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
        Object 'offset' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'size' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'key_sel' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
        Object 'secret' of type 'typespec_member'
        Object 'hw_digest' of type 'typespec_member'
        Object 'write_lock' of type 'typespec_member'
        Object 'read_lock' of type 'typespec_member'
        Object 'ecc_fatal' of type 'typespec_member'
    Object 'PartInvDefault' of type 'parameter'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'NumPart' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'OtpByteAddrWidth' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'ConstSelWidth' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInfoDefault' of type 'parameter'
        Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
          Object 'variant' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Unbuffered' of type 'enum_const'
              Object 'Buffered' of type 'enum_const'
              Object 'LifeCycle' of type 'enum_const'
          Object 'offset' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'size' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'key_sel' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Secret0Key' of type 'enum_const'
              Object 'Secret1Key' of type 'enum_const'
              Object 'Secret2Key' of type 'enum_const'
          Object 'secret' of type 'typespec_member'
          Object 'hw_digest' of type 'typespec_member'
          Object 'write_lock' of type 'typespec_member'
          Object 'read_lock' of type 'typespec_member'
          Object 'ecc_fatal' of type 'typespec_member'
      Object '' of type 'operation'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
        Object '' of type 'tagged_pattern'
          Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInfo' of type 'parameter'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
          Object 'variant' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Unbuffered' of type 'enum_const'
              Object 'Buffered' of type 'enum_const'
              Object 'LifeCycle' of type 'enum_const'
          Object 'offset' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'size' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'key_sel' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Secret0Key' of type 'enum_const'
              Object 'Secret1Key' of type 'enum_const'
              Object 'Secret2Key' of type 'enum_const'
          Object 'secret' of type 'typespec_member'
          Object 'hw_digest' of type 'typespec_member'
          Object 'write_lock' of type 'typespec_member'
          Object 'read_lock' of type 'typespec_member'
          Object 'ecc_fatal' of type 'typespec_member'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInvDefault' of type 'parameter'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
  Object 'work@top' of type 'module_inst'
    Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'Secret0Key' of type 'enum_const'
      Object 'Secret1Key' of type 'enum_const'
      Object 'Secret2Key' of type 'enum_const'
    Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
      Object 'variant' of type 'typespec_member'
        Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Unbuffered' of type 'enum_const'
          Object 'Buffered' of type 'enum_const'
          Object 'LifeCycle' of type 'enum_const'
      Object 'offset' of type 'typespec_member'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'size' of type 'typespec_member'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'key_sel' of type 'typespec_member'
        Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Secret0Key' of type 'enum_const'
          Object 'Secret1Key' of type 'enum_const'
          Object 'Secret2Key' of type 'enum_const'
      Object 'secret' of type 'typespec_member'
      Object 'hw_digest' of type 'typespec_member'
      Object 'write_lock' of type 'typespec_member'
      Object 'read_lock' of type 'typespec_member'
      Object 'ecc_fatal' of type 'typespec_member'
    Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'Unbuffered' of type 'enum_const'
      Object 'Buffered' of type 'enum_const'
      Object 'LifeCycle' of type 'enum_const'
    Object 'otp_ctrl_part_pkg' of type 'import_typespec'
    Object 'ConstSelWidth' of type 'parameter'
    Object 'NumPart' of type 'parameter'
    Object 'OtpByteAddrWidth' of type 'parameter'
    Object 'PartInfo' of type 'parameter'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
        Object 'variant' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
        Object 'offset' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'size' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'key_sel' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
        Object 'secret' of type 'typespec_member'
        Object 'hw_digest' of type 'typespec_member'
        Object 'write_lock' of type 'typespec_member'
        Object 'read_lock' of type 'typespec_member'
        Object 'ecc_fatal' of type 'typespec_member'
    Object 'PartInfoDefault' of type 'parameter'
      Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
        Object 'variant' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
        Object 'offset' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'size' of type 'typespec_member'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'key_sel' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
        Object 'secret' of type 'typespec_member'
        Object 'hw_digest' of type 'typespec_member'
        Object 'write_lock' of type 'typespec_member'
        Object 'read_lock' of type 'typespec_member'
        Object 'ecc_fatal' of type 'typespec_member'
    Object 'PartInvDefault' of type 'parameter'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'NumPart' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'OtpByteAddrWidth' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'ConstSelWidth' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInfoDefault' of type 'parameter'
        Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
          Object 'variant' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Unbuffered' of type 'enum_const'
              Object 'Buffered' of type 'enum_const'
              Object 'LifeCycle' of type 'enum_const'
          Object 'offset' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'size' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'key_sel' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Secret0Key' of type 'enum_const'
              Object 'Secret1Key' of type 'enum_const'
              Object 'Secret2Key' of type 'enum_const'
          Object 'secret' of type 'typespec_member'
          Object 'hw_digest' of type 'typespec_member'
          Object 'write_lock' of type 'typespec_member'
          Object 'read_lock' of type 'typespec_member'
          Object 'ecc_fatal' of type 'typespec_member'
      Object '' of type 'operation'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
        Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInfo' of type 'parameter'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
          Object 'variant' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Unbuffered' of type 'enum_const'
              Object 'Buffered' of type 'enum_const'
              Object 'LifeCycle' of type 'enum_const'
          Object 'offset' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'size' of type 'typespec_member'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'key_sel' of type 'typespec_member'
            Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'Secret0Key' of type 'enum_const'
              Object 'Secret1Key' of type 'enum_const'
              Object 'Secret2Key' of type 'enum_const'
          Object 'secret' of type 'typespec_member'
          Object 'hw_digest' of type 'typespec_member'
          Object 'write_lock' of type 'typespec_member'
          Object 'read_lock' of type 'typespec_member'
          Object 'ecc_fatal' of type 'typespec_member'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
          Object '' of type 'tagged_pattern'
            Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PartInvDefault' of type 'parameter'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
          Object '' of type 'operation'
            Object '' of type 'constant'
    Object 'gen_block[0]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'k' of type 'parameter'
        Object 'u_part_buf' of type 'module_inst'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
          Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
            Object 'variant' of type 'typespec_member'
              Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                Object '' of type 'logic_typespec'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'Unbuffered' of type 'enum_const'
                Object 'Buffered' of type 'enum_const'
                Object 'LifeCycle' of type 'enum_const'
            Object 'offset' of type 'typespec_member'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'size' of type 'typespec_member'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'key_sel' of type 'typespec_member'
              Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                Object '' of type 'logic_typespec'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'Secret0Key' of type 'enum_const'
                Object 'Secret1Key' of type 'enum_const'
                Object 'Secret2Key' of type 'enum_const'
            Object 'secret' of type 'typespec_member'
            Object 'hw_digest' of type 'typespec_member'
            Object 'write_lock' of type 'typespec_member'
            Object 'read_lock' of type 'typespec_member'
            Object 'ecc_fatal' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
          Object 'otp_ctrl_part_pkg' of type 'import_typespec'
          Object 'ConstSelWidth' of type 'parameter'
          Object 'NumPart' of type 'parameter'
          Object 'OtpByteAddrWidth' of type 'parameter'
          Object 'PartInfo' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'PartInfoDefault' of type 'parameter'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'PartInvDefault' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Info' of type 'parameter'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'DataDefault' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'operation'
                Object '' of type 'constant'
                Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'Info' of type 'parameter'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'DataDefault' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'PartInvDefault' of type 'indexed_part_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'NumPart' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'OtpByteAddrWidth' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'ConstSelWidth' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInfoDefault' of type 'parameter'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInfo' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInvDefault' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object '' of type 'operation'
              Object '' of type 'operation'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
    Object 'gen_block[1]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'k' of type 'parameter'
        Object 'u_part_buf' of type 'module_inst'
          Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Secret0Key' of type 'enum_const'
            Object 'Secret1Key' of type 'enum_const'
            Object 'Secret2Key' of type 'enum_const'
          Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
            Object 'variant' of type 'typespec_member'
              Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                Object '' of type 'logic_typespec'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'Unbuffered' of type 'enum_const'
                Object 'Buffered' of type 'enum_const'
                Object 'LifeCycle' of type 'enum_const'
            Object 'offset' of type 'typespec_member'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'size' of type 'typespec_member'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'key_sel' of type 'typespec_member'
              Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                Object '' of type 'logic_typespec'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'Secret0Key' of type 'enum_const'
                Object 'Secret1Key' of type 'enum_const'
                Object 'Secret2Key' of type 'enum_const'
            Object 'secret' of type 'typespec_member'
            Object 'hw_digest' of type 'typespec_member'
            Object 'write_lock' of type 'typespec_member'
            Object 'read_lock' of type 'typespec_member'
            Object 'ecc_fatal' of type 'typespec_member'
          Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'Unbuffered' of type 'enum_const'
            Object 'Buffered' of type 'enum_const'
            Object 'LifeCycle' of type 'enum_const'
          Object 'otp_ctrl_part_pkg' of type 'import_typespec'
          Object 'ConstSelWidth' of type 'parameter'
          Object 'NumPart' of type 'parameter'
          Object 'OtpByteAddrWidth' of type 'parameter'
          Object 'PartInfo' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'PartInfoDefault' of type 'parameter'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'PartInvDefault' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'Info' of type 'parameter'
            Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
              Object 'variant' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Unbuffered' of type 'enum_const'
                  Object 'Buffered' of type 'enum_const'
                  Object 'LifeCycle' of type 'enum_const'
              Object 'offset' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'size' of type 'typespec_member'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'key_sel' of type 'typespec_member'
                Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'Secret0Key' of type 'enum_const'
                  Object 'Secret1Key' of type 'enum_const'
                  Object 'Secret2Key' of type 'enum_const'
              Object 'secret' of type 'typespec_member'
              Object 'hw_digest' of type 'typespec_member'
              Object 'write_lock' of type 'typespec_member'
              Object 'read_lock' of type 'typespec_member'
              Object 'ecc_fatal' of type 'typespec_member'
          Object 'DataDefault' of type 'parameter'
            Object '' of type 'range'
              Object '' of type 'operation'
                Object '' of type 'constant'
                Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'Info' of type 'parameter'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'DataDefault' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
                Object '' of type 'constant'
            Object 'PartInvDefault' of type 'indexed_part_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'NumPart' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'OtpByteAddrWidth' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'ConstSelWidth' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInfoDefault' of type 'parameter'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInfo' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'otp_ctrl_part_pkg::part_info_t' of type 'struct_typespec'
                Object 'variant' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::part_variant_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Unbuffered' of type 'enum_const'
                    Object 'Buffered' of type 'enum_const'
                    Object 'LifeCycle' of type 'enum_const'
                Object 'offset' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'size' of type 'typespec_member'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
                Object 'key_sel' of type 'typespec_member'
                  Object 'otp_ctrl_part_pkg::key_sel_e' of type 'enum_typespec'
                    Object '' of type 'logic_typespec'
                      Object '' of type 'range'
                        Object '' of type 'constant'
                        Object '' of type 'constant'
                    Object 'Secret0Key' of type 'enum_const'
                    Object 'Secret1Key' of type 'enum_const'
                    Object 'Secret2Key' of type 'enum_const'
                Object 'secret' of type 'typespec_member'
                Object 'hw_digest' of type 'typespec_member'
                Object 'write_lock' of type 'typespec_member'
                Object 'read_lock' of type 'typespec_member'
                Object 'ecc_fatal' of type 'typespec_member'
            Object '' of type 'operation'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
              Object '' of type 'operation'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
                Object '' of type 'tagged_pattern'
                  Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'PartInvDefault' of type 'parameter'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
            Object '' of type 'operation'
              Object '' of type 'operation'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
Generating RTLIL representation for module `$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf'
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum6' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum6' bits='001001000110010101101110011101010110110100110110'(48) range=[47:0] int=1853189430 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t'
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum7' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum7' bits='001001000110010101101110011101010110110100110111'(48) range=[47:0] int=1853189431 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:236.37-236.59> str='\Info' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:55.5-65.6> bits='00000010000000110010000000000101'(32) basic_prep range=[31:0] int=33759237 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.37-237.53> str='\DataDefault' basic_prep range=[6399:0] dimensions=[6399:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:246.33-246.75> bitsbasic_prep range=[6399:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.19-237.36> basic_prep range=[6399:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.20-237.33> bits='00000000000000000001100011111111'(32) signed basic_prep range=[31:0] int=6399 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) signed range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module \$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf ();
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf' basic_prep
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum6' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum6' bits='001001000110010101101110011101010110110100110110'(48) basic_prep range=[47:0] int=1853189430 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum6' bits='001001000110010101101110011101010110110100110110'(48) basic_prep range=[47:0] int=1853189430 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum6' bits='001001000110010101101110011101010110110100110110'(48) basic_prep range=[47:0] int=1853189430 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum6' bits='001001000110010101101110011101010110110100110110'(48) basic_prep range=[47:0] int=1853189430 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum7' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum7' bits='001001000110010101101110011101010110110100110111'(48) basic_prep range=[47:0] int=1853189431 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum7' bits='001001000110010101101110011101010110110100110111'(48) basic_prep range=[47:0] int=1853189431 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum7' bits='001001000110010101101110011101010110110100110111'(48) basic_prep range=[47:0] int=1853189431 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum7' bits='001001000110010101101110011101010110110100110111'(48) basic_prep range=[47:0] int=1853189431 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:236.37-236.59> str='\Info' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:55.5-65.6> bits='00000010000000110010000000000101'(32) basic_prep range=[31:0] int=33759237 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.37-237.53> str='\DataDefault' basic_prep range=[6399:0] dimensions=[6399:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:246.33-246.75> bitsbasic_prep range=[6399:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.19-237.36> basic_prep range=[6399:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.20-237.33> bits='00000000000000000001100011111111'(32) signed basic_prep range=[31:0] int=6399 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bits=''(16384) basic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module \$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf ();
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:241.1-249.10> str='\top'
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum2' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum2' bits='001001000110010101101110011101010110110100110010'(48) range=[47:0] int=1853189426 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t'
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum3' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum3' bits='001001000110010101101110011101010110110100110011'(48) range=[47:0] int=1853189427 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) signed range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> str='\gen_block[0].k' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> bits='00000000000000000000000000000000'(32) unsized range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='\gen_block[0].u_part_buf'
        AST_CELLTYPE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf'
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> str='\gen_block[1].k' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> bits='00000000000000000000000000000001'(32) unsized range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='\gen_block[1].u_part_buf'
        AST_CELLTYPE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf'
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_CELL **/
      /** AST_CELL **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:241.1-249.10> str='\top' basic_prep
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum2' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum2' bits='001001000110010101101110011101010110110100110010'(48) basic_prep range=[47:0] int=1853189426 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum2' bits='001001000110010101101110011101010110110100110010'(48) basic_prep range=[47:0] int=1853189426 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum2' bits='001001000110010101101110011101010110110100110010'(48) basic_prep range=[47:0] int=1853189426 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum2' bits='001001000110010101101110011101010110110100110010'(48) basic_prep range=[47:0] int=1853189426 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum3' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum3' bits='001001000110010101101110011101010110110100110011'(48) basic_prep range=[47:0] int=1853189427 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum3' bits='001001000110010101101110011101010110110100110011'(48) basic_prep range=[47:0] int=1853189427 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum3' bits='001001000110010101101110011101010110110100110011'(48) basic_prep range=[47:0] int=1853189427 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum3' bits='001001000110010101101110011101010110110100110011'(48) basic_prep range=[47:0] int=1853189427 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> str='\gen_block[0].k' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> bits='00000000000000000000000000000000'(32) unsized basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='\gen_block[0].u_part_buf' basic_prep
        AST_CELLTYPE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf' basic_prep
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> str='\gen_block[1].k' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:243.0-243.0> bits='00000000000000000000000000000001'(32) unsized basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='\gen_block[1].u_part_buf' basic_prep
        AST_CELLTYPE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf' basic_prep
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_CELL **/
      /** AST_CELL **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf'
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum4' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum4' bits='001001000110010101101110011101010110110100110100'(48) range=[47:0] int=1853189428 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t'
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum5' logic
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic range=[-1:0]
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27>
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e'
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum5' bits='001001000110010101101110011101010110110100110101'(48) range=[47:0] int=1853189429 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:236.37-236.59> str='\Info' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:43.5-53.6> bits='00000000000000000100000000000100'(32) basic_prep range=[31:0] int=16388 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.37-237.53> str='\DataDefault' basic_prep range=[511:0] dimensions=[511:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:246.33-246.75> bits='00011101000000001110000101110101111000110111001110011110110000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'(512) basic_prep range=[511:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.19-237.36> basic_prep range=[511:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.20-237.33> bits='00000000000000000000000111111111'(32) signed basic_prep range=[31:0] int=511 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) signed range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module \$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf ();
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ParameterRangeUsingDot/top.sv:244.3-247.19> str='$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf' basic_prep
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum4' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum4' bits='001001000110010101101110011101010110110100110100'(48) basic_prep range=[47:0] int=1853189428 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum4' bits='001001000110010101101110011101010110110100110100'(48) basic_prep range=[47:0] int=1853189428 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum4' bits='001001000110010101101110011101010110110100110100'(48) basic_prep range=[47:0] int=1853189428 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum4' bits='001001000110010101101110011101010110110100110100'(48) basic_prep range=[47:0] int=1853189428 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum5' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum5' bits='001001000110010101101110011101010110110100110101'(48) basic_prep range=[47:0] int=1853189429 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum5' bits='001001000110010101101110011101010110110100110101'(48) basic_prep range=[47:0] int=1853189429 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum5' bits='001001000110010101101110011101010110110100110101'(48) basic_prep range=[47:0] int=1853189429 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum5' bits='001001000110010101101110011101010110110100110101'(48) basic_prep range=[47:0] int=1853189429 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:236.37-236.59> str='\Info' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:43.5-53.6> bits='00000000000000000100000000000100'(32) basic_prep range=[31:0] int=16388 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.37-237.53> str='\DataDefault' basic_prep range=[511:0] dimensions=[511:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:246.33-246.75> bits='00011101000000001110000101110101111000110111001110011110110000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'(512) basic_prep range=[511:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.19-237.36> basic_prep range=[511:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:237.20-237.33> bits='00000000000000000000000111111111'(32) signed basic_prep range=[31:0] int=511 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.43-40.4> bits='00000000000000001111111100000000'(32) basic_prep range=[31:0] int=65280 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> str='\otp_ctrl_part_pkg::Secret0Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:6.5-6.15> bits='000'(3) basic_prep range=[2:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> str='\otp_ctrl_part_pkg::Secret1Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:7.5-7.15> bits='001'(3) basic_prep range=[2:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> str='\otp_ctrl_part_pkg::Secret2Key' logic basic_prep range=[2:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:8.5-8.15> bits='010'(3) basic_prep range=[2:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.3-9.15> str='\otp_ctrl_part_pkg::key_sel_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[2:0] dimensions=[2:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:5.22-5.41> basic_prep range=[2:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> str='\otp_ctrl_part_pkg::part_info_t' basic_prep
        AST_STRUCT <tests/simple_tests/ParameterRangeUsingDot/top.sv:15.11-28.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:16.20-16.27> str='variant' basic_prep range=[31:30]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:18.34-18.40> str='offset' logic basic_prep range=[29:19] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:19.34-19.38> str='size' logic basic_prep range=[18:8] dimensions=[10:0]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:21.15-21.22> str='key_sel' basic_prep range=[7:5]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:23.11-23.17> str='secret' logic basic_prep range=[4:4]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:24.11-24.20> str='hw_digest' logic basic_prep range=[3:3]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:25.11-25.21> str='write_lock' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:26.11-26.20> str='read_lock' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:27.11-27.20> str='ecc_fatal' logic basic_prep range=[0:0]
      AST_ENUM <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> str='\otp_ctrl_part_pkg::Unbuffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:11.5-11.15> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> str='\otp_ctrl_part_pkg::Buffered' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:12.5-12.13> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> str='\otp_ctrl_part_pkg::LifeCycle' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:13.5-13.14> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.3-14.20> str='\otp_ctrl_part_pkg::part_variant_e' basic_prep
        AST_WIRE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> reg basic_prep range=[1:0] dimensions=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:10.22-10.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:2.17-2.28> str='\otp_ctrl_part_pkg::NumPart' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:3.17-3.38> str='\otp_ctrl_part_pkg::OtpByteAddrWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000001011'(32) basic_prep range=[31:0] int=11 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:4.17-4.34> str='\otp_ctrl_part_pkg::ConstSelWidth' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:30.25-40.4> str='\otp_ctrl_part_pkg::PartInfoDefault' logic basic_prep range=[31:0] dimensions=[31:0] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/ParameterRangeUsingDot/top.sv:41.26-138.4> str='\otp_ctrl_part_pkg::PartInfo' logic basic_prep range=[63:0] dimensions=[31:0][0:1] in_param
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> str='\part_info_t' bits='010111000111000001100001011100100111010001011111011010010110111001100110011011110101111101110100'(96) basic_prep range=[95:0] int=1718574964 in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='0000000000000000000000000000000000000000000000000000000000000001'(64) basic_prep range=[63:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.29-230.9> str='\otp_ctrl_part_pkg::PartInvDefault' basic_prep range=[16383:0] dimensions=[16383:0] in_param
        AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.53-230.8> bitsbasic_prep range=[16383:0] in_param
        AST_RANGE <tests/simple_tests/ParameterRangeUsingDot/top.sv:140.19-140.28> basic_prep range=[16383:0] in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000011111111111111'(32) signed basic_prep range=[31:0] int=16383 in_param
          AST_CONSTANT <tests/simple_tests/ParameterRangeUsingDot/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module \$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf ();
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_PARAMETER **/
      (* wiretype = "\part_info_t" *)
      /** AST_LOCALPARAM **/
      /** AST_PARAMETER **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Synlig (git sha1 97ac61ab9, g++ 12.2.0-14 -fPIC -O3) */
Dumping module `$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf'.

module \$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf ();
endmodule
Dumping module `$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf'.

module \$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf ();
endmodule
Dumping module `\top'.

module top();
  \$paramod$5e4ec6954f19b4b5bee00058597669c27b38432a\otp_ctrl_part_buf  \gen_block[0].u_part_buf  (
  );
  \$paramod$fbc67c790f6526bcf42a810b92204f34f2969323\otp_ctrl_part_buf  \gen_block[1].u_part_buf  (
  );
endmodule

