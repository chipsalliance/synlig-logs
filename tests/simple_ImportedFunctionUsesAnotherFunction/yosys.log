1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0301] tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:1:1: Compile package "pkg".
[INF:CP0303] tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:10:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:10:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 1.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'pkg' of type 'package'
    Object 'PARAM' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'PARAM' of type 'parameter'
      Object '' of type 'constant'
    Object 'func_2' of type 'function'
      Object '' of type 'int_var'
      Object '' of type 'return_stmt'
        Object '' of type 'constant'
    Object 'func_1' of type 'function'
      Object '' of type 'int_var'
      Object '' of type 'return_stmt'
        Object '' of type 'constant'
  Object 'work@top' of type 'module_inst'
    Object 'pkg' of type 'import_typespec'
    Object 'func_1' of type 'function'
      Object '' of type 'int_var'
      Object '' of type 'return_stmt'
        Object '' of type 'constant'
    Object 'func_1' of type 'function'
      Object '' of type 'int_var'
      Object '' of type 'return_stmt'
        Object '' of type 'constant'
    Object 'result' of type 'int_var'
    Object '' of type 'cont_assign'
      Object 'result' of type 'ref_obj'
      Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:10.1-14.10> str='\top'
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.3-8.14> str='\func_1'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.22-6.25> str='\func_1' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:7.5-7.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\func_1' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:12.5-12.11> str='\result' signed
        AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:13.8-13.25>
        AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:13.8-13.14> str='\result' in_lvalue
        AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_PARAMETER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:2.17-2.27> str='\pkg::PARAM' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) basic_prep range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:3.3-5.14> str='\pkg::func_2'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:3.22-3.25> str='\pkg::func_2' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:4.5-4.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\pkg::func_2' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.3-8.14> str='\pkg::func_1'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.22-6.25> str='\pkg::func_1' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:7.5-7.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\pkg::func_1' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      /** AST_PARAMETER **/
      wire signed [31:0] result;
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      assign result = 10;
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:10.1-14.10> str='\top' basic_prep
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.3-8.14> str='\func_1'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.22-6.25> str='\func_1' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:7.5-7.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\func_1' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:12.5-12.11> str='\result' signed basic_prep range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:13.8-13.25> basic_prep
        AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:13.8-13.14> str='\result' basic_prep in_lvalue
        AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
      AST_PARAMETER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:2.17-2.27> str='\pkg::PARAM' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) basic_prep range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:3.3-5.14> str='\pkg::func_2'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:3.22-3.25> str='\pkg::func_2' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:4.5-4.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\pkg::func_2' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_FUNCTION <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.3-8.14> str='\pkg::func_1'
        AST_WIRE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:6.22-6.25> str='\pkg::func_1' signed
          AST_RANGE <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:7.5-7.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> str='\pkg::func_1' in_lvalue
          AST_CONSTANT <tests/simple_tests/ImportedFunctionUsesAnotherFunction/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_PARAMETER **/
      wire signed [31:0] result;
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      assign result = 10;
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.44+20 (git sha1 6df0c3d9e, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.

module top();
  wire [31:0] result;
  assign result = 32'd10;
endmodule

Yosys 0.44+20 (git sha1 6df0c3d9e, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
