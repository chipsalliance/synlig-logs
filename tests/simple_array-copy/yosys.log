1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] tests/simple_tests/array-copy/top.sv:1:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/array-copy/top.sv:1:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object '' of type 'module_inst'
    Object 'a' of type 'logic_net'
    Object 'b' of type 'logic_net'
    Object '' of type 'always'
      Object '' of type 'begin'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'b' of type 'var_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'b' of type 'var_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'b' of type 'var_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'b' of type 'var_select'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'constant'
  Object 'work@top' of type 'module_inst'
    Object '' of type 'cont_assign'
      Object 'a' of type 'var_select'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'a' of type 'var_select'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'a' of type 'var_select'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'a' of type 'var_select'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'b' of type 'ref_obj'
      Object 'a' of type 'ref_obj'
    Object 'a' of type 'array_var'
      Object '' of type 'array_typespec'
      Object '' of type 'logic_typespec'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
    Object 'b' of type 'array_var'
      Object '' of type 'array_typespec'
      Object '' of type 'logic_typespec'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/array-copy/top.sv:1.1-18.10> str='\top'
      AST_WIRE <tests/simple_tests/array-copy/top.sv:2.8-2.9> str='\a' logic multirange=[ 0 1 0 2 0 2 ] multirange_swapped=[ 0 0 0 ]
        AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/array-copy/top.sv:3.8-3.9> str='\b' logic multirange=[ 0 1 0 2 0 2 ] multirange_swapped=[ 0 0 0 ]
        AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:5.9-5.23>
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:5.9-5.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
              AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:6.9-6.23>
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:6.9-6.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
              AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:7.9-7.23>
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:7.9-7.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
              AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:8.9-8.23>
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:8.9-8.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
                AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
              AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                  AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                    AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0> in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:10.9-10.14>
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:10.9-10.10> str='\b' in_lvalue
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:10.13-10.14> str='\a'
      AST_ALWAYS <tests/simple_tests/array-copy/top.sv:12.2-17.5>
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/array-copy/top.sv:12.14-17.5>
          AST_ASSERT <tests/simple_tests/array-copy/top.sv:13.3-13.27>
            AST_EQ <tests/simple_tests/array-copy/top.sv:13.10-13.25>
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:13.10-13.17> str='\b' basic_prep
                AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                    AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_ASSERT <tests/simple_tests/array-copy/top.sv:14.3-14.27>
            AST_EQ <tests/simple_tests/array-copy/top.sv:14.10-14.25>
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:14.10-14.17> str='\b' basic_prep
                AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                    AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/array-copy/top.sv:15.3-15.27>
            AST_EQ <tests/simple_tests/array-copy/top.sv:15.10-15.25>
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:15.10-15.17> str='\b' basic_prep
                AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                    AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/array-copy/top.sv:16.3-16.27>
            AST_EQ <tests/simple_tests/array-copy/top.sv:16.10-16.25>
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:16.10-16.17> str='\b' basic_prep
                AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                      AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                    AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_SUB <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_ADD <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) range=[31:0] int=2
                    AST_MUL <tests/simple_tests/array-copy/top.sv:0.0-0.0>
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      wire [3:0] a;
      wire [3:0] b;
      assign a[(((0)*(2))+((0)*(1)))+(((((0)+(1))*(1))-((0)*(1)))-(1)):((0)*(2))+((0)*(1))] = 1'b 0;
      assign a[(((0)*(2))+((1)*(1)))+(((((1)+(1))*(1))-((1)*(1)))-(1)):((0)*(2))+((1)*(1))] = 1'b 1;
      assign a[(((1)*(2))+((0)*(1)))+(((((0)+(1))*(1))-((0)*(1)))-(1)):((1)*(2))+((0)*(1))] = 1'b 1;
      assign a[(((1)*(2))+((1)*(1)))+(((((1)+(1))*(1))-((1)*(1)))-(1)):((1)*(2))+((1)*(1))] = 1'b 1;
      assign b = a;
      (* always_comb = 1 *)
      always @*
        begin
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
        end
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/array-copy/top.sv:1.1-18.10> str='\top' basic_prep
      AST_WIRE <tests/simple_tests/array-copy/top.sv:2.8-2.9> str='\a' logic basic_prep range=[3:0] multirange=[ 0 1 0 2 0 2 ] multirange_swapped=[ 0 0 0 ]
        AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/array-copy/top.sv:3.8-3.9> str='\b' logic basic_prep range=[3:0] multirange=[ 0 1 0 2 0 2 ] multirange_swapped=[ 0 0 0 ]
        AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:5.9-5.23> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:5.9-5.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[0:0] in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:6.9-6.23> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:6.9-6.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[1:1] in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:7.9-7.23> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:7.9-7.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[2:2] in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:8.9-8.23> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:8.9-8.16> str='\a' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[3:3] in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_lvalue
            AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_lvalue
        AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/array-copy/top.sv:10.9-10.14> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:10.9-10.10> str='\b' basic_prep in_lvalue
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:10.13-10.14> str='\a' basic_prep
      AST_ALWAYS <tests/simple_tests/array-copy/top.sv:12.2-17.5> basic_prep
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/array-copy/top.sv:12.14-17.5> basic_prep
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='x'(1) basic_prep range=[0:0]
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='x'(1) basic_prep range=[0:0]
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='x'(1) basic_prep range=[0:0]
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='x'(1) basic_prep range=[0:0]
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:13.3-13.27> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK' basic_prep in_lvalue
              AST_REDUCE_BOOL <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
                AST_EQ <tests/simple_tests/array-copy/top.sv:13.10-13.25> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:13.10-13.17> str='\b' basic_prep
                    AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[0:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:14.3-14.27> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK' basic_prep in_lvalue
              AST_REDUCE_BOOL <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
                AST_EQ <tests/simple_tests/array-copy/top.sv:14.10-14.25> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:14.10-14.17> str='\b' basic_prep
                    AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[1:1]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:15.3-15.27> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK' basic_prep in_lvalue
              AST_REDUCE_BOOL <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
                AST_EQ <tests/simple_tests/array-copy/top.sv:15.10-15.25> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:15.10-15.17> str='\b' basic_prep
                    AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[2:2]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_BLOCK <tests/simple_tests/array-copy/top.sv:16.3-16.27> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK' basic_prep in_lvalue
              AST_REDUCE_BOOL <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
                AST_EQ <tests/simple_tests/array-copy/top.sv:16.10-16.25> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:16.10-16.17> str='\b' basic_prep
                    AST_RANGE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep range=[3:3]
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3
                      AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3
                  AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
            AST_ASSIGN_LE <tests/simple_tests/array-copy/top.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_EN' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/array-copy/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK' basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_EN' basic_prep range=[0:0]
      AST_ASSERT <tests/simple_tests/array-copy/top.sv:13.3-13.27> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK' basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:13$1_EN' basic_prep
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK' basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_EN' basic_prep range=[0:0]
      AST_ASSERT <tests/simple_tests/array-copy/top.sv:14.3-14.27> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK' basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:14$2_EN' basic_prep
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK' basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_EN' basic_prep range=[0:0]
      AST_ASSERT <tests/simple_tests/array-copy/top.sv:15.3-15.27> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK' basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:15$3_EN' basic_prep
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK' basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_EN' basic_prep range=[0:0]
      AST_ASSERT <tests/simple_tests/array-copy/top.sv:16.3-16.27> basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK' basic_prep
        AST_IDENTIFIER <tests/simple_tests/array-copy/top.sv:0.0-0.0> str='$formal$tests/simple_tests/array-copy/top.sv:16$4_EN' basic_prep
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      wire [3:0] a;
      wire [3:0] b;
      wire \$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:13$1_EN ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:14$2_EN ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:15$3_EN ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK ;
      wire \$formal$tests/simple_tests/array-copy/top.sv:16$4_EN ;
      assign a[0:0] = 1'b 0;
      assign a[1:1] = 1'b 1;
      assign a[2:2] = 1'b 1;
      assign a[3:3] = 1'b 1;
      assign b = a;
      (* always_comb = 1 *)
      always @*
        begin
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK  <= 1'b x;
            \$formal$tests/simple_tests/array-copy/top.sv:16$4_EN  <= 1'b 0;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK  <= 1'b x;
            \$formal$tests/simple_tests/array-copy/top.sv:15$3_EN  <= 1'b 0;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK  <= 1'b x;
            \$formal$tests/simple_tests/array-copy/top.sv:14$2_EN  <= 1'b 0;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK  <= 1'b x;
            \$formal$tests/simple_tests/array-copy/top.sv:13$1_EN  <= 1'b 0;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK  <= |((b[0:0])==(1'b 0));
            \$formal$tests/simple_tests/array-copy/top.sv:13$1_EN  <= 1'b 1;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK  <= |((b[1:1])==(1'b 1));
            \$formal$tests/simple_tests/array-copy/top.sv:14$2_EN  <= 1'b 1;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK  <= |((b[2:2])==(1'b 1));
            \$formal$tests/simple_tests/array-copy/top.sv:15$3_EN  <= 1'b 1;
          end
          begin
            \$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK  <= |((b[3:3])==(1'b 1));
            \$formal$tests/simple_tests/array-copy/top.sv:16$4_EN  <= 1'b 1;
          end
        end
      /** AST_ASSERT **/
      /** AST_ASSERT **/
      /** AST_ASSERT **/
      /** AST_ASSERT **/
    endmodule
--- END OF AST DUMP ---

2. Executing HIERARCHY pass (managing design hierarchy).
Module top directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 8 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.

3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:13$1_CHECK' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:13$1_EN' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:14$2_CHECK' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:14$2_EN' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:15$3_CHECK' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:15$3_EN' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:16$4_CHECK' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
No latch inferred for signal `\top.$formal$tests/simple_tests/array-copy/top.sv:16$4_EN' from process `\top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.

3.9. Executing PROC_DFF pass (convert process syncs to FFs).

3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top.$proc$tests/simple_tests/array-copy/top.sv:12$5'.
Cleaned up 0 empty switches.

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 3 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 20 unused wires.
<suppressed ~1 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

4.16. Finished OPT passes. (There is nothing left to do.)

5. Executing ASYNC2SYNC pass.

6. Executing SAT pass (solving SAT problems in the circuit).

Setting up time step 1:
Final constraint equation: { } = { }
Imported 1 cells to SAT database.
No constraints for initial state found.


Setting up time step 1:
Final constraint equation: { } = { }
Imported 1 cells to SAT database.
Import proof for assert: 1'1 when 1'1.

** Trying induction with length 1 **

Setting up time step 2:
Final constraint equation: { } = { }
Imported 1 cells to SAT database.
Import proof for assert: 1'1 when 1'1.
Import show expression: \a
Import show expression: \b

[base case 1] Solving problem with 2 variables and 4 clauses..
Base case for induction length 1 proven.

Setting up time step 2:
Final constraint equation: { } = { }
Imported 1 cells to SAT database.
Import proof for assert: 1'1 when 1'1.
Import show expression: \a
Import show expression: \b

[induction step 1] Solving problem with 2 variables and 5 clauses..
Induction step proven: SUCCESS!

                  /$$$$$$      /$$$$$$$$     /$$$$$$$    
                 /$$__  $$    | $$_____/    | $$__  $$   
                | $$  \ $$    | $$          | $$  \ $$   
                | $$  | $$    | $$$$$       | $$  | $$   
                | $$  | $$    | $$__/       | $$  | $$   
                | $$/$$ $$    | $$          | $$  | $$   
                |  $$$$$$/ /$$| $$$$$$$$ /$$| $$$$$$$//$$
                 \____ $$$|__/|________/|__/|_______/|__/
                       \__/                              

Yosys 0.36+85 (git sha1 510d13799, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
