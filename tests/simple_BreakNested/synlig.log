1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] tests/simple_tests/BreakNested/top.sv:1:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/BreakNested/top.sv:1:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'work@top' of type 'module_inst'
    Object 'a' of type 'int_var'
    Object 'b' of type 'int_var'
    Object 'a' of type 'port'
      Object '' of type 'int_typespec'
    Object 'b' of type 'port'
      Object '' of type 'int_typespec'
    Object '' of type 'initial'
      Object '' of type 'begin'
        Object '' of type 'assignment'
          Object 'a' of type 'ref_obj'
          Object '' of type 'constant'
        Object '' of type 'assignment'
          Object 'b' of type 'ref_obj'
          Object '' of type 'constant'
        Object '' of type 'repeat'
          Object '' of type 'constant'
          Object '' of type 'begin'
            Object '' of type 'if_stmt'
              Object '' of type 'operation'
                Object 'a' of type 'ref_obj'
                Object '' of type 'constant'
              Object '' of type 'begin'
                Object '' of type 'for_stmt'
                  Object '' of type 'assignment'
                    Object 'i' of type 'int_var'
                    Object '' of type 'constant'
                  Object '' of type 'operation'
                    Object 'i' of type 'ref_obj'
                    Object '' of type 'constant'
                  Object '' of type 'operation'
                    Object 'i' of type 'ref_obj'
Warning: tests/simple_tests/BreakNested/top.sv:7: Post-incrementation operations are handled as pre-incrementation.
                  Object '' of type 'begin'
                    Object '' of type 'if_stmt'
                      Object '' of type 'operation'
                        Object 'b' of type 'ref_obj'
                        Object '' of type 'constant'
                      Object '' of type 'break_stmt'
                    Object '' of type 'assignment'
                      Object 'b' of type 'ref_obj'
                      Object '' of type 'operation'
                        Object 'b' of type 'ref_obj'
                        Object '' of type 'constant'
                Object '' of type 'break_stmt'
            Object '' of type 'assignment'
              Object 'a' of type 'ref_obj'
              Object '' of type 'operation'
                Object 'a' of type 'ref_obj'
                Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/BreakNested/top.sv:1.1-17.10> str='\top'
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:1.23-1.24> str='\a' output signed port=1 dimensions=[31:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:1.37-1.38> str='\b' output signed port=2 dimensions=[31:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_INITIAL <tests/simple_tests/BreakNested/top.sv:2.4-16.7>
        AST_BLOCK <tests/simple_tests/BreakNested/top.sv:2.12-16.7>
          AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:3.7-3.12>
            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:3.7-3.8> str='\a' in_lvalue
            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:4.7-4.12>
            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:4.7-4.8> str='\b' in_lvalue
            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0'
            AST_WIRE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$break' reg range=[0:0]
              AST_RANGE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> in_param
                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$break' in_lvalue
              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_WIRE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$continue' reg range=[0:0]
              AST_RANGE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> in_param
                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_REPEAT <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$loop0'
              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed range=[31:0] int=15
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$loop0'
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$break'
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> str='$loop0'
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$continue' in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13>
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20>
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a'
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13>
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$fordecl_block1'
                                AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$break' reg range=[0:0]
                                  AST_RANGE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$break' in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                                AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$continue' reg range=[0:0]
                                  AST_RANGE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                                AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.22-7.23> str='\i' logic signed
                                  AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> range=[31:0] in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1'
                                  AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.18-7.27>
                                    AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.22-7.23> str='\i' in_lvalue
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                                  AST_LT <tests/simple_tests/BreakNested/top.sv:7.29-7.34> in_param
                                    AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.29-7.30> str='\i' in_param
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed range=[31:0] int=5 in_param
                                  AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39>
                                    AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='\i' in_lvalue
                                    AST_ADD <tests/simple_tests/BreakNested/top.sv:7.36-7.39>
                                      AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='\i'
                                      AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                                  AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1'
                                    AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                      AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$break'
                                      AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                                        AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> str='$loop1'
                                          AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$continue' in_lvalue
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                                          AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25>
                                            AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                                              AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26>
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b'
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed range=[31:0] int=15
                                            AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0>
                                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$continue' in_lvalue
                                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$break' in_lvalue
                                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                                          AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$continue'
                                            AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16>
                                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25>
                                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' in_lvalue
                                                  AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25>
                                                    AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b'
                                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed range=[31:0] int=5
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$continue' in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$break' in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$continue'
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$continue'
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13>
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20>
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20>
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a'
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top(a, b);
      output signed [31:0] a;
      output signed [31:0] b;
      initial
        begin
          a = 0;
          b = 0;
          begin
            reg [0:0] 0 \$break ;
            \$break  = 0;
            reg [0:0] 0 \$continue ;
            /** AST_REPEAT **/
          end
        end
    endmodule
--- END OF AST DUMP ---
Warning: wire '\a' is assigned in a block at tests/simple_tests/BreakNested/top.sv:3.7-3.12.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:4.7-4.12.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:10.16-10.25.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:10.16-10.25.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:10.16-10.25.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:10.16-10.25.
Warning: wire '\b' is assigned in a block at tests/simple_tests/BreakNested/top.sv:10.16-10.25.
Warning: wire '\a' is assigned in a block at tests/simple_tests/BreakNested/top.sv:14.10-14.20.
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/BreakNested/top.sv:1.1-17.10> str='\top' basic_prep
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:1.23-1.24> str='\a' output signed basic_prep port=1 range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:1.37-1.38> str='\b' output signed basic_prep port=2 range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_INITIAL <tests/simple_tests/BreakNested/top.sv:2.4-16.7> basic_prep
        AST_BLOCK <tests/simple_tests/BreakNested/top.sv:2.12-16.7> basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:3.7-3.12> basic_prep
            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:3.7-3.8> str='\a' basic_prep in_lvalue
            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:4.7-4.12> basic_prep
            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:4.7-4.8> str='\b' basic_prep in_lvalue
            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.18-15.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:6.10-13.13> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/BreakNested/top.sv:6.13-6.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:6.13-6.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                            AST_BLOCK <tests/simple_tests/BreakNested/top.sv:6.22-13.13> basic_prep
                              AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep
                                  AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                    AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                    AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.41-11.16> basic_prep
                                      AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:8.16-9.25> basic_prep
                                        AST_REDUCE_BOOL <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_GT <tests/simple_tests/BreakNested/top.sv:8.20-8.26> basic_prep
                                            AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:8.20-8.21> str='\b' basic_prep
                                            AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed basic_prep range=[31:0] int=15
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' basic_prep in_lvalue
                                              AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                                      AST_CASE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' basic_prep
                                        AST_COND <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep
                                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:10.16-10.25> basic_prep
                                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.16-10.17> str='\b' basic_prep in_lvalue
                                              AST_ADD <tests/simple_tests/BreakNested/top.sv:10.20-10.25> basic_prep
                                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:10.20-10.21> str='\b' basic_prep
                                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:7.36-7.39> basic_prep
                                  AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:7.36-7.37> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' basic_prep in_lvalue
                                  AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                                AST_FOR <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$loop1' basic_prep
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                              AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                              AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                                AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                      AST_CASE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/BreakNested/top.sv:14.10-14.20> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.10-14.11> str='\a' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/BreakNested/top.sv:14.14-14.20> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/BreakNested/top.sv:14.14-14.15> str='\a' basic_prep
                                AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:5.7-5.13> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:7.13-7.16> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/BreakNested/top.sv:7.22-7.23> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' logic reg signed basic_prep range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/BreakNested/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/BreakNested/top.sv:0.0-0.0> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$loop1[0].i' basic_prep in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_LOCALPARAM <tests/simple_tests/BreakNested/top.sv:0.0-0.0> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$loop1[1].i' basic_prep in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
      AST_LOCALPARAM <tests/simple_tests/BreakNested/top.sv:0.0-0.0> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$loop1[2].i' basic_prep in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_param
      AST_LOCALPARAM <tests/simple_tests/BreakNested/top.sv:0.0-0.0> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$loop1[3].i' basic_prep in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
      AST_LOCALPARAM <tests/simple_tests/BreakNested/top.sv:0.0-0.0> str='$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$loop1[4].i' basic_prep in_param
        AST_CONSTANT <tests/simple_tests/BreakNested/top.sv:7.36-7.39> bits='00000000000000000000000000000100'(32) signed basic_prep range=[31:0] int=4 in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top(a, b);
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      output signed [31:0] a;
      output signed [31:0] b;
      reg [0:0] 0 \$repeatdecl_block0.$break ;
      reg [0:0] 0 \$repeatdecl_block0.$continue ;
      reg [0:0] 0 \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break ;
      reg [0:0] 0 \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue ;
      reg signed [31:0] \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i ;
      initial
        begin
          a = 0;
          b = 0;
          begin
            \$repeatdecl_block0.$break  = 0;
            begin
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          begin
                            begin
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 0;
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break )
                                1'b 0:
                                  begin
                                    \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 0;
                                    case (|((b)>(15)))
                                      1'b 1:
                                        begin
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue  = 1;
                                          \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break  = 1;
                                        end
                                    endcase
                                    case (\$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue )
                                      1'b 0:
                                        b = (b)+(5);
                                    endcase
                                  end
                              endcase
                              \$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i  = 5;
                              /** AST_FOR **/
                            end
                            \$repeatdecl_block0.$continue  = 1;
                            \$repeatdecl_block0.$break  = 1;
                          end
                          case (\$repeatdecl_block0.$continue )
                            1'b 0:
                              begin
                              end
                          endcase
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        a = (a)+(10);
                    endcase
                  end
              endcase
            end
          end
        end
    endmodule
--- END OF AST DUMP ---

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \top

2.1.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 31 empty switches in `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
Cleaned up 31 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 254 switch rules as full_case in process $proc$tests/simple_tests/BreakNested/top.sv:2$1 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 14 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~254 debug messages>

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
     1/653: $30\a[31:0]
     2/653: $180\b[31:0]
     3/653: $180$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$633
     4/653: $180$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$634
     5/653: $179\b[31:0]
     6/653: $179$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$631
     7/653: $179$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$630
     8/653: $178\b[31:0]
     9/653: $178$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$627
    10/653: $178$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$628
    11/653: $177\b[31:0]
    12/653: $177$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$625
    13/653: $177$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$624
    14/653: $176\b[31:0]
    15/653: $176$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$621
    16/653: $176$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$622
    17/653: $175\b[31:0]
    18/653: $175$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$619
    19/653: $175$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$618
    20/653: $174\b[31:0]
    21/653: $174$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$615
    22/653: $174$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$616
    23/653: $173\b[31:0]
    24/653: $173$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$613
    25/653: $173$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$612
    26/653: $172\b[31:0]
    27/653: $172$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$609
    28/653: $172$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$610
    29/653: $171\b[31:0]
    30/653: $171$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$607
    31/653: $171$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$606
    32/653: $30$repeatdecl_block0.$break[0:0]$605
    33/653: $30$repeatdecl_block0.$continue[0:0]$601
    34/653: $30$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$604
    35/653: $170\b[31:0]
    36/653: $170$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$603
    37/653: $170$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$602
    38/653: $29\a[31:0]
    39/653: $169\b[31:0]
    40/653: $29$repeatdecl_block0.$break[0:0]$599
    41/653: $29$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$598
    42/653: $169$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$597
    43/653: $169$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$596
    44/653: $29$repeatdecl_block0.$continue[0:0]$595
    45/653: $28\a[31:0]
    46/653: $168\b[31:0]
    47/653: $168$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$591
    48/653: $168$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$592
    49/653: $167\b[31:0]
    50/653: $167$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$589
    51/653: $167$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$588
    52/653: $166\b[31:0]
    53/653: $166$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$585
    54/653: $166$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$586
    55/653: $165\b[31:0]
    56/653: $165$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$583
    57/653: $165$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$582
    58/653: $164\b[31:0]
    59/653: $164$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$579
    60/653: $164$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$580
    61/653: $163\b[31:0]
    62/653: $163$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$577
    63/653: $163$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$576
    64/653: $162\b[31:0]
    65/653: $162$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$573
    66/653: $162$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$574
    67/653: $161\b[31:0]
    68/653: $161$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$571
    69/653: $161$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$570
    70/653: $160\b[31:0]
    71/653: $160$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$567
    72/653: $160$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$568
    73/653: $159\b[31:0]
    74/653: $159$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$565
    75/653: $159$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$564
    76/653: $28$repeatdecl_block0.$break[0:0]$563
    77/653: $28$repeatdecl_block0.$continue[0:0]$559
    78/653: $28$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$562
    79/653: $158\b[31:0]
    80/653: $158$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$561
    81/653: $158$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$560
    82/653: $27\a[31:0]
    83/653: $157\b[31:0]
    84/653: $27$repeatdecl_block0.$break[0:0]$557
    85/653: $27$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$556
    86/653: $157$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$555
    87/653: $157$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$554
    88/653: $27$repeatdecl_block0.$continue[0:0]$553
    89/653: $26\a[31:0]
    90/653: $156\b[31:0]
    91/653: $156$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$549
    92/653: $156$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$550
    93/653: $155\b[31:0]
    94/653: $155$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$547
    95/653: $155$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$546
    96/653: $154\b[31:0]
    97/653: $154$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$543
    98/653: $154$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$544
    99/653: $153\b[31:0]
   100/653: $153$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$541
   101/653: $153$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$540
   102/653: $152\b[31:0]
   103/653: $152$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$537
   104/653: $152$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$538
   105/653: $151\b[31:0]
   106/653: $151$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$535
   107/653: $151$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$534
   108/653: $150\b[31:0]
   109/653: $150$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$531
   110/653: $150$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$532
   111/653: $149\b[31:0]
   112/653: $149$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$529
   113/653: $149$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$528
   114/653: $148\b[31:0]
   115/653: $148$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$525
   116/653: $148$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$526
   117/653: $147\b[31:0]
   118/653: $147$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$523
   119/653: $147$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$522
   120/653: $26$repeatdecl_block0.$break[0:0]$521
   121/653: $26$repeatdecl_block0.$continue[0:0]$517
   122/653: $26$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$520
   123/653: $146\b[31:0]
   124/653: $146$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$519
   125/653: $146$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$518
   126/653: $25\a[31:0]
   127/653: $145\b[31:0]
   128/653: $25$repeatdecl_block0.$break[0:0]$515
   129/653: $25$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$514
   130/653: $145$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$513
   131/653: $145$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$512
   132/653: $25$repeatdecl_block0.$continue[0:0]$511
   133/653: $24\a[31:0]
   134/653: $144\b[31:0]
   135/653: $144$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$507
   136/653: $144$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$508
   137/653: $143\b[31:0]
   138/653: $143$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$505
   139/653: $143$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$504
   140/653: $142\b[31:0]
   141/653: $142$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$501
   142/653: $142$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$502
   143/653: $141\b[31:0]
   144/653: $141$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$499
   145/653: $141$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$498
   146/653: $140\b[31:0]
   147/653: $140$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$495
   148/653: $140$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$496
   149/653: $139\b[31:0]
   150/653: $139$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$493
   151/653: $139$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$492
   152/653: $138\b[31:0]
   153/653: $138$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$489
   154/653: $138$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$490
   155/653: $137\b[31:0]
   156/653: $137$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$487
   157/653: $137$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$486
   158/653: $136\b[31:0]
   159/653: $136$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$483
   160/653: $136$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$484
   161/653: $135\b[31:0]
   162/653: $135$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$481
   163/653: $135$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$480
   164/653: $24$repeatdecl_block0.$break[0:0]$479
   165/653: $24$repeatdecl_block0.$continue[0:0]$475
   166/653: $24$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$478
   167/653: $134\b[31:0]
   168/653: $134$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$477
   169/653: $134$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$476
   170/653: $23\a[31:0]
   171/653: $133\b[31:0]
   172/653: $23$repeatdecl_block0.$break[0:0]$473
   173/653: $23$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$472
   174/653: $133$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$471
   175/653: $133$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$470
   176/653: $23$repeatdecl_block0.$continue[0:0]$469
   177/653: $22\a[31:0]
   178/653: $132\b[31:0]
   179/653: $132$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$465
   180/653: $132$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$466
   181/653: $131\b[31:0]
   182/653: $131$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$463
   183/653: $131$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$462
   184/653: $130\b[31:0]
   185/653: $130$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$459
   186/653: $130$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$460
   187/653: $129\b[31:0]
   188/653: $129$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$457
   189/653: $129$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$456
   190/653: $128\b[31:0]
   191/653: $128$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$453
   192/653: $128$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$454
   193/653: $127\b[31:0]
   194/653: $127$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$451
   195/653: $127$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$450
   196/653: $126\b[31:0]
   197/653: $126$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$447
   198/653: $126$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$448
   199/653: $125\b[31:0]
   200/653: $125$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$445
   201/653: $125$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$444
   202/653: $124\b[31:0]
   203/653: $124$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$441
   204/653: $124$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$442
   205/653: $123\b[31:0]
   206/653: $123$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$439
   207/653: $123$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$438
   208/653: $22$repeatdecl_block0.$break[0:0]$437
   209/653: $22$repeatdecl_block0.$continue[0:0]$433
   210/653: $22$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$436
   211/653: $122\b[31:0]
   212/653: $122$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$435
   213/653: $122$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$434
   214/653: $21\a[31:0]
   215/653: $121\b[31:0]
   216/653: $21$repeatdecl_block0.$break[0:0]$431
   217/653: $21$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$430
   218/653: $121$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$429
   219/653: $121$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$428
   220/653: $21$repeatdecl_block0.$continue[0:0]$427
   221/653: $20\a[31:0]
   222/653: $120\b[31:0]
   223/653: $120$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$423
   224/653: $120$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$424
   225/653: $119\b[31:0]
   226/653: $119$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$421
   227/653: $119$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$420
   228/653: $118\b[31:0]
   229/653: $118$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$417
   230/653: $118$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$418
   231/653: $117\b[31:0]
   232/653: $117$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$415
   233/653: $117$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$414
   234/653: $116\b[31:0]
   235/653: $116$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$411
   236/653: $116$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$412
   237/653: $115\b[31:0]
   238/653: $115$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$409
   239/653: $115$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$408
   240/653: $114\b[31:0]
   241/653: $114$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$405
   242/653: $114$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$406
   243/653: $113\b[31:0]
   244/653: $113$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$403
   245/653: $113$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$402
   246/653: $112\b[31:0]
   247/653: $112$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$399
   248/653: $112$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$400
   249/653: $111\b[31:0]
   250/653: $111$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$397
   251/653: $111$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$396
   252/653: $20$repeatdecl_block0.$break[0:0]$395
   253/653: $20$repeatdecl_block0.$continue[0:0]$391
   254/653: $20$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$394
   255/653: $110\b[31:0]
   256/653: $110$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$393
   257/653: $110$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$392
   258/653: $19\a[31:0]
   259/653: $109\b[31:0]
   260/653: $19$repeatdecl_block0.$break[0:0]$389
   261/653: $19$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$388
   262/653: $109$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$387
   263/653: $109$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$386
   264/653: $19$repeatdecl_block0.$continue[0:0]$385
   265/653: $18\a[31:0]
   266/653: $108\b[31:0]
   267/653: $108$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$381
   268/653: $108$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$382
   269/653: $107\b[31:0]
   270/653: $107$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$379
   271/653: $107$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$378
   272/653: $106\b[31:0]
   273/653: $106$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$375
   274/653: $106$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$376
   275/653: $105\b[31:0]
   276/653: $105$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$373
   277/653: $105$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$372
   278/653: $104\b[31:0]
   279/653: $104$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$369
   280/653: $104$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$370
   281/653: $103\b[31:0]
   282/653: $103$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$367
   283/653: $103$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$366
   284/653: $102\b[31:0]
   285/653: $102$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$363
   286/653: $102$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$364
   287/653: $101\b[31:0]
   288/653: $101$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$361
   289/653: $101$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$360
   290/653: $100\b[31:0]
   291/653: $100$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$357
   292/653: $100$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$358
   293/653: $99\b[31:0]
   294/653: $99$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$355
   295/653: $99$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$354
   296/653: $18$repeatdecl_block0.$break[0:0]$353
   297/653: $18$repeatdecl_block0.$continue[0:0]$349
   298/653: $18$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$352
   299/653: $98\b[31:0]
   300/653: $98$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$351
   301/653: $98$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$350
   302/653: $17\a[31:0]
   303/653: $97\b[31:0]
   304/653: $17$repeatdecl_block0.$break[0:0]$347
   305/653: $17$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$346
   306/653: $97$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$345
   307/653: $97$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$344
   308/653: $17$repeatdecl_block0.$continue[0:0]$343
   309/653: $16\a[31:0]
   310/653: $96\b[31:0]
   311/653: $96$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$339
   312/653: $96$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$340
   313/653: $95\b[31:0]
   314/653: $95$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$337
   315/653: $95$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$336
   316/653: $94\b[31:0]
   317/653: $94$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$333
   318/653: $94$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$334
   319/653: $93\b[31:0]
   320/653: $93$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$331
   321/653: $93$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$330
   322/653: $92\b[31:0]
   323/653: $92$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$327
   324/653: $92$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$328
   325/653: $91\b[31:0]
   326/653: $91$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$325
   327/653: $91$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$324
   328/653: $90\b[31:0]
   329/653: $90$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$321
   330/653: $90$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$322
   331/653: $89\b[31:0]
   332/653: $89$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$319
   333/653: $89$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$318
   334/653: $88\b[31:0]
   335/653: $88$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$315
   336/653: $88$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$316
   337/653: $87\b[31:0]
   338/653: $87$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$313
   339/653: $87$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$312
   340/653: $16$repeatdecl_block0.$break[0:0]$311
   341/653: $16$repeatdecl_block0.$continue[0:0]$307
   342/653: $16$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$310
   343/653: $86\b[31:0]
   344/653: $86$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$309
   345/653: $86$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$308
   346/653: $15\a[31:0]
   347/653: $85\b[31:0]
   348/653: $15$repeatdecl_block0.$break[0:0]$305
   349/653: $15$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$304
   350/653: $85$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$303
   351/653: $85$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$302
   352/653: $15$repeatdecl_block0.$continue[0:0]$301
   353/653: $14\a[31:0]
   354/653: $84\b[31:0]
   355/653: $84$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$297
   356/653: $84$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$298
   357/653: $83\b[31:0]
   358/653: $83$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$295
   359/653: $83$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$294
   360/653: $82\b[31:0]
   361/653: $82$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$291
   362/653: $82$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$292
   363/653: $81\b[31:0]
   364/653: $81$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$289
   365/653: $81$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$288
   366/653: $80\b[31:0]
   367/653: $80$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$285
   368/653: $80$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$286
   369/653: $79\b[31:0]
   370/653: $79$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$283
   371/653: $79$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$282
   372/653: $78\b[31:0]
   373/653: $78$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$279
   374/653: $78$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$280
   375/653: $77\b[31:0]
   376/653: $77$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$277
   377/653: $77$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$276
   378/653: $76\b[31:0]
   379/653: $76$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$273
   380/653: $76$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$274
   381/653: $75\b[31:0]
   382/653: $75$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$271
   383/653: $75$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$270
   384/653: $14$repeatdecl_block0.$break[0:0]$269
   385/653: $14$repeatdecl_block0.$continue[0:0]$265
   386/653: $14$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$268
   387/653: $74\b[31:0]
   388/653: $74$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$267
   389/653: $74$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$266
   390/653: $13\a[31:0]
   391/653: $73\b[31:0]
   392/653: $13$repeatdecl_block0.$break[0:0]$263
   393/653: $13$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$262
   394/653: $73$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$261
   395/653: $73$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$260
   396/653: $13$repeatdecl_block0.$continue[0:0]$259
   397/653: $12\a[31:0]
   398/653: $72\b[31:0]
   399/653: $72$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$255
   400/653: $72$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$256
   401/653: $71\b[31:0]
   402/653: $71$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$253
   403/653: $71$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$252
   404/653: $70\b[31:0]
   405/653: $70$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$249
   406/653: $70$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$250
   407/653: $69\b[31:0]
   408/653: $69$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$247
   409/653: $69$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$246
   410/653: $68\b[31:0]
   411/653: $68$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$243
   412/653: $68$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$244
   413/653: $67\b[31:0]
   414/653: $67$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$241
   415/653: $67$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$240
   416/653: $66\b[31:0]
   417/653: $66$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$237
   418/653: $66$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$238
   419/653: $65\b[31:0]
   420/653: $65$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$235
   421/653: $65$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$234
   422/653: $64\b[31:0]
   423/653: $64$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$231
   424/653: $64$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$232
   425/653: $63\b[31:0]
   426/653: $63$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$229
   427/653: $63$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$228
   428/653: $12$repeatdecl_block0.$break[0:0]$227
   429/653: $12$repeatdecl_block0.$continue[0:0]$223
   430/653: $12$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$226
   431/653: $62\b[31:0]
   432/653: $62$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$225
   433/653: $62$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$224
   434/653: $11\a[31:0]
   435/653: $61\b[31:0]
   436/653: $11$repeatdecl_block0.$break[0:0]$221
   437/653: $11$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$220
   438/653: $61$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$219
   439/653: $61$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$218
   440/653: $11$repeatdecl_block0.$continue[0:0]$217
   441/653: $10\a[31:0]
   442/653: $60\b[31:0]
   443/653: $60$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$213
   444/653: $60$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$214
   445/653: $59\b[31:0]
   446/653: $59$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$211
   447/653: $59$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$210
   448/653: $58\b[31:0]
   449/653: $58$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$207
   450/653: $58$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$208
   451/653: $57\b[31:0]
   452/653: $57$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$205
   453/653: $57$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$204
   454/653: $56\b[31:0]
   455/653: $56$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$201
   456/653: $56$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$202
   457/653: $55\b[31:0]
   458/653: $55$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$199
   459/653: $55$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$198
   460/653: $54\b[31:0]
   461/653: $54$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$195
   462/653: $54$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$196
   463/653: $53\b[31:0]
   464/653: $53$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$193
   465/653: $53$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$192
   466/653: $52\b[31:0]
   467/653: $52$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$189
   468/653: $52$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$190
   469/653: $51\b[31:0]
   470/653: $51$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$187
   471/653: $51$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$186
   472/653: $10$repeatdecl_block0.$break[0:0]$185
   473/653: $10$repeatdecl_block0.$continue[0:0]$181
   474/653: $10$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$184
   475/653: $50\b[31:0]
   476/653: $50$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$183
   477/653: $50$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$182
   478/653: $9\a[31:0]
   479/653: $49\b[31:0]
   480/653: $9$repeatdecl_block0.$break[0:0]$179
   481/653: $9$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$178
   482/653: $49$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$177
   483/653: $49$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$176
   484/653: $9$repeatdecl_block0.$continue[0:0]$175
   485/653: $8\a[31:0]
   486/653: $48\b[31:0]
   487/653: $48$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$171
   488/653: $48$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$172
   489/653: $47\b[31:0]
   490/653: $47$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$169
   491/653: $47$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$168
   492/653: $46\b[31:0]
   493/653: $46$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$165
   494/653: $46$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$166
   495/653: $45\b[31:0]
   496/653: $45$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$163
   497/653: $45$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$162
   498/653: $44\b[31:0]
   499/653: $44$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$159
   500/653: $44$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$160
   501/653: $43\b[31:0]
   502/653: $43$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$157
   503/653: $43$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$156
   504/653: $42\b[31:0]
   505/653: $42$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$153
   506/653: $42$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$154
   507/653: $41\b[31:0]
   508/653: $41$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$151
   509/653: $41$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$150
   510/653: $40\b[31:0]
   511/653: $40$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$147
   512/653: $40$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$148
   513/653: $39\b[31:0]
   514/653: $39$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$145
   515/653: $39$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$144
   516/653: $8$repeatdecl_block0.$break[0:0]$143
   517/653: $8$repeatdecl_block0.$continue[0:0]$139
   518/653: $8$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$142
   519/653: $38\b[31:0]
   520/653: $38$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$141
   521/653: $38$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$140
   522/653: $7\a[31:0]
   523/653: $37\b[31:0]
   524/653: $7$repeatdecl_block0.$break[0:0]$137
   525/653: $7$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$136
   526/653: $37$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$135
   527/653: $37$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$134
   528/653: $7$repeatdecl_block0.$continue[0:0]$133
   529/653: $6\a[31:0]
   530/653: $36\b[31:0]
   531/653: $36$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$129
   532/653: $36$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$130
   533/653: $35\b[31:0]
   534/653: $35$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$127
   535/653: $35$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$126
   536/653: $34\b[31:0]
   537/653: $34$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$123
   538/653: $34$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$124
   539/653: $33\b[31:0]
   540/653: $33$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$121
   541/653: $33$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$120
   542/653: $32\b[31:0]
   543/653: $32$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$117
   544/653: $32$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$118
   545/653: $31\b[31:0]
   546/653: $31$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$115
   547/653: $31$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$114
   548/653: $30\b[31:0]
   549/653: $30$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$111
   550/653: $30$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$112
   551/653: $29\b[31:0]
   552/653: $29$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$109
   553/653: $29$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$108
   554/653: $28\b[31:0]
   555/653: $28$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$105
   556/653: $28$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$106
   557/653: $27\b[31:0]
   558/653: $27$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$103
   559/653: $27$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$102
   560/653: $6$repeatdecl_block0.$break[0:0]$101
   561/653: $6$repeatdecl_block0.$continue[0:0]$97
   562/653: $6$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$100
   563/653: $26\b[31:0]
   564/653: $26$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$99
   565/653: $26$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$98
   566/653: $5\a[31:0]
   567/653: $25\b[31:0]
   568/653: $5$repeatdecl_block0.$break[0:0]$95
   569/653: $5$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$94
   570/653: $25$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$93
   571/653: $25$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$92
   572/653: $5$repeatdecl_block0.$continue[0:0]$91
   573/653: $4\a[31:0]
   574/653: $24\b[31:0]
   575/653: $24$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$87
   576/653: $24$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$88
   577/653: $23\b[31:0]
   578/653: $23$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$85
   579/653: $23$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$84
   580/653: $22\b[31:0]
   581/653: $22$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$81
   582/653: $22$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$82
   583/653: $21\b[31:0]
   584/653: $21$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$79
   585/653: $21$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$78
   586/653: $20\b[31:0]
   587/653: $20$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$75
   588/653: $20$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$76
   589/653: $19\b[31:0]
   590/653: $19$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$73
   591/653: $19$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$72
   592/653: $18\b[31:0]
   593/653: $18$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$69
   594/653: $18$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$70
   595/653: $17\b[31:0]
   596/653: $17$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$67
   597/653: $17$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$66
   598/653: $16\b[31:0]
   599/653: $16$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$63
   600/653: $16$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$64
   601/653: $15\b[31:0]
   602/653: $15$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$61
   603/653: $15$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$60
   604/653: $4$repeatdecl_block0.$break[0:0]$59
   605/653: $4$repeatdecl_block0.$continue[0:0]$55
   606/653: $4$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$58
   607/653: $14\b[31:0]
   608/653: $14$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$57
   609/653: $14$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$56
   610/653: $3\a[31:0]
   611/653: $13\b[31:0]
   612/653: $3$repeatdecl_block0.$break[0:0]$53
   613/653: $3$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$52
   614/653: $13$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$51
   615/653: $13$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$50
   616/653: $3$repeatdecl_block0.$continue[0:0]$49
   617/653: $2\a[31:0]
   618/653: $12\b[31:0]
   619/653: $12$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$45
   620/653: $12$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$46
   621/653: $11\b[31:0]
   622/653: $11$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$43
   623/653: $11$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$42
   624/653: $10\b[31:0]
   625/653: $10$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$39
   626/653: $10$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$40
   627/653: $9\b[31:0]
   628/653: $9$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$37
   629/653: $9$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$36
   630/653: $8\b[31:0]
   631/653: $8$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$33
   632/653: $8$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$34
   633/653: $7\b[31:0]
   634/653: $7$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$31
   635/653: $7$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$30
   636/653: $6\b[31:0]
   637/653: $6$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$27
   638/653: $6$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$28
   639/653: $5\b[31:0]
   640/653: $5$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$25
   641/653: $5$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$24
   642/653: $4\b[31:0]
   643/653: $4$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$21
   644/653: $4$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$22
   645/653: $3\b[31:0]
   646/653: $3$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$19
   647/653: $3$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$18
   648/653: $2$repeatdecl_block0.$break[0:0]$17
   649/653: $2$repeatdecl_block0.$continue[0:0]$13
   650/653: $2$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i[31:0]$16
   651/653: $2\b[31:0]
   652/653: $2$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue[0:0]$15
   653/653: $2$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break[0:0]$14

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.$repeatdecl_block0.$continue' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
No latch inferred for signal `\top.$repeatdecl_block0.$break' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
No latch inferred for signal `\top.\b' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
No latch inferred for signal `\top.\a' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
Latch inferred for signal `\top.$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$break' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1': $auto$proc_dlatch.cc:433:proc_dlatch$5905
Latch inferred for signal `\top.$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.$continue' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1': $auto$proc_dlatch.cc:433:proc_dlatch$6280
Latch inferred for signal `\top.$repeatdecl_block0.$loop0.$loop0.$fordecl_block1.i' from process `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1': $auto$proc_dlatch.cc:433:proc_dlatch$6639

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 254 empty switches in `\top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
Removing empty process `top.$proc$tests/simple_tests/BreakNested/top.sv:2$1'.
Cleaned up 254 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4616 debug messages>

2.3. Executing FUTURE pass.

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 4909 unused wires.
<suppressed ~4 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.8. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.4. Finished fast OPT passes.

2.12. Printing statistics.

=== top ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of ports:                  2
   Number of port bits:             64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

2.13. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing Verilog backend.

3.1. Executing BMUXMAP pass.

3.2. Executing DEMUXMAP pass.
/* Generated by Synlig (git sha1 1f3b29046, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.

(* top =  1  *)
(* src = "tests/simple_tests/BreakNested/top.sv:1.1-17.10" *)
module top(a, b);
  (* src = "tests/simple_tests/BreakNested/top.sv:1.23-1.24" *)
  output [31:0] a;
  wire [31:0] a;
  (* src = "tests/simple_tests/BreakNested/top.sv:1.37-1.38" *)
  output [31:0] b;
  wire [31:0] b;
  assign a = 32'd110;
  assign b = 32'd20;
endmodule

4. Executing Verilog backend.

4.1. Executing BMUXMAP pass.

4.2. Executing DEMUXMAP pass.
Dumping module `\top'.

5. Executing SIM pass (simulate the circuit).

===== 0 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 5 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 10 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 15 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 20 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 25 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 30 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 35 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 40 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 45 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 50 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 55 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 60 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 65 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 70 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 75 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 80 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 85 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 90 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 95 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 100 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 105 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 110 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 115 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 120 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 125 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 130 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 135 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 140 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 145 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 150 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 155 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 160 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 165 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 170 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 175 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 180 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 185 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 190 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 195 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110

===== 200 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 20
[top] get \a: 110
[top] get \b: 20
[top] get \a: 110

Warnings: 5 unique messages, 9 total
