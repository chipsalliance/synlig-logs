1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] tests/simple_tests/bitwise_operations_reverted_range/top.sv:1:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[NTE:CP0309] tests/simple_tests/bitwise_operations_reverted_range/top.sv:4:12: Implicit port type (wire) for "out_1",
there are 17 more instances of this message.
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/bitwise_operations_reverted_range/top.sv:1:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 1.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 6
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object '' of type 'module_inst'
    Object 'in' of type 'logic_net'
    Object 'out_1' of type 'logic_net'
    Object 'out_2' of type 'logic_net'
    Object 'out_3' of type 'logic_net'
    Object 'out_4' of type 'logic_net'
    Object 'out_5' of type 'logic_net'
    Object 'out_6' of type 'logic_net'
    Object 'out_7' of type 'logic_net'
    Object 'out_8' of type 'logic_net'
    Object 'out_9' of type 'logic_net'
    Object 'out_10' of type 'logic_net'
    Object 'out_11' of type 'logic_net'
    Object 'out_12' of type 'logic_net'
    Object 'out_13' of type 'logic_net'
    Object 'out_14' of type 'logic_net'
    Object 'out_15' of type 'logic_net'
    Object 'out_16' of type 'logic_net'
    Object 'out_17' of type 'logic_net'
    Object 'out_18' of type 'logic_net'
  Object 'work@top' of type 'module_inst'
    Object 'in' of type 'port'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'out_1' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_2' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_3' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_4' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_5' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_6' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_7' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_8' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_9' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_10' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_11' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_12' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_13' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_14' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_15' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_16' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_17' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'out_18' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'in' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'out_1' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_2' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_3' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_4' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_5' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_6' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_7' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_8' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_9' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_10' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_11' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_12' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_13' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_14' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_15' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_16' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_17' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'out_18' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object '' of type 'cont_assign'
      Object 'out_1' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_2' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_3' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_4' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_5' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_6' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_7' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_8' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_9' of type 'ref_obj'
      Object 'in' of type 'bit_select'
        Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_10' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_11' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_12' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_13' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_14' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_15' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_16' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'bit_select'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_17' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'part_select'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object 'in' of type 'part_select'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'out_18' of type 'ref_obj'
      Object '' of type 'operation'
        Object 'in' of type 'part_select'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object 'in' of type 'part_select'
          Object '' of type 'constant'
          Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:1.1-26.10> str='\top'
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:3.17-3.19> str='\in' input logic port=1 multirange=[ 0 4 ] multirange_swapped=[ 1 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:3.11-3.16> basic_prep swapped_range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.12-4.17> str='\out_1' output logic port=2 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.19-4.24> str='\out_2' output logic port=3 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.26-4.31> str='\out_3' output logic port=4 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.33-4.38> str='\out_4' output logic port=5 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.40-4.45> str='\out_5' output logic port=6 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.47-4.52> str='\out_6' output logic port=7 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.54-4.59> str='\out_7' output logic port=8 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.61-4.66> str='\out_8' output logic port=9 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.68-4.73> str='\out_9' output logic port=10 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.75-4.81> str='\out_10' output logic port=11 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.12-5.18> str='\out_11' output logic port=12 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.20-5.26> str='\out_12' output logic port=13 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.28-5.34> str='\out_13' output logic port=14 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.36-5.42> str='\out_14' output logic port=15 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.44-5.50> str='\out_15' output logic port=16 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.52-5.58> str='\out_16' output logic port=17 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.60-5.66> str='\out_17' output logic port=18 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.68-5.74> str='\out_18' output logic port=19 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.12-7.34>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.12-7.17> str='\out_1' in_lvalue
        AST_BIT_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.21-7.34>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.24-7.25> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.24-7.25>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.32-7.33> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.32-7.33>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.12-8.34>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.12-8.17> str='\out_2' in_lvalue
        AST_BIT_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.21-8.34>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.24-8.25> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.24-8.25>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.32-8.33> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.32-8.33>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.12-9.35>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.12-9.17> str='\out_3' in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0>
          AST_BIT_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.21-9.35>
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.24-9.25> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.24-9.25>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.33-9.34> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.33-9.34>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.12-10.35>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.12-10.17> str='\out_4' in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0>
          AST_BIT_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.21-10.35>
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.24-10.25> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.24-10.25>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.33-10.34> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.33-10.34>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.12-11.34>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.12-11.17> str='\out_5' in_lvalue
        AST_BIT_XOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.21-11.34>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.24-11.25> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.24-11.25>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.32-11.33> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.32-11.33>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.12-12.35>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.12-12.17> str='\out_6' in_lvalue
        AST_BIT_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.21-12.35>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.24-12.25> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.24-12.25>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.33-12.34> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.33-12.34>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.12-13.35>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.12-13.17> str='\out_7' in_lvalue
        AST_BIT_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.21-13.35>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.24-13.25> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.24-13.25>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.33-13.34> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.33-13.34>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.12-14.27>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.12-14.17> str='\out_8' in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.21-14.27>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.25-14.26> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.25-14.26>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.12-15.26>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.12-15.17> str='\out_9' in_lvalue
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.24-15.25> str='\in'
          AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.24-15.25>
            AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.12-16.28>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.12-16.18> str='\out_10' in_lvalue
        AST_REDUCE_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.22-16.28>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.26-16.27> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.26-16.27>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.12-17.28>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.12-17.18> str='\out_11' in_lvalue
        AST_REDUCE_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.22-17.28>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.26-17.27> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.26-17.27>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.12-18.29>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.12-18.18> str='\out_12' in_lvalue
        AST_LOGIC_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0>
          AST_REDUCE_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.22-18.29>
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.27-18.28> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.27-18.28>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.12-19.29>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.12-19.18> str='\out_13' in_lvalue
        AST_LOGIC_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0>
          AST_REDUCE_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.22-19.29>
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.27-19.28> str='\in'
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.27-19.28>
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.12-20.28>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.12-20.18> str='\out_14' in_lvalue
        AST_REDUCE_XOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.22-20.28>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.26-20.27> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.26-20.27>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.12-21.29>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.12-21.18> str='\out_15' in_lvalue
        AST_REDUCE_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.22-21.29>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.27-21.28> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.27-21.28>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.12-22.29>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.12-22.18> str='\out_16' in_lvalue
        AST_REDUCE_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.22-22.29>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.27-22.28> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.27-22.28>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.12-23.41>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.12-23.18> str='\out_17' in_lvalue
        AST_LOGIC_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.41>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.29> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.29>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.33-23.41> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.33-23.41>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.12-24.41>
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.12-24.18> str='\out_18' in_lvalue
        AST_LOGIC_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.41>
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.29> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.29>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.33-24.41> str='\in'
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.33-24.41>
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top(in, out_1, out_2, out_3, out_4, out_5, out_6, out_7, out_8, out_9, out_10, out_11, out_12, out_13, out_14, out_15, out_16, out_17, out_18);
      input [0:3] in;
      output [0:0] out_1;
      output [0:0] out_2;
      output [0:0] out_3;
      output [0:0] out_4;
      output [0:0] out_5;
      output [0:0] out_6;
      output [0:0] out_7;
      output [0:0] out_8;
      output [0:0] out_9;
      output [0:0] out_10;
      output [0:0] out_11;
      output [0:0] out_12;
      output [0:0] out_13;
      output [0:0] out_14;
      output [0:0] out_15;
      output [0:0] out_16;
      output [0:0] out_17;
      output [0:0] out_18;
      assign out_1 = (in[0])&(in[1]);
      assign out_2 = (in[0])|(in[1]);
      assign out_3 = ~((in[0])&(in[1]));
      assign out_4 = ~((in[0])|(in[1]));
      assign out_5 = (in[0])^(in[1]);
      assign out_6 = (in[0])~^(in[1]);
      assign out_7 = (in[0])~^(in[1]);
      assign out_8 = ~(in[0]);
      assign out_9 = in[0];
      assign out_10 = &(in[0]);
      assign out_11 = |(in[0]);
      assign out_12 = !(&(in[0]));
      assign out_13 = !(|(in[0]));
      assign out_14 = ^(in[0]);
      assign out_15 = ~^(in[0]);
      assign out_16 = ~^(in[0]);
      assign out_17 = (in[0:1])&&(in[2:3]);
      assign out_18 = (in[0:1])||(in[2:3]);
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:1.1-26.10> str='\top' basic_prep
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:3.17-3.19> str='\in' input logic basic_prep port=1 swapped_range=[3:0] multirange=[ 0 4 ] multirange_swapped=[ 1 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:3.11-3.16> basic_prep swapped_range=[3:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.12-4.17> str='\out_1' output logic basic_prep port=2 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.19-4.24> str='\out_2' output logic basic_prep port=3 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.26-4.31> str='\out_3' output logic basic_prep port=4 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.33-4.38> str='\out_4' output logic basic_prep port=5 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.40-4.45> str='\out_5' output logic basic_prep port=6 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.47-4.52> str='\out_6' output logic basic_prep port=7 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.54-4.59> str='\out_7' output logic basic_prep port=8 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.61-4.66> str='\out_8' output logic basic_prep port=9 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.68-4.73> str='\out_9' output logic basic_prep port=10 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.75-4.81> str='\out_10' output logic basic_prep port=11 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.12-5.18> str='\out_11' output logic basic_prep port=12 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.20-5.26> str='\out_12' output logic basic_prep port=13 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.28-5.34> str='\out_13' output logic basic_prep port=14 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.36-5.42> str='\out_14' output logic basic_prep port=15 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.44-5.50> str='\out_15' output logic basic_prep port=16 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.52-5.58> str='\out_16' output logic basic_prep port=17 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.60-5.66> str='\out_17' output logic basic_prep port=18 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.68-5.74> str='\out_18' output logic basic_prep port=19 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.12-7.34> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.12-7.17> str='\out_1' basic_prep in_lvalue
        AST_BIT_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.21-7.34> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.24-7.25> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.24-7.25> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.32-7.33> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.32-7.33> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.12-8.34> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.12-8.17> str='\out_2' basic_prep in_lvalue
        AST_BIT_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.21-8.34> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.24-8.25> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.24-8.25> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.32-8.33> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:8.32-8.33> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.12-9.35> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.12-9.17> str='\out_3' basic_prep in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep
          AST_BIT_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.21-9.35> basic_prep
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.24-9.25> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.24-9.25> basic_prep range=[0:0]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.33-9.34> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:9.33-9.34> basic_prep range=[1:1]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.12-10.35> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.12-10.17> str='\out_4' basic_prep in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep
          AST_BIT_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.21-10.35> basic_prep
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.24-10.25> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.24-10.25> basic_prep range=[0:0]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.33-10.34> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.33-10.34> basic_prep range=[1:1]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.12-11.34> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.12-11.17> str='\out_5' basic_prep in_lvalue
        AST_BIT_XOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.21-11.34> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.24-11.25> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.24-11.25> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.32-11.33> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.32-11.33> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.12-12.35> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.12-12.17> str='\out_6' basic_prep in_lvalue
        AST_BIT_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.21-12.35> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.24-12.25> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.24-12.25> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.33-12.34> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.33-12.34> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.12-13.35> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.12-13.17> str='\out_7' basic_prep in_lvalue
        AST_BIT_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.21-13.35> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.24-13.25> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.24-13.25> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.33-13.34> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:13.33-13.34> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.12-14.27> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.12-14.17> str='\out_8' basic_prep in_lvalue
        AST_BIT_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.21-14.27> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.25-14.26> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.25-14.26> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.12-15.26> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.12-15.17> str='\out_9' basic_prep in_lvalue
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.24-15.25> str='\in' basic_prep
          AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:15.24-15.25> basic_prep range=[0:0]
            AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.12-16.28> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.12-16.18> str='\out_10' basic_prep in_lvalue
        AST_REDUCE_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.22-16.28> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.26-16.27> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:16.26-16.27> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.12-17.28> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.12-17.18> str='\out_11' basic_prep in_lvalue
        AST_REDUCE_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.22-17.28> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.26-17.27> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:17.26-17.27> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.12-18.29> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.12-18.18> str='\out_12' basic_prep in_lvalue
        AST_LOGIC_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep
          AST_REDUCE_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.22-18.29> basic_prep
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.27-18.28> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:18.27-18.28> basic_prep range=[0:0]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.12-19.29> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.12-19.18> str='\out_13' basic_prep in_lvalue
        AST_LOGIC_NOT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> basic_prep
          AST_REDUCE_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.22-19.29> basic_prep
            AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.27-19.28> str='\in' basic_prep
              AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:19.27-19.28> basic_prep range=[0:0]
                AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.12-20.28> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.12-20.18> str='\out_14' basic_prep in_lvalue
        AST_REDUCE_XOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.22-20.28> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.26-20.27> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:20.26-20.27> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.12-21.29> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.12-21.18> str='\out_15' basic_prep in_lvalue
        AST_REDUCE_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.22-21.29> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.27-21.28> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:21.27-21.28> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.12-22.29> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.12-22.18> str='\out_16' basic_prep in_lvalue
        AST_REDUCE_XNOR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.22-22.29> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.27-22.28> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:22.27-22.28> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.12-23.41> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.12-23.18> str='\out_17' basic_prep in_lvalue
        AST_LOGIC_AND <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.41> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.29> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.29> basic_prep swapped_range=[1:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.33-23.41> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.33-23.41> basic_prep swapped_range=[3:2]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
      AST_ASSIGN <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.12-24.41> basic_prep
        AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.12-24.18> str='\out_18' basic_prep in_lvalue
        AST_LOGIC_OR <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.41> basic_prep
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.29> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.29> basic_prep swapped_range=[1:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
          AST_IDENTIFIER <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.33-24.41> str='\in' basic_prep
            AST_RANGE <tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.33-24.41> basic_prep swapped_range=[3:2]
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top(in, out_1, out_2, out_3, out_4, out_5, out_6, out_7, out_8, out_9, out_10, out_11, out_12, out_13, out_14, out_15, out_16, out_17, out_18);
      input [0:3] in;
      output [0:0] out_1;
      output [0:0] out_2;
      output [0:0] out_3;
      output [0:0] out_4;
      output [0:0] out_5;
      output [0:0] out_6;
      output [0:0] out_7;
      output [0:0] out_8;
      output [0:0] out_9;
      output [0:0] out_10;
      output [0:0] out_11;
      output [0:0] out_12;
      output [0:0] out_13;
      output [0:0] out_14;
      output [0:0] out_15;
      output [0:0] out_16;
      output [0:0] out_17;
      output [0:0] out_18;
      assign out_1 = (in[0:0])&(in[1:1]);
      assign out_2 = (in[0:0])|(in[1:1]);
      assign out_3 = ~((in[0:0])&(in[1:1]));
      assign out_4 = ~((in[0:0])|(in[1:1]));
      assign out_5 = (in[0:0])^(in[1:1]);
      assign out_6 = (in[0:0])~^(in[1:1]);
      assign out_7 = (in[0:0])~^(in[1:1]);
      assign out_8 = ~(in[0:0]);
      assign out_9 = in[0:0];
      assign out_10 = &(in[0:0]);
      assign out_11 = |(in[0:0]);
      assign out_12 = !(&(in[0:0]));
      assign out_13 = !(|(in[0:0]));
      assign out_14 = ^(in[0:0]);
      assign out_15 = ~^(in[0:0]);
      assign out_16 = ~^(in[0:0]);
      assign out_17 = (in[0:1])&&(in[2:3]);
      assign out_18 = (in[0:1])||(in[2:3]);
    endmodule
--- END OF AST DUMP ---

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \top

2.1.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

2.3. Executing FUTURE pass.

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 19 unused wires.
<suppressed ~1 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

2.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.8. Rerunning OPT passes. (Maybe there is more to do..)

2.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.14. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.4. Finished fast OPT passes.

2.12. Printing statistics.

=== top ===

   Number of wires:                 19
   Number of wire bits:             22
   Number of public wires:          19
   Number of public wire bits:      22
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 10
     $and                            1
     $logic_and                      1
     $logic_not                      1
     $logic_or                       1
     $not                            3
     $or                             1
     $xnor                           1
     $xor                            1

2.13. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing Verilog backend.

3.1. Executing BMUXMAP pass.

3.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.36+72 (git sha1 22370ad21, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.

(* top =  1  *)
(* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:1.1-26.10" *)
module top(in, out_1, out_2, out_3, out_4, out_5, out_6, out_7, out_8, out_9, out_10, out_11, out_12, out_13, out_14, out_15, out_16, out_17, out_18);
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:3.17-3.19" *)
  input [0:3] in;
  wire [0:3] in;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.12-4.17" *)
  output out_1;
  wire out_1;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.75-4.81" *)
  output out_10;
  wire out_10;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.12-5.18" *)
  output out_11;
  wire out_11;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.20-5.26" *)
  output out_12;
  wire out_12;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.28-5.34" *)
  output out_13;
  wire out_13;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.36-5.42" *)
  output out_14;
  wire out_14;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.44-5.50" *)
  output out_15;
  wire out_15;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.52-5.58" *)
  output out_16;
  wire out_16;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.60-5.66" *)
  output out_17;
  wire out_17;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:5.68-5.74" *)
  output out_18;
  wire out_18;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.19-4.24" *)
  output out_2;
  wire out_2;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.26-4.31" *)
  output out_3;
  wire out_3;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.33-4.38" *)
  output out_4;
  wire out_4;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.40-4.45" *)
  output out_5;
  wire out_5;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.47-4.52" *)
  output out_6;
  wire out_6;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.54-4.59" *)
  output out_7;
  wire out_7;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.61-4.66" *)
  output out_8;
  wire out_8;
  (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:4.68-4.73" *)
  output out_9;
  wire out_9;
  assign out_1 = in[0] & (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:7.21-7.34" *) in[1];
  assign out_17 = in[0:1] && (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:23.22-23.41" *) in[2:3];
  assign out_12 = ! (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0" *) in[0];
  assign out_18 = in[0:1] || (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:24.22-24.41" *) in[2:3];
  assign out_3 = ~ (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0" *) out_1;
  assign out_4 = ~ (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:0.0-0.0" *) out_2;
  assign out_8 = ~ (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:14.21-14.27" *) in[0];
  assign out_2 = in[0] | (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:10.21-10.35" *) in[1];
  assign out_6 = in[0] ~^ (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:12.21-12.35" *) in[1];
  assign out_5 = in[0] ^ (* src = "tests/simple_tests/bitwise_operations_reverted_range/top.sv:11.21-11.34" *) in[1];
  assign out_10 = in[0];
  assign out_11 = in[0];
  assign out_13 = out_12;
  assign out_14 = in[0];
  assign out_15 = out_8;
  assign out_16 = out_8;
  assign out_7 = out_6;
  assign out_9 = in[0];
endmodule

4. Executing Verilog backend.

4.1. Executing BMUXMAP pass.

4.2. Executing DEMUXMAP pass.
Dumping module `\top'.

5. Executing SIM pass (simulate the circuit).
Simulating cycle 0.
Simulating cycle 1.
Simulating cycle 2.
Simulating cycle 3.
Simulating cycle 4.
Simulating cycle 5.
Simulating cycle 6.
Simulating cycle 7.
Simulating cycle 8.
Simulating cycle 9.
Simulating cycle 10.
Simulating cycle 11.
Simulating cycle 12.
Simulating cycle 13.
Simulating cycle 14.
Simulating cycle 15.
Simulating cycle 16.
Simulating cycle 17.
Simulating cycle 18.
Simulating cycle 19.
Simulating cycle 20.
Simulating cycle 21.
Simulating cycle 22.
Simulating cycle 23.
Simulating cycle 24.
Simulating cycle 25.
Simulating cycle 26.
Simulating cycle 27.
Simulating cycle 28.
Simulating cycle 29.
Simulating cycle 30.
Simulating cycle 31.
Simulating cycle 32.
Simulating cycle 33.
Simulating cycle 34.
Simulating cycle 35.
Simulating cycle 36.
Simulating cycle 37.
Simulating cycle 38.
Simulating cycle 39.
Simulating cycle 40.

Yosys 0.36+72 (git sha1 22370ad21, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
