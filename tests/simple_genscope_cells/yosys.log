1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] tests/simple_tests/genscope_cells/dut.sv:1:1: Compile module "work@dut".
[INF:CP0303] tests/simple_tests/genscope_cells/dut.sv:28:1: Compile module "work@ibex_counter".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[INF:CP0335] tests/simple_tests/genscope_cells/dut.sv:12:41: Compile generate block "work@dut.gen_modules[0]".
[INF:CP0335] tests/simple_tests/genscope_cells/dut.sv:94:26: Compile generate block "work@dut.gen_modules[0].module_in_genscope.g_counter_narrow".
[INF:CP0335] tests/simple_tests/genscope_cells/dut.sv:12:41: Compile generate block "work@dut.gen_modules[1]".
[INF:CP0335] tests/simple_tests/genscope_cells/dut.sv:94:26: Compile generate block "work@dut.gen_modules[1].module_in_genscope.g_counter_narrow".
[NTE:EL0503] tests/simple_tests/genscope_cells/dut.sv:1:1: Top level module "work@dut".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 3.
[NTE:EL0510] Nb instances: 3.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@dut' of type 'design'
  Object 'builtin' of type 'package'
  Object '' of type 'module_inst'
    Object 'NUM_MODULES' of type 'parameter'
    Object 'MODULE_PARAM' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'NUM_MODULES' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'MODULE_PARAM' of type 'parameter'
      Object '' of type 'constant'
    Object 'clk' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'rst' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'counter_inc_i' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'NUM_MODULES' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counterh_we_i' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'NUM_MODULES' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_we_i' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'NUM_MODULES' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_val_i' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'NUM_MODULES' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_val_o' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'NUM_MODULES' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'i' of type 'logic_net'
  Object '' of type 'module_inst'
    Object 'CounterWidth' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'CounterWidth' of type 'parameter'
      Object '' of type 'constant'
    Object 'clk_i' of type 'logic_net'
    Object 'rst_ni' of type 'logic_net'
    Object 'counter_inc_i' of type 'logic_net'
    Object 'counterh_we_i' of type 'logic_net'
    Object 'counter_we_i' of type 'logic_net'
    Object 'counter_val_i' of type 'logic_net'
    Object 'counter_val_o' of type 'logic_net'
    Object 'counter' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_upd' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'CounterWidth' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_load' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'we' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'counter_d' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'CounterWidth' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_q' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'operation'
            Object 'CounterWidth' of type 'ref_obj'
            Object '' of type 'constant'
          Object '' of type 'constant'
    Object '' of type 'always'
      Object '' of type 'begin'
        Object '' of type 'assignment'
          Object 'we' of type 'ref_obj'
          Object '' of type 'operation'
            Object 'counter_we_i' of type 'ref_obj'
            Object 'counterh_we_i' of type 'ref_obj'
        Object '' of type 'assignment'
          Object 'counter_load' of type 'part_select'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'counter' of type 'part_select'
            Object '' of type 'constant'
            Object '' of type 'constant'
        Object '' of type 'assignment'
          Object 'counter_load' of type 'part_select'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'counter_val_i' of type 'ref_obj'
        Object '' of type 'if_stmt'
          Object 'counterh_we_i' of type 'ref_obj'
          Object '' of type 'begin'
            Object '' of type 'assignment'
              Object 'counter_load' of type 'part_select'
                Object '' of type 'constant'
                Object '' of type 'constant'
              Object 'counter_val_i' of type 'ref_obj'
            Object '' of type 'assignment'
              Object 'counter_load' of type 'part_select'
                Object '' of type 'constant'
                Object '' of type 'constant'
              Object 'counter' of type 'part_select'
                Object '' of type 'constant'
                Object '' of type 'constant'
        Object '' of type 'assignment'
          Object 'counter_upd' of type 'ref_obj'
          Object '' of type 'operation'
            Object 'counter' of type 'part_select'
              Object '' of type 'operation'
                Object 'CounterWidth' of type 'ref_obj'
                Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'operation'
              Object '' of type 'operation'
                Object '' of type 'operation'
                  Object 'CounterWidth' of type 'ref_obj'
                  Object '' of type 'constant'
                Object '' of type 'operation'
                  Object '' of type 'constant'
              Object '' of type 'constant'
        Object '' of type 'if_else'
          Object 'we' of type 'ref_obj'
          Object '' of type 'begin'
            Object '' of type 'assignment'
              Object 'counter_d' of type 'ref_obj'
              Object 'counter_load' of type 'part_select'
                Object '' of type 'operation'
                  Object 'CounterWidth' of type 'ref_obj'
                  Object '' of type 'constant'
                Object '' of type 'constant'
          Object '' of type 'if_else'
            Object 'counter_inc_i' of type 'ref_obj'
            Object '' of type 'begin'
              Object '' of type 'assignment'
                Object 'counter_d' of type 'ref_obj'
                Object 'counter_upd' of type 'part_select'
                  Object '' of type 'operation'
                    Object 'CounterWidth' of type 'ref_obj'
                    Object '' of type 'constant'
                  Object '' of type 'constant'
            Object '' of type 'begin'
              Object '' of type 'assignment'
                Object 'counter_d' of type 'ref_obj'
                Object 'counter' of type 'part_select'
                  Object '' of type 'operation'
                    Object 'CounterWidth' of type 'ref_obj'
                    Object '' of type 'constant'
                  Object '' of type 'constant'
    Object '' of type 'always'
      Object '' of type 'event_control'
        Object '' of type 'operation'
          Object '' of type 'operation'
            Object 'clk_i' of type 'ref_obj'
          Object '' of type 'operation'
            Object 'rst_ni' of type 'ref_obj'
        Object '' of type 'begin'
          Object '' of type 'if_else'
            Object '' of type 'operation'
              Object 'rst_ni' of type 'ref_obj'
            Object '' of type 'begin'
              Object '' of type 'assignment'
                Object 'counter_q' of type 'ref_obj'
                Object '' of type 'constant'
            Object '' of type 'begin'
              Object '' of type 'assignment'
                Object 'counter_q' of type 'ref_obj'
                Object 'counter_d' of type 'ref_obj'
  Object 'work@dut' of type 'module_inst'
    Object 'NUM_MODULES' of type 'parameter'
    Object 'MODULE_PARAM' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'NUM_MODULES' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'MODULE_PARAM' of type 'parameter'
      Object '' of type 'constant'
    Object 'gen_modules[0]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'i' of type 'parameter'
        Object 'module_in_genscope' of type 'module_inst'
          Object 'CounterWidth' of type 'parameter'
          Object '' of type 'param_assign'
            Object 'CounterWidth' of type 'parameter'
            Object '' of type 'constant'
          Object '' of type 'param_assign'
            Object 'CounterWidth' of type 'parameter'
            Object '' of type 'constant'
          Object 'counter' of type 'logic_var'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'counter_upd' of type 'logic_var'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'counter_load' of type 'logic_var'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'we' of type 'logic_var'
            Object '' of type 'logic_typespec'
          Object 'counter_d' of type 'logic_var'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'counter_q' of type 'logic_var'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'clk_i' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'rst_ni' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'counter_inc_i' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'counterh_we_i' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'counter_we_i' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'counter_val_i' of type 'logic_net'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'counter_val_o' of type 'logic_net'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'clk_i' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'rst_ni' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'counter_inc_i' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'counterh_we_i' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'counter_we_i' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'counter_val_i' of type 'port'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'counter_val_o' of type 'port'
            Object '' of type 'logic_typespec'
              Object '' of type 'range'
                Object '' of type 'constant'
                Object '' of type 'constant'
          Object 'g_counter_narrow' of type 'gen_scope_array'
            Object '' of type 'gen_scope'
              Object 'unused_counter_load' of type 'logic_var'
                Object '' of type 'logic_typespec'
                  Object '' of type 'range'
                    Object '' of type 'constant'
                    Object '' of type 'constant'
              Object '' of type 'cont_assign'
                Object 'counter' of type 'part_select'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
                Object 'counter_q' of type 'ref_obj'
              Object '' of type 'cont_assign'
                Object 'counter' of type 'part_select'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
                Object '' of type 'constant'
              Object '' of type 'cont_assign'
                Object 'unused_counter_load' of type 'ref_obj'
                Object 'counter_load' of type 'part_select'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
          Object '' of type 'cont_assign'
            Object 'counter_val_o' of type 'ref_obj'
            Object 'counter' of type 'ref_obj'
          Object 'clk' of type 'ref_obj'
          Object 'rst' of type 'ref_obj'
          Object 'counter_inc_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counterh_we_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_we_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_val_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_val_o' of type 'bit_select'
            Object '' of type 'constant'
    Object 'gen_modules[1]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'i' of type 'parameter'
        Object 'module_in_genscope' of type 'module_inst'
          Object 'CounterWidth' of type 'parameter'
          Object '' of type 'param_assign'
            Object 'CounterWidth' of type 'parameter'
            Object '' of type 'constant'
          Object 'clk' of type 'ref_obj'
          Object 'rst' of type 'ref_obj'
          Object 'counter_inc_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counterh_we_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_we_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_val_i' of type 'bit_select'
            Object '' of type 'constant'
          Object 'counter_val_o' of type 'bit_select'
            Object '' of type 'constant'
    Object 'clk' of type 'logic_var'
      Object '' of type 'logic_typespec'
    Object 'rst' of type 'logic_var'
      Object '' of type 'logic_typespec'
    Object 'counter_inc_i' of type 'logic_var'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counterh_we_i' of type 'logic_var'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_we_i' of type 'logic_var'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_val_i' of type 'logic_var'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'counter_val_o' of type 'logic_var'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
Warning: Removing unelaborated module: \ibex_counter from the design.
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/genscope_cells/dut.sv:28.1-106.10> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:29.17-29.34> str='\CounterWidth' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:31.23-31.28> str='\clk_i' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:32.23-32.29> str='\rst_ni' input logic port=2 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:34.23-34.36> str='\counter_inc_i' input logic port=3 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:35.23-35.36> str='\counterh_we_i' input logic port=4 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:36.23-36.35> str='\counter_we_i' input logic port=5 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:37.23-37.36> str='\counter_val_i' input logic port=6 multirange=[ 0 32 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:37.16-37.22> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:38.23-38.36> str='\counter_val_o' output logic port=7 multirange=[ 0 64 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:38.16-38.22> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:41.28-41.35> str='\counter' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:41.9-41.15> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:42.28-42.39> str='\counter_upd' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:42.9-42.27> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:43.28-43.40> str='\counter_load' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:43.9-43.15> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:44.28-44.30> str='\we' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:45.28-45.37> str='\counter_d' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:45.9-45.27> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:80.28-80.37> str='\counter_q' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:80.9-80.27> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_ALWAYS <tests/simple_tests/genscope_cells/dut.sv:48.3-70.6>
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:48.15-70.6>
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:51.5-51.38>
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.5-51.7> str='\we' in_lvalue
            AST_BIT_OR <tests/simple_tests/genscope_cells/dut.sv:51.10-51.38>
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.10-51.22> str='\counter_we_i'
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.25-51.38> str='\counterh_we_i'
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:52.5-52.41>
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:52.5-52.24> str='\counter_load' in_lvalue
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:52.5-52.24> in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed range=[31:0] int=32 in_lvalue
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:52.27-52.41> str='\counter'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:52.27-52.41>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed range=[31:0] int=32
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:53.5-53.40>
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:53.5-53.23> str='\counter_load' in_lvalue
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:53.5-53.23> in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:53.27-53.40> str='\counter_val_i'
          AST_CASE <tests/simple_tests/genscope_cells/dut.sv:54.5-57.8>
            AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:54.9-54.22> str='\counterh_we_i'
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:54.24-57.8>
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:55.7-55.42>
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:55.7-55.26> str='\counter_load' in_lvalue
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:55.7-55.26> in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed range=[31:0] int=32 in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:55.29-55.42> str='\counter_val_i'
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:56.7-56.42>
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:56.7-56.25> str='\counter_load' in_lvalue
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:56.7-56.25> in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31 in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:56.29-56.42> str='\counter'
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:56.29-56.42>
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:60.5-60.76>
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.5-60.16> str='\counter_upd' in_lvalue
            AST_ADD <tests/simple_tests/genscope_cells/dut.sv:60.19-60.76>
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.19-60.44> str='\counter'
                AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:60.19-60.44>
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:60.27-60.41>
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.27-60.39> str='\CounterWidth'
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONCAT <tests/simple_tests/genscope_cells/dut.sv:60.47-60.76>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                AST_REPLICATE <tests/simple_tests/genscope_cells/dut.sv:60.48-60.70>
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:60.49-60.63> in_param
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.49-60.61> str='\CounterWidth' in_param
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
                  AST_CONCAT <tests/simple_tests/genscope_cells/dut.sv:60.63-60.69>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_CASE <tests/simple_tests/genscope_cells/dut.sv:63.5-69.8>
            AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:63.9-63.11> str='\we'
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:63.13-65.8>
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:64.7-64.49>
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:64.7-64.16> str='\counter_d' in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:64.19-64.49> str='\counter_load'
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:64.19-64.49>
                        AST_SUB <tests/simple_tests/genscope_cells/dut.sv:64.32-64.46>
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:64.32-64.44> str='\CounterWidth'
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_CASE <tests/simple_tests/genscope_cells/dut.sv:65.14-69.8>
                  AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:65.18-65.31> str='\counter_inc_i'
                  AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                    AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:65.32-67.8>
                        AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:66.7-66.48>
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:66.7-66.16> str='\counter_d' in_lvalue
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:66.19-66.48> str='\counter_upd'
                            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:66.19-66.48>
                              AST_SUB <tests/simple_tests/genscope_cells/dut.sv:66.31-66.45>
                                AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:66.31-66.43> str='\CounterWidth'
                                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:67.14-69.8>
                        AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:68.7-68.44>
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:68.7-68.16> str='\counter_d' in_lvalue
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:68.19-68.44> str='\counter'
                            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:68.19-68.44>
                              AST_SUB <tests/simple_tests/genscope_cells/dut.sv:68.27-68.41>
                                AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:68.27-68.39> str='\CounterWidth'
                                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ALWAYS <tests/simple_tests/genscope_cells/dut.sv:86.3-92.6>
        ATTR \always_ff:
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_param
        AST_POSEDGE <tests/simple_tests/genscope_cells/dut.sv:86.15-86.28>
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:86.23-86.28> str='\clk_i'
        AST_NEGEDGE <tests/simple_tests/genscope_cells/dut.sv:86.32-86.46>
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:86.40-86.46> str='\rst_ni'
        AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:86.13-86.47>
          AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:86.48-92.6>
            AST_CASE <tests/simple_tests/genscope_cells/dut.sv:87.5-91.8>
              AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_LOGIC_NOT <tests/simple_tests/genscope_cells/dut.sv:87.9-87.16>
                  AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:87.10-87.16> str='\rst_ni'
              AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:87.18-89.8>
                    AST_ASSIGN_LE <tests/simple_tests/genscope_cells/dut.sv:88.7-88.22>
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:88.7-88.16> str='\counter_q' in_lvalue
                      AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='0'(1) unsized range=[0:0]
              AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:89.14-91.8>
                    AST_ASSIGN_LE <tests/simple_tests/genscope_cells/dut.sv:90.7-90.29>
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:90.7-90.16> str='\counter_q' in_lvalue
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:90.20-90.29> str='\counter_d'
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:94.26-100.6> str='\g_counter_narrow'
        AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:95.29-95.48> str='\unused_counter_load' logic
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:95.11-95.28> in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) range=[31:0] int=10 in_param
        AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:97.12-97.49>
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:97.12-97.37> str='\counter' in_lvalue
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:97.12-97.37> in_lvalue
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed range=[31:0] int=9 in_lvalue
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:97.40-97.49> str='\counter_q'
        AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:98.12-98.42>
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:98.12-98.36> str='\counter' in_lvalue
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:98.12-98.36> in_lvalue
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_lvalue
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10 in_lvalue
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='0'(1) unsized range=[0:0]
        AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:99.12-99.69>
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:99.12-99.31> str='\unused_counter_load' in_lvalue
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:99.40-99.69> str='\counter_load'
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:99.40-99.69>
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
      AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:104.10-104.33>
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:104.10-104.23> str='\counter_val_o' in_lvalue
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:104.26-104.33> str='\counter'
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module \$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010 (clk_i, rst_ni, counter_inc_i, counterh_we_i, counter_we_i, counter_val_i, counter_val_o);
      /** AST_PARAMETER **/
      input [0:0] clk_i;
      input [0:0] rst_ni;
      input [0:0] counter_inc_i;
      input [0:0] counterh_we_i;
      input [0:0] counter_we_i;
      input [31:0] counter_val_i;
      output [63:0] counter_val_o;
      wire [63:0] counter;
      wire [9:0] counter_upd;
      wire [63:0] counter_load;
      wire [0:0] we;
      wire [9:0] counter_d;
      wire [9:0] counter_q;
      (* always_comb = 1 *)
      always @*
        begin
          we = (counter_we_i)|(counterh_we_i);
          counter_load[63:32] = counter[63:32];
          counter_load[31:0] = counter_val_i;
          case (|(counterh_we_i))
            1'b 1:
              begin
                counter_load[63:32] = counter_val_i;
                counter_load[31:0] = counter[31:0];
              end
          endcase
          counter_upd = (counter[(CounterWidth)-(1):0])+({{(CounterWidth)-(1){{1'b 0}}}, 1'b 1});
          case (|(we))
            1'b 1:
              counter_d = counter_load[(CounterWidth)-(1):0];
            default:
              case (|(counter_inc_i))
                1'b 1:
                  counter_d = counter_upd[(CounterWidth)-(1):0];
                default:
                  counter_d = counter[(CounterWidth)-(1):0];
              endcase
          endcase
        end
      (* always_ff = 1 *)
      always @(posedge clk_i, negedge rst_ni)
        case (|(!(rst_ni)))
          1'b 1:
            counter_q <= 1'b 0;
          default:
            counter_q <= counter_d;
        endcase
      /** AST_GENBLOCK **/
      assign counter_val_o = counter;
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/genscope_cells/dut.sv:28.1-106.10> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010' basic_prep
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:29.17-29.34> str='\CounterWidth' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) basic_prep range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:31.23-31.28> str='\clk_i' input logic basic_prep port=1 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:32.23-32.29> str='\rst_ni' input logic basic_prep port=2 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:34.23-34.36> str='\counter_inc_i' input logic basic_prep port=3 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:35.23-35.36> str='\counterh_we_i' input logic basic_prep port=4 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:36.23-36.35> str='\counter_we_i' input logic basic_prep port=5 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:37.23-37.36> str='\counter_val_i' input logic basic_prep port=6 range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:37.16-37.22> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:38.23-38.36> str='\counter_val_o' output logic basic_prep port=7 range=[63:0] multirange=[ 0 64 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:38.16-38.22> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:41.28-41.35> str='\counter' logic basic_prep range=[63:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:41.9-41.15> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:42.28-42.39> str='\counter_upd' logic reg basic_prep range=[9:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:42.9-42.27> basic_prep range=[9:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed basic_prep range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:43.28-43.40> str='\counter_load' logic reg basic_prep range=[63:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:43.9-43.15> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:44.28-44.30> str='\we' logic reg basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:45.28-45.37> str='\counter_d' logic reg basic_prep range=[9:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:45.9-45.27> basic_prep range=[9:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed basic_prep range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:80.28-80.37> str='\counter_q' logic reg basic_prep range=[9:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:80.9-80.27> basic_prep range=[9:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed basic_prep range=[31:0] int=9 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ALWAYS <tests/simple_tests/genscope_cells/dut.sv:48.3-70.6> basic_prep
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:48.15-70.6> basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:51.5-51.38> basic_prep
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.5-51.7> str='\we' basic_prep in_lvalue
            AST_BIT_OR <tests/simple_tests/genscope_cells/dut.sv:51.10-51.38> basic_prep
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.10-51.22> str='\counter_we_i' basic_prep
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:51.25-51.38> str='\counterh_we_i' basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:52.5-52.41> basic_prep
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:52.5-52.24> str='\counter_load' basic_prep in_lvalue
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:52.5-52.24> basic_prep range=[63:32] in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed basic_prep range=[31:0] int=32 in_lvalue
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:52.27-52.41> str='\counter' basic_prep
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:52.27-52.41> basic_prep range=[63:32]
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed basic_prep range=[31:0] int=32
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:53.5-53.40> basic_prep
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:53.5-53.23> str='\counter_load' basic_prep in_lvalue
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:53.5-53.23> basic_prep range=[31:0] in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_lvalue
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_lvalue
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:53.27-53.40> str='\counter_val_i' basic_prep
          AST_CASE <tests/simple_tests/genscope_cells/dut.sv:54.5-57.8> basic_prep
            AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:54.9-54.22> str='\counterh_we_i' basic_prep
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:54.24-57.8> basic_prep
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:55.7-55.42> basic_prep
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:55.7-55.26> str='\counter_load' basic_prep in_lvalue
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:55.7-55.26> basic_prep range=[63:32] in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) signed basic_prep range=[31:0] int=32 in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:55.29-55.42> str='\counter_val_i' basic_prep
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:56.7-56.42> basic_prep
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:56.7-56.25> str='\counter_load' basic_prep in_lvalue
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:56.7-56.25> basic_prep range=[31:0] in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_lvalue
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:56.29-56.42> str='\counter' basic_prep
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:56.29-56.42> basic_prep range=[31:0]
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:60.5-60.76> basic_prep
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.5-60.16> str='\counter_upd' basic_prep in_lvalue
            AST_ADD <tests/simple_tests/genscope_cells/dut.sv:60.19-60.76> basic_prep
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:60.19-60.44> str='\counter' basic_prep
                AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:60.19-60.44> basic_prep range=[9:0]
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:60.27-60.41> bits='00000000000000000000000000001001'(32) basic_prep range=[31:0] int=9
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:60.47-60.76> bits='0000000001'(10) basic_prep range=[9:0] int=1
          AST_CASE <tests/simple_tests/genscope_cells/dut.sv:63.5-69.8> basic_prep
            AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:63.9-63.11> str='\we' basic_prep
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:63.13-65.8> basic_prep
                  AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:64.7-64.49> basic_prep
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:64.7-64.16> str='\counter_d' basic_prep in_lvalue
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:64.19-64.49> str='\counter_load' basic_prep
                      AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:64.19-64.49> basic_prep range=[9:0]
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:64.32-64.46> bits='00000000000000000000000000001001'(32) basic_prep range=[31:0] int=9
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
            AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
              AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_CASE <tests/simple_tests/genscope_cells/dut.sv:65.14-69.8> basic_prep
                  AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                    AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:65.18-65.31> str='\counter_inc_i' basic_prep
                  AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                    AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                      AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:65.32-67.8> basic_prep
                        AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:66.7-66.48> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:66.7-66.16> str='\counter_d' basic_prep in_lvalue
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:66.19-66.48> str='\counter_upd' basic_prep
                            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:66.19-66.48> basic_prep range=[9:0]
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:66.31-66.45> bits='00000000000000000000000000001001'(32) basic_prep range=[31:0] int=9
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
                  AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                    AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                    AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                      AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:67.14-69.8> basic_prep
                        AST_ASSIGN_EQ <tests/simple_tests/genscope_cells/dut.sv:68.7-68.44> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:68.7-68.16> str='\counter_d' basic_prep in_lvalue
                          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:68.19-68.44> str='\counter' basic_prep
                            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:68.19-68.44> basic_prep range=[9:0]
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:68.27-68.41> bits='00000000000000000000000000001001'(32) basic_prep range=[31:0] int=9
                              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ALWAYS <tests/simple_tests/genscope_cells/dut.sv:86.3-92.6> basic_prep
        ATTR \always_ff:
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_POSEDGE <tests/simple_tests/genscope_cells/dut.sv:86.15-86.28> basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:86.23-86.28> str='\clk_i' basic_prep
        AST_NEGEDGE <tests/simple_tests/genscope_cells/dut.sv:86.32-86.46> basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:86.40-86.46> str='\rst_ni' basic_prep
        AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:86.13-86.47> basic_prep
          AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:86.48-92.6> basic_prep
            AST_CASE <tests/simple_tests/genscope_cells/dut.sv:87.5-91.8> basic_prep
              AST_REDUCE_BOOL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_LOGIC_NOT <tests/simple_tests/genscope_cells/dut.sv:87.9-87.16> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:87.10-87.16> str='\rst_ni' basic_prep
              AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                  AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:87.18-89.8> basic_prep
                    AST_ASSIGN_LE <tests/simple_tests/genscope_cells/dut.sv:88.7-88.22> basic_prep
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:88.7-88.16> str='\counter_q' basic_prep in_lvalue
                      AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='0'(1) unsized basic_prep range=[0:0]
              AST_COND <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_DEFAULT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep
                  AST_BLOCK <tests/simple_tests/genscope_cells/dut.sv:89.14-91.8> basic_prep
                    AST_ASSIGN_LE <tests/simple_tests/genscope_cells/dut.sv:90.7-90.29> basic_prep
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:90.7-90.16> str='\counter_q' basic_prep in_lvalue
                      AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:90.20-90.29> str='\counter_d' basic_prep
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:94.26-100.6> str='\g_counter_narrow' basic_prep
      AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:104.10-104.33> basic_prep
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:104.10-104.23> str='\counter_val_o' basic_prep in_lvalue
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:104.26-104.33> str='\counter' basic_prep
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:95.29-95.48> str='\g_counter_narrow.unused_counter_load' logic basic_prep range=[63:10]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:95.11-95.28> basic_prep range=[63:10] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) basic_prep range=[31:0] int=10 in_param
      AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:97.12-97.49> basic_prep
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:97.12-97.37> str='\counter' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:97.12-97.37> basic_prep range=[9:0] in_lvalue
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001001'(32) signed basic_prep range=[31:0] int=9 in_lvalue
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_lvalue
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:97.40-97.49> str='\counter_q' basic_prep
      AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:98.12-98.42> basic_prep
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:98.12-98.36> str='\counter' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:98.12-98.36> basic_prep range=[63:10] in_lvalue
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_lvalue
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10 in_lvalue
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='0'(1) unsized basic_prep range=[0:0]
      AST_ASSIGN <tests/simple_tests/genscope_cells/dut.sv:99.12-99.69> basic_prep
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:99.12-99.31> str='\g_counter_narrow.unused_counter_load' basic_prep in_lvalue
        AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:99.40-99.69> str='\counter_load' basic_prep
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:99.40-99.69> basic_prep range=[63:10]
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module \$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010 (clk_i, rst_ni, counter_inc_i, counterh_we_i, counter_we_i, counter_val_i, counter_val_o);
      /** AST_PARAMETER **/
      input [0:0] clk_i;
      input [0:0] rst_ni;
      input [0:0] counter_inc_i;
      input [0:0] counterh_we_i;
      input [0:0] counter_we_i;
      input [31:0] counter_val_i;
      output [63:0] counter_val_o;
      wire [63:0] counter;
      reg [9:0] counter_upd;
      reg [63:0] counter_load;
      reg [0:0] we;
      reg [9:0] counter_d;
      reg [9:0] counter_q;
      wire [63:10] \g_counter_narrow.unused_counter_load ;
      (* always_comb = 1 *)
      always @*
        begin
          we = (counter_we_i)|(counterh_we_i);
          counter_load[63:32] = counter[63:32];
          counter_load[31:0] = counter_val_i;
          case (|(counterh_we_i))
            1'b 1:
              begin
                counter_load[63:32] = counter_val_i;
                counter_load[31:0] = counter[31:0];
              end
          endcase
          counter_upd = (counter[9:0])+(10'b 0000000001);
          case (|(we))
            1'b 1:
              counter_d = counter_load[9:0];
            default:
              case (|(counter_inc_i))
                1'b 1:
                  counter_d = counter_upd[9:0];
                default:
                  counter_d = counter[9:0];
              endcase
          endcase
        end
      (* always_ff = 1 *)
      always @(posedge clk_i, negedge rst_ni)
        case (|(!(rst_ni)))
          1'b 1:
            counter_q <= 1'b 0;
          default:
            counter_q <= counter_d;
        endcase
      /** AST_GENBLOCK **/
      assign counter_val_o = counter;
      assign counter[9:0] = counter_q;
      assign counter[63:10] = 1'b 0;
      assign \g_counter_narrow.unused_counter_load  = counter_load[63:10];
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `\dut'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/genscope_cells/dut.sv:1.1-26.10> str='\dut'
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:3.15-3.30> str='\NUM_MODULES' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:4.15-4.32> str='\MODULE_PARAM' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:5.7-5.10> str='\clk' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:6.7-6.10> str='\rst' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:7.24-7.37> str='\counter_inc_i' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:7.7-7.24> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:8.24-8.37> str='\counterh_we_i' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:8.7-8.24> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:9.24-9.36> str='\counter_we_i' logic
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:9.7-9.24> in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:10.31-10.44> str='\counter_val_i' logic multirange=[ 0 2 0 32 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:11.31-11.44> str='\counter_val_o' logic multirange=[ 0 2 0 64 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> range=[127:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001111111'(32) signed range=[31:0] int=127 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:12.19-12.20> str='\i' logic range=[0:0]
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:12.41-22.4> str='\gen_modules[0]'
        AST_LOCALPARAM <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> str='\i' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> bits='00000000000000000000000000000000'(32) unsized range=[31:0] in_param
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_CELL <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\module_in_genscope'
          AST_CELLTYPE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\clk_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:14.42-14.45> str='\clk'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\rst_ni'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:15.43-15.46> str='\rst'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_inc_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> str='\counter_inc_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counterh_we_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> str='\counterh_we_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_we_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> str='\counter_we_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:19.64-19.65> str='\counter_val_i' basic_prep
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_o'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:20.64-20.65> str='\counter_val_o' basic_prep
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:12.41-22.4> str='\gen_modules[1]'
        AST_LOCALPARAM <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> str='\i' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> bits='00000000000000000000000000000001'(32) unsized range=[31:0] int=1 in_param
          AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_CELL <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\module_in_genscope'
          AST_CELLTYPE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\clk_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:14.42-14.45> str='\clk'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\rst_ni'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:15.43-15.46> str='\rst'
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_inc_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> str='\counter_inc_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counterh_we_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> str='\counterh_we_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_we_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> str='\counter_we_i'
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63>
                AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_i'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:19.64-19.65> str='\counter_val_i' basic_prep
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) range=[31:0] int=32
          AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_o'
            AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:20.64-20.65> str='\counter_val_o' basic_prep
              AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                  AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                    AST_SUB <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_ADD <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                      AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
                    AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                AST_MUL <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0>
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) range=[31:0] int=64
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module dut();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      wire [0:0] clk;
      wire [0:0] rst;
      wire [1:0] counter_inc_i;
      wire [1:0] counterh_we_i;
      wire [1:0] counter_we_i;
      wire [63:0] counter_val_i;
      wire [127:0] counter_val_o;
      wire i;
      /** AST_GENBLOCK **/
      /** AST_GENBLOCK **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/genscope_cells/dut.sv:1.1-26.10> str='\dut' basic_prep
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:3.15-3.30> str='\NUM_MODULES' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/genscope_cells/dut.sv:4.15-4.32> str='\MODULE_PARAM' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) basic_prep range=[31:0] int=10 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:5.7-5.10> str='\clk' logic basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:6.7-6.10> str='\rst' logic basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:7.24-7.37> str='\counter_inc_i' logic basic_prep range=[1:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:7.7-7.24> basic_prep range=[1:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:8.24-8.37> str='\counterh_we_i' logic basic_prep range=[1:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:8.7-8.24> basic_prep range=[1:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:9.24-9.36> str='\counter_we_i' logic basic_prep range=[1:0]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:9.7-9.24> basic_prep range=[1:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:10.31-10.44> str='\counter_val_i' logic basic_prep range=[63:0] multirange=[ 0 2 0 32 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[63:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) signed basic_prep range=[31:0] int=63 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:11.31-11.44> str='\counter_val_o' logic basic_prep range=[127:0] multirange=[ 0 2 0 64 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[127:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001111111'(32) signed basic_prep range=[31:0] int=127 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/genscope_cells/dut.sv:12.19-12.20> str='\i' logic basic_prep range=[0:0]
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:12.41-22.4> str='\gen_modules[0]' basic_prep
      AST_GENBLOCK <tests/simple_tests/genscope_cells/dut.sv:12.41-22.4> str='\gen_modules[1]' basic_prep
      AST_LOCALPARAM <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> str='\gen_modules[0].i' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> bits='00000000000000000000000000000000'(32) unsized basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\gen_modules[0].module_in_genscope' basic_prep
        AST_CELLTYPE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\clk_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:14.42-14.45> str='\clk' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\rst_ni' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:15.43-15.46> str='\rst' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_inc_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> str='\counter_inc_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counterh_we_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> str='\counterh_we_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_we_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> str='\counter_we_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> basic_prep range=[0:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:19.64-19.65> str='\counter_val_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) basic_prep range=[31:0] int=31
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_o' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:20.64-20.65> str='\counter_val_o' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[63:0]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) basic_prep range=[31:0] int=63
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_LOCALPARAM <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> str='\gen_modules[1].i' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:12.0-12.0> bits='00000000000000000000000000000001'(32) unsized basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_CELL <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\gen_modules[1].module_in_genscope' basic_prep
        AST_CELLTYPE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> str='$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\clk_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:14.42-14.45> str='\clk' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\rst_ni' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:15.43-15.46> str='\rst' basic_prep
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_inc_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> str='\counter_inc_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:16.64-16.65> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counterh_we_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> str='\counterh_we_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:17.64-17.65> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_we_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> str='\counter_we_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:18.62-18.63> basic_prep range=[1:1]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_i' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:19.64-19.65> str='\counter_val_i' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[63:32]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000111111'(32) basic_prep range=[31:0] int=63
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000000100000'(32) basic_prep range=[31:0] int=32
        AST_ARGUMENT <tests/simple_tests/genscope_cells/dut.sv:13.3-21.35> str='\counter_val_o' basic_prep
          AST_IDENTIFIER <tests/simple_tests/genscope_cells/dut.sv:20.64-20.65> str='\counter_val_o' basic_prep
            AST_RANGE <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> basic_prep range=[127:64]
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001111111'(32) basic_prep range=[31:0] int=127
              AST_CONSTANT <tests/simple_tests/genscope_cells/dut.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module dut();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      wire [0:0] clk;
      wire [0:0] rst;
      wire [1:0] counter_inc_i;
      wire [1:0] counterh_we_i;
      wire [1:0] counter_we_i;
      wire [63:0] counter_val_i;
      wire [127:0] counter_val_o;
      wire i;
      /** AST_GENBLOCK **/
      /** AST_GENBLOCK **/
      /** AST_CELL **/
      /** AST_CELL **/
    endmodule
--- END OF AST DUMP ---

2. Executing PROC pass (convert processes to netlists).

2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$tests/simple_tests/genscope_cells/dut.sv:86$4 in module $paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.
Marked 3 switch rules as full_case in process $proc$tests/simple_tests/genscope_cells/dut.sv:48$1 in module $paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.
Removed a total of 0 dead cases.

2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 4 assignments to connections.

2.4. Executing PROC_INIT pass (extract init attributes).

2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:86$4'.

2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~3 debug messages>

2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:86$4'.
     1/1: $0\counter_q[9:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
     1/4: $2\counter_d[9:0]
     2/4: $1\counter_d[9:0]
     3/4: $1\counter_load[63:0] [63:32]
     4/4: $1\counter_load[63:0] [31:0]

2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.\counter_upd' from process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.\counter_load' from process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.\we' from process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.\counter_d' from process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.

2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.\counter_q' using process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:86$4'.
  created $adff cell `$procdff$21' with positive edge clock and negative level reset.

2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:86$4'.
Found and cleaned up 3 empty switches in `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
Removing empty process `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.$proc$tests/simple_tests/genscope_cells/dut.sv:48$1'.
Cleaned up 3 empty switches.

2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module dut.
Optimizing module $paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010.

3. Executing Verilog backend.

3.1. Executing BMUXMAP pass.

3.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.36+13 (git sha1 373b651d5, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'.

(* cells_not_processed =  1  *)
(* src = "tests/simple_tests/genscope_cells/dut.sv:28.1-106.10" *)
module \$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010 (clk_i, rst_ni, counter_inc_i, counterh_we_i, counter_we_i, counter_val_i, counter_val_o);
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [9:0] _00_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [63:0] _01_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:86.3-92.6" *)
  wire [9:0] _02_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [9:0] _03_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire _04_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [9:0] _05_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [63:0] _06_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:48.3-70.6" *)
  wire [9:0] _07_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:60.19-60.76" *)
  wire [9:0] _08_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:87.9-87.16" *)
  wire _09_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:51.10-51.38" *)
  wire _10_;
  wire [9:0] _11_;
  wire _12_;
  wire [9:0] _13_;
  wire _14_;
  wire [31:0] _15_;
  wire _16_;
  wire [31:0] _17_;
  wire _18_;
  wire [9:0] _19_;
  wire _20_;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:31.23-31.28" *)
  input clk_i;
  wire clk_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:41.28-41.35" *)
  wire [63:0] counter;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:45.28-45.37" *)
  wire [9:0] counter_d;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:34.23-34.36" *)
  input counter_inc_i;
  wire counter_inc_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:43.28-43.40" *)
  wire [63:0] counter_load;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:80.28-80.37" *)
  reg [9:0] counter_q;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:42.28-42.39" *)
  wire [9:0] counter_upd;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:37.23-37.36" *)
  input [31:0] counter_val_i;
  wire [31:0] counter_val_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:38.23-38.36" *)
  output [63:0] counter_val_o;
  wire [63:0] counter_val_o;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:36.23-36.35" *)
  input counter_we_i;
  wire counter_we_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:35.23-35.36" *)
  input counterh_we_i;
  wire counterh_we_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:95.29-95.48" *)
  wire [63:10] \g_counter_narrow.unused_counter_load ;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:32.23-32.29" *)
  input rst_ni;
  wire rst_ni;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:44.28-44.30" *)
  wire we;
  assign _08_ = counter[9:0] + (* src = "tests/simple_tests/genscope_cells/dut.sv:60.19-60.76" *) 10'h001;
  assign _09_ = ! (* src = "tests/simple_tests/genscope_cells/dut.sv:87.9-87.16" *) rst_ni;
  assign _10_ = counter_we_i | (* src = "tests/simple_tests/genscope_cells/dut.sv:51.10-51.38" *) counterh_we_i;
  (* \always_ff  = 32'd1 *)
  (* src = "tests/simple_tests/genscope_cells/dut.sv:86.3-92.6" *)
  always @(posedge clk_i, negedge rst_ni)
    if (!rst_ni) counter_q <= 10'h000;
    else counter_q <= _13_;
  assign _11_ = _12_ ? (* full_case = 32'd1 *) (* src = "tests/simple_tests/genscope_cells/dut.sv:0.0-0.0|tests/simple_tests/genscope_cells/dut.sv:63.5-69.8" *) 10'hxxx : _19_;
  assign _13_ = _14_ ? (* full_case = 32'd1 *) (* src = "tests/simple_tests/genscope_cells/dut.sv:0.0-0.0|tests/simple_tests/genscope_cells/dut.sv:63.5-69.8" *) _06_[9:0] : _07_;
  assign _15_ = _16_ ? (* full_case = 32'd1 *) (* src = "tests/simple_tests/genscope_cells/dut.sv:0.0-0.0|tests/simple_tests/genscope_cells/dut.sv:54.5-57.8" *) counter_val_i : 32'd0;
  assign _17_ = _18_ ? (* full_case = 32'd1 *) (* src = "tests/simple_tests/genscope_cells/dut.sv:0.0-0.0|tests/simple_tests/genscope_cells/dut.sv:54.5-57.8" *) { 22'h000000, counter_q } : counter_val_i;
  assign _19_ = _20_ ? (* full_case = 32'd1 *) (* src = "tests/simple_tests/genscope_cells/dut.sv:0.0-0.0|tests/simple_tests/genscope_cells/dut.sv:65.14-69.8" *) _08_ : counter_q;
  assign counter_val_o = counter;
  assign counter[9:0] = counter_q;
  assign counter[63:10] = 54'h00000000000000;
  assign \g_counter_narrow.unused_counter_load  = counter_load[63:10];
  assign _00_ = _05_;
  assign _03_ = _08_;
  assign _01_ = _06_;
  assign _04_ = _10_;
  assign _02_ = counter_d;
  assign _20_ = counter_inc_i;
  assign _12_ = _10_;
  assign _07_ = _11_;
  assign _14_ = _10_;
  assign _05_ = _13_;
  assign _16_ = counterh_we_i;
  assign _06_[63:32] = _15_;
  assign _18_ = counterh_we_i;
  assign _06_[31:0] = _17_;
  assign counter_upd = _08_;
  assign counter_load = { _15_, _17_ };
  assign we = _10_;
  assign counter_d = _13_;
endmodule
Dumping module `\dut'.

(* cells_not_processed =  1  *)
(* src = "tests/simple_tests/genscope_cells/dut.sv:1.1-26.10" *)
module dut();
  (* src = "tests/simple_tests/genscope_cells/dut.sv:5.7-5.10" *)
  wire clk;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:7.24-7.37" *)
  wire [1:0] counter_inc_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:10.31-10.44" *)
  wire [63:0] counter_val_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:11.31-11.44" *)
  wire [127:0] counter_val_o;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:9.24-9.36" *)
  wire [1:0] counter_we_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:8.24-8.37" *)
  wire [1:0] counterh_we_i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:12.19-12.20" *)
  wire i;
  (* src = "tests/simple_tests/genscope_cells/dut.sv:6.7-6.10" *)
  wire rst;
  (* module_not_derived = 32'd1 *)
  (* src = "tests/simple_tests/genscope_cells/dut.sv:13.3-21.35" *)
  \$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010  \gen_modules[0].module_in_genscope  (
    .clk_i(clk),
    .counter_inc_i(counter_inc_i[0]),
    .counter_val_i(counter_val_i[31:0]),
    .counter_val_o(counter_val_o[63:0]),
    .counter_we_i(counter_we_i[0]),
    .counterh_we_i(counterh_we_i[0]),
    .rst_ni(rst)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "tests/simple_tests/genscope_cells/dut.sv:13.3-21.35" *)
  \$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010  \gen_modules[1].module_in_genscope  (
    .clk_i(clk),
    .counter_inc_i(counter_inc_i[1]),
    .counter_val_i(counter_val_i[63:32]),
    .counter_val_o(counter_val_o[127:64]),
    .counter_we_i(counter_we_i[1]),
    .counterh_we_i(counterh_we_i[1]),
    .rst_ni(rst)
  );
endmodule

4. Executing Verilog backend.

4.1. Executing BMUXMAP pass.

4.2. Executing DEMUXMAP pass.
Dumping module `$paramod\ibex_counter\CounterWidth=s32'00000000000000000000000000001010'.
Dumping module `\dut'.

Warnings: 1 unique messages, 1 total
Yosys 0.36+13 (git sha1 373b651d5, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
