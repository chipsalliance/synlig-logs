1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0301] tests/simple_tests/ModuleUsingStuctInput/top.sv:1:1: Compile package "ctrl_pkg".
[INF:CP0301] tests/simple_tests/ModuleUsingStuctInput/top.sv:6:1: Compile package "pkg".
[INF:CP0303] tests/simple_tests/ModuleUsingStuctInput/top.sv:30:1: Compile module "work@foo".
[INF:CP0303] tests/simple_tests/ModuleUsingStuctInput/top.sv:33:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/ModuleUsingStuctInput/top.sv:33:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 2.
[NTE:EL0510] Nb instances: 2.
[NTE:EL0511] Nb leaf instances: 1.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'ctrl_pkg' of type 'package'
    Object 'Banks' of type 'parameter'
    Object 'PagesPerBank' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'Banks' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PagesPerBank' of type 'parameter'
      Object '' of type 'constant'
  Object 'pkg' of type 'package'
    Object 'pkg::enum_t' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'true_e' of type 'enum_const'
      Object 'false_e' of type 'enum_const'
    Object 'pkg::phase_t' of type 'enum_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object 'seed_e' of type 'enum_const'
      Object 'rma_e' of type 'enum_const'
      Object 'none_e' of type 'enum_const'
      Object 'invalid_e' of type 'enum_const'
    Object 'pkg::region_attr_t' of type 'struct_typespec'
      Object 'phase' of type 'typespec_member'
        Object 'pkg::phase_t' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'seed_e' of type 'enum_const'
          Object 'rma_e' of type 'enum_const'
          Object 'none_e' of type 'enum_const'
          Object 'invalid_e' of type 'enum_const'
      Object 'cfg' of type 'typespec_member'
        Object 'pkg::region_cfg_t' of type 'struct_typespec'
          Object 'en' of type 'typespec_member'
            Object 'pkg::enum_t' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'true_e' of type 'enum_const'
              Object 'false_e' of type 'enum_const'
    Object 'pkg::region_cfg_t' of type 'struct_typespec'
      Object 'en' of type 'typespec_member'
        Object 'pkg::enum_t' of type 'enum_typespec'
          Object '' of type 'logic_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
          Object 'true_e' of type 'enum_const'
          Object 'false_e' of type 'enum_const'
    Object 'NumBanks' of type 'parameter'
    Object 'PagesPerBank' of type 'parameter'
    Object 'Width' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'NumBanks' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'PagesPerBank' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'Width' of type 'parameter'
      Object '' of type 'constant'
  Object '' of type 'module_inst'
    Object 'DATA_REG' of type 'logic_net'
  Object '' of type 'module_inst'
  Object 'work@top' of type 'module_inst'
    Object 'f' of type 'module_inst'
      Object 'DATA_REG' of type 'struct_var'
        Object 'pkg::region_attr_t' of type 'struct_typespec'
          Object 'phase' of type 'typespec_member'
            Object 'pkg::phase_t' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'seed_e' of type 'enum_const'
              Object 'rma_e' of type 'enum_const'
              Object 'none_e' of type 'enum_const'
              Object 'invalid_e' of type 'enum_const'
          Object 'cfg' of type 'typespec_member'
            Object 'pkg::region_cfg_t' of type 'struct_typespec'
              Object 'en' of type 'typespec_member'
                Object 'pkg::enum_t' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'true_e' of type 'enum_const'
                  Object 'false_e' of type 'enum_const'
      Object 'DATA_REG' of type 'port'
        Object 'pkg::region_attr_t' of type 'struct_typespec'
          Object 'phase' of type 'typespec_member'
            Object 'pkg::phase_t' of type 'enum_typespec'
              Object '' of type 'logic_typespec'
                Object '' of type 'range'
                  Object '' of type 'constant'
                  Object '' of type 'constant'
              Object 'seed_e' of type 'enum_const'
              Object 'rma_e' of type 'enum_const'
              Object 'none_e' of type 'enum_const'
              Object 'invalid_e' of type 'enum_const'
          Object 'cfg' of type 'typespec_member'
            Object 'pkg::region_cfg_t' of type 'struct_typespec'
              Object 'en' of type 'typespec_member'
                Object 'pkg::enum_t' of type 'enum_typespec'
                  Object '' of type 'logic_typespec'
                    Object '' of type 'range'
                      Object '' of type 'constant'
                      Object '' of type 'constant'
                  Object 'true_e' of type 'enum_const'
                  Object 'false_e' of type 'enum_const'
      Object '' of type 'constant'
Generating RTLIL representation for module `\foo'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ModuleUsingStuctInput/top.sv:30.1-31.10> str='\foo'
      AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:30.37-30.45> str='\DATA_REG' input logic basic_prep range=[5:0] multirange=[ 0 6 ] multirange_swapped=[ 0 ]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='\region_attr_t' bits='0101110001110010011001010110011101101001011011110110111001011111011000010111010001110100011100100101111101110100'(112) basic_prep range=[111:0] int=1953652596 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[5:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:2.17-2.26> str='\ctrl_pkg::Banks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:3.17-3.34> str='\ctrl_pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> str='\pkg::true_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> bits='0110'(4) basic_prep range=[3:0] int=6
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> str='\pkg::false_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> bits='1001'(4) basic_prep range=[3:0] int=9
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='\pkg::enum_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[3:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> str='\pkg::seed_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> str='\pkg::rma_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> str='\pkg::none_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> str='\pkg::invalid_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> bits='11'(2) basic_prep range=[1:0] int=3
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='\pkg::phase_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> str='\pkg::region_attr_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:24.15-24.20> str='phase' basic_prep range=[5:4]
          AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='cfg' basic_prep range=[3:0]
            AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='\pkg::region_cfg_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:7.26-7.59> str='\pkg::NumBanks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:8.26-8.66> str='\pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:9.17-9.26> str='\pkg::Width' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) basic_prep range=[31:0] int=4 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module foo(DATA_REG);
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\region_attr_t" *)
      input [5:0] DATA_REG;
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ModuleUsingStuctInput/top.sv:30.1-31.10> str='\foo' basic_prep
      AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:30.37-30.45> str='\DATA_REG' input logic basic_prep range=[5:0] multirange=[ 0 6 ] multirange_swapped=[ 0 ]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='\region_attr_t' bits='0101110001110010011001010110011101101001011011110110111001011111011000010111010001110100011100100101111101110100'(112) basic_prep range=[111:0] int=1953652596 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[5:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:2.17-2.26> str='\ctrl_pkg::Banks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:3.17-3.34> str='\ctrl_pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> str='\pkg::true_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> bits='0110'(4) basic_prep range=[3:0] int=6
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> str='\pkg::false_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> bits='1001'(4) basic_prep range=[3:0] int=9
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='\pkg::enum_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[3:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> str='\pkg::seed_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> str='\pkg::rma_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> str='\pkg::none_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> str='\pkg::invalid_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> bits='11'(2) basic_prep range=[1:0] int=3
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='\pkg::phase_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> str='\pkg::region_attr_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:24.15-24.20> str='phase' basic_prep range=[5:4]
          AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='cfg' basic_prep range=[3:0]
            AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='\pkg::region_cfg_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:7.26-7.59> str='\pkg::NumBanks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:8.26-8.66> str='\pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:9.17-9.26> str='\pkg::Width' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) basic_prep range=[31:0] int=4 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module foo(DATA_REG);
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\region_attr_t" *)
      input [5:0] DATA_REG;
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ModuleUsingStuctInput/top.sv:33.1-35.10> str='\top'
      AST_CELL <tests/simple_tests/ModuleUsingStuctInput/top.sv:34.1-34.29> str='\f'
        AST_CELLTYPE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='\foo'
        AST_ARGUMENT <tests/simple_tests/ModuleUsingStuctInput/top.sv:34.1-34.29> str='\DATA_REG'
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='111111'(6) range=[5:0] int=63
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:2.17-2.26> str='\ctrl_pkg::Banks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:3.17-3.34> str='\ctrl_pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> str='\pkg::true_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> bits='0110'(4) basic_prep range=[3:0] int=6
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> str='\pkg::false_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> bits='1001'(4) basic_prep range=[3:0] int=9
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='\pkg::enum_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[3:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> str='\pkg::seed_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> str='\pkg::rma_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> str='\pkg::none_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> str='\pkg::invalid_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> bits='11'(2) basic_prep range=[1:0] int=3
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='\pkg::phase_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> str='\pkg::region_attr_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:24.15-24.20> str='phase' basic_prep range=[5:4]
          AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='cfg' basic_prep range=[3:0]
            AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='\pkg::region_cfg_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:7.26-7.59> str='\pkg::NumBanks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:8.26-8.66> str='\pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:9.17-9.26> str='\pkg::Width' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) basic_prep range=[31:0] int=4 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_CELL **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ModuleUsingStuctInput/top.sv:33.1-35.10> str='\top' basic_prep
      AST_CELL <tests/simple_tests/ModuleUsingStuctInput/top.sv:34.1-34.29> str='\f' basic_prep
        AST_CELLTYPE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='\foo' basic_prep
        AST_ARGUMENT <tests/simple_tests/ModuleUsingStuctInput/top.sv:34.1-34.29> str='\DATA_REG' basic_prep
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='111111'(6) basic_prep range=[5:0] int=63
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:2.17-2.26> str='\ctrl_pkg::Banks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:3.17-3.34> str='\ctrl_pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='$enum0' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> str='\pkg::true_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:11.5-11.18> bits='0110'(4) basic_prep range=[3:0] int=6
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> str='\pkg::false_e' logic basic_prep range=[3:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:12.5-12.19> bits='1001'(4) basic_prep range=[3:0] int=9
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.3-13.12> str='\pkg::enum_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[3:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum0' bits='001001000110010101101110011101010110110100110000'(48) basic_prep range=[47:0] int=1853189424 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:10.22-10.33> basic_prep range=[3:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ENUM <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='$enum1' logic basic_prep
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> str='\pkg::seed_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:15.5-15.11> bits='00'(2) basic_prep range=[1:0]
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> str='\pkg::rma_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:16.5-16.10> bits='01'(2) basic_prep range=[1:0] int=1
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> str='\pkg::none_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:17.5-17.11> bits='10'(2) basic_prep range=[1:0] int=2
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
        AST_ENUM_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> str='\pkg::invalid_e' logic basic_prep range=[1:0]
          ATTR \enum_base_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:18.5-18.14> bits='11'(2) basic_prep range=[1:0] int=3
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0]
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.3-19.13> str='\pkg::phase_t' basic_prep
        AST_WIRE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> reg basic_prep range=[1:0]
          ATTR \enum_type:
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> str='$enum1' bits='001001000110010101101110011101010110110100110001'(48) basic_prep range=[47:0] int=1853189425 in_param
          AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:14.22-14.27> basic_prep range=[1:0] in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_param
            AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> str='\pkg::region_attr_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:23.11-26.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:24.15-24.20> str='phase' basic_prep range=[5:4]
          AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='cfg' basic_prep range=[3:0]
            AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_TYPEDEF <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> str='\pkg::region_cfg_t' basic_prep
        AST_STRUCT <tests/simple_tests/ModuleUsingStuctInput/top.sv:20.11-22.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/ModuleUsingStuctInput/top.sv:21.12-21.14> str='en' basic_prep range=[3:0]
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:7.26-7.59> str='\pkg::NumBanks' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:8.26-8.66> str='\pkg::PagesPerBank' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000001000000'(32) basic_prep range=[31:0] int=64 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/ModuleUsingStuctInput/top.sv:9.17-9.26> str='\pkg::Width' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) basic_prep range=[31:0] int=4 in_param
        AST_RANGE <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ModuleUsingStuctInput/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_CELL **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_ENUM **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.36+8 (git sha1 e6021b2b4, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\foo'.

(* cells_not_processed =  1  *)
(* src = "tests/simple_tests/ModuleUsingStuctInput/top.sv:30.1-31.10" *)
module foo(DATA_REG);
  (* src = "tests/simple_tests/ModuleUsingStuctInput/top.sv:30.37-30.45" *)
  (* wiretype = "\\region_attr_t" *)
  input [5:0] DATA_REG;
  wire [5:0] DATA_REG;
endmodule
Dumping module `\top'.

(* cells_not_processed =  1  *)
(* src = "tests/simple_tests/ModuleUsingStuctInput/top.sv:33.1-35.10" *)
module top();
  (* module_not_derived = 32'd1 *)
  (* src = "tests/simple_tests/ModuleUsingStuctInput/top.sv:34.1-34.29" *)
  foo f (
    .DATA_REG(6'h3f)
  );
endmodule

Yosys 0.36+8 (git sha1 e6021b2b4, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
