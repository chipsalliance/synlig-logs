1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file uhdm-tests/build/slpp_all/surelog.log.

[WRN:PA0205] uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1:1: No timescale set for "dut".

[WRN:PA0205] uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:5:1: No timescale set for "top".

[INF:CP0300] Compilation...

[INF:CP0303] uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1:1: Compile module "work@dut".

[INF:CP0303] uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:5:1: Compile module "work@top".

[INF:CP0302] Compile class "work@mailbox".

[INF:CP0302] Compile class "work@process".

[INF:CP0302] Compile class "work@semaphore".

[INF:EL0526] Design Elaboration...

[NTE:EL0503] uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:5:1: Top level module "work@top".

[NTE:EL0508] Nb Top level modules: 1.

[NTE:EL0509] Max instance depth: 2.

[NTE:EL0510] Nb instances: 2.

[NTE:EL0511] Nb leaf instances: 1.

[INF:UH0706] Creating UHDM Model...

[INF:UH0707] Elaborating UHDM...

[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 2
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object '' of type 'module_inst'
    Object 'data' of type 'logic_net'
  Object '' of type 'module_inst'
  Object 'work@top' of type 'module_inst'
    Object 'd' of type 'module_inst'
      Object 'data' of type 'logic_net'
        Object '' of type 'logic_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
      Object 'data' of type 'port'
        Object '' of type 'logic_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
      Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:5.1-9.10> str='\top'
      AST_CELL <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:7.1-7.31> str='\d'
        AST_CELLTYPE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> str='\dut'
        AST_ARGUMENT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:7.1-7.31> str='\data'
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000'(8) range=[7:0]
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      /** AST_CELL **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:5.1-9.10> str='\top' basic_prep
      AST_CELL <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:7.1-7.31> str='\d' basic_prep
        AST_CELLTYPE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> str='\dut' basic_prep
        AST_ARGUMENT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:7.1-7.31> str='\data' basic_prep
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000'(8) basic_prep range=[7:0]
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_CELL **/
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `\dut'.
Dumping AST before simplification:
    AST_MODULE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.1-3.10> str='\dut'
      AST_WIRE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.24-1.28> str='\data' input logic port=1 multirange=[ 0 8 ] multirange_swapped=[ 0 ]
        AST_RANGE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.18-1.23> basic_prep range=[7:0]
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000000000000000000000000111'(32) signed basic_prep range=[31:0] int=7
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module dut(data);
      input [7:0] data;
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.1-3.10> str='\dut' basic_prep
      AST_WIRE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.24-1.28> str='\data' input logic basic_prep port=1 range=[7:0] multirange=[ 0 8 ] multirange_swapped=[ 0 ]
        AST_RANGE <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:1.18-1.23> basic_prep range=[7:0]
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000000000000000000000000111'(32) signed basic_prep range=[31:0] int=7
          AST_CONSTANT <uhdm-tests/simple_tests/AssignmentPatternArrayPort/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module dut(data);
      input [7:0] data;
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.30+16 (git sha1 8b2a00102, clang-15 15.0.7 -O0 -fsanitize-address-use-after-return=always -fsanitize-address-use-after-return=always -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.

module top();
  dut d (
    .data(8'h00)
  );
endmodule

Yosys 0.30+16 (git sha1 8b2a00102, clang-15 15.0.7 -O0 -fsanitize-address-use-after-return=always -fsanitize-address-use-after-return=always -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
