1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0301] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:1:1: Compile package "some_package".
[INF:CP0303] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:7:1: Compile module "work@module_name".
[INF:CP0303] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:10:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[INF:CP0335] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15:34: Compile generate block "work@top.gen_for_generate_loop_name[0]".
[INF:CP0335] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15:34: Compile generate block "work@top.gen_for_generate_loop_name[1]".
[NTE:EL0503] tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:10:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 3.
[NTE:EL0510] Nb instances: 3.
[NTE:EL0511] Nb leaf instances: 2.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'some_package' of type 'package'
    Object 'the_function_name' of type 'function'
      Object '' of type 'logic_var'
        Object '' of type 'logic_typespec'
      Object 'val' of type 'io_decl'
        Object '' of type 'logic_typespec'
      Object '' of type 'return_stmt'
        Object '' of type 'operation'
          Object 'val' of type 'ref_obj'
          Object '' of type 'constant'
  Object '' of type 'module_inst'
    Object 'module_input' of type 'logic_net'
  Object '' of type 'module_inst'
    Object 'some_package' of type 'import_typespec'
    Object 'some_wire' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'k' of type 'logic_net'
  Object 'work@top' of type 'module_inst'
    Object 'the_function_name' of type 'function'
      Object '' of type 'logic_var'
        Object '' of type 'logic_typespec'
      Object 'val' of type 'io_decl'
        Object '' of type 'logic_typespec'
      Object '' of type 'return_stmt'
        Object '' of type 'operation'
          Object 'val' of type 'ref_obj'
          Object '' of type 'constant'
    Object 'gen_for_generate_loop_name[0]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'k' of type 'parameter'
        Object 'the_function_name' of type 'logic_net'
        Object 'an_instance' of type 'module_inst'
          Object 'module_input' of type 'logic_net'
            Object '' of type 'logic_typespec'
          Object 'module_input' of type 'port'
            Object '' of type 'logic_typespec'
          Object 'the_function_name' of type 'func_call'
            Object 'some_wire' of type 'ref_obj'
    Object 'gen_for_generate_loop_name[1]' of type 'gen_scope_array'
      Object '' of type 'gen_scope'
        Object 'k' of type 'parameter'
        Object 'the_function_name' of type 'logic_net'
        Object 'an_instance' of type 'module_inst'
          Object 'the_function_name' of type 'func_call'
            Object 'some_wire' of type 'ref_obj'
    Object 'some_wire' of type 'logic_var'
      Object '' of type 'logic_typespec'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:10.1-21.16> str='\top'
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:13.9-13.18> str='\some_wire' logic
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.22-15.23> str='\k' logic range=[0:0]
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=2 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_GENBLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.34-19.6> str='\gen_for_generate_loop_name[0]'
        AST_LOCALPARAM <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> str='\k' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> bits='00000000000000000000000000000000'(32) unsized range=[31:0] in_param
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.38> str='\the_function_name' logic range=[0:0]
        AST_CELL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\an_instance'
          AST_CELLTYPE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\module_name'
          AST_ARGUMENT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\module_input'
            AST_FCALL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name'
              AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.39-17.48> str='\some_wire'
      AST_GENBLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.34-19.6> str='\gen_for_generate_loop_name[1]'
        AST_LOCALPARAM <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> str='\k' multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> bits='00000000000000000000000000000001'(32) unsized range=[31:0] int=1 in_param
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.38> str='\the_function_name' logic range=[0:0]
        AST_CELL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\an_instance'
          AST_CELLTYPE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\module_name'
          AST_ARGUMENT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\module_input'
            AST_FCALL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name'
              AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.39-17.48> str='\some_wire'
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\some_package::the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      wire [0:0] some_wire;
      wire k;
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      /** AST_GENBLOCK **/
      /** AST_GENBLOCK **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:10.1-21.16> str='\top' basic_prep
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:13.9-13.18> str='\some_wire' logic basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.22-15.23> str='\k' logic basic_prep range=[0:0]
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=2 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_GENBLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.34-19.6> str='\gen_for_generate_loop_name[0]' basic_prep
      AST_GENBLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.34-19.6> str='\gen_for_generate_loop_name[1]' basic_prep
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\some_package::the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
      AST_LOCALPARAM <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> str='\gen_for_generate_loop_name[0].k' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> bits='00000000000000000000000000000000'(32) unsized basic_prep range=[31:0] in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.38> str='\gen_for_generate_loop_name[0].the_function_name' logic basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$1.$result' logic reg basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ALWAYS <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
        AST_BLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val' basic_prep in_lvalue
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.39-17.48> str='\some_wire' basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result' basic_prep in_lvalue
            AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20> basic_prep
              AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val' basic_prep
              AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$1.$result' basic_prep in_lvalue
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result' basic_prep
      AST_CELL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\gen_for_generate_loop_name[0].an_instance' basic_prep
        AST_CELLTYPE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\module_name' basic_prep
        AST_ARGUMENT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\module_input' basic_prep
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$1.$result' basic_prep
      AST_LOCALPARAM <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> str='\gen_for_generate_loop_name[1].k' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ] in_param
        AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:15.0-15.0> bits='00000000000000000000000000000001'(32) unsized basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.38> str='\gen_for_generate_loop_name[1].the_function_name' logic basic_prep range=[0:0]
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$2.$result' logic reg basic_prep range=[0:0]
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ALWAYS <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
        AST_BLOCK <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val' basic_prep in_lvalue
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.39-17.48> str='\some_wire' basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result' basic_prep in_lvalue
            AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20> basic_prep
              AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val' basic_prep
              AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
          AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$2.$result' basic_prep in_lvalue
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result' basic_prep
      AST_CELL <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\gen_for_generate_loop_name[1].an_instance' basic_prep
        AST_CELLTYPE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\module_name' basic_prep
        AST_ARGUMENT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:16.5-18.7> str='\module_input' basic_prep
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17.21-17.49> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$2.$result' basic_prep
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result' logic reg basic_prep range=[0:0]
        ATTR \nosync:
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val' logic reg basic_prep range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        ATTR \nosync:
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result' logic reg basic_prep range=[0:0]
        ATTR \nosync:
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val' logic reg basic_prep range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        ATTR \nosync:
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_LOCALPARAM **/
      /** AST_LOCALPARAM **/
      wire [0:0] some_wire;
      wire k;
      wire \gen_for_generate_loop_name[0].the_function_name ;
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$1.$result ;
      wire \gen_for_generate_loop_name[1].the_function_name ;
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$2.$result ;
      (* nosync = 1 *)
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result ;
      (* nosync = 1 *)
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val ;
      (* nosync = 1 *)
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result ;
      (* nosync = 1 *)
      reg [0:0] \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val ;
      /** AST_FUNCTION **/
      /** AST_FUNCTION **/
      /** AST_GENBLOCK **/
      /** AST_GENBLOCK **/
      always @*
        begin
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val  = some_wire;
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result  = (\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.val )==(1);
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$1.$result  = \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$3.$result ;
        end
      /** AST_CELL **/
      always @*
        begin
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val  = some_wire;
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result  = (\some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.val )==(1);
          \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$2.$result  = \some_package::the_function_name$func$tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:17$4.$result ;
        end
      /** AST_CELL **/
    endmodule
--- END OF AST DUMP ---
Generating RTLIL representation for module `\module_name'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:7.1-8.10> str='\module_name'
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:7.33-7.45> str='\module_input' input logic port=3 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\some_package::the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module module_name(module_input);
      input [0:0] module_input;
      /** AST_FUNCTION **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:7.1-8.10> str='\module_name' basic_prep
      AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:7.33-7.45> str='\module_input' input logic basic_prep port=3 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_FUNCTION <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.3-4.34> str='\some_package::the_function_name'
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.22-2.27> str='\some_package::the_function_name' logic
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_param
        AST_WIRE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:2.52-2.55> str='\val' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
          AST_RANGE <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> basic_prep range=[0:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
        AST_ASSIGN_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.5-3.11>
          AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> str='\some_package::the_function_name' in_lvalue
          AST_EQ <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.20>
            AST_IDENTIFIER <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:3.12-3.15> str='\val'
            AST_CONSTANT <tests/simple_tests/ImportedFunctionCallAsInstantiatedModulePortValueInsideGenFor/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module module_name(module_input);
      input [0:0] module_input;
      /** AST_FUNCTION **/
    endmodule
--- END OF AST DUMP ---

Yosys 0.36+8 (git sha1 fb4cbfa73, clang++-15 15.0.6 -O0 -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
