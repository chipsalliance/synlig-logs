1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0303] tests/simple_tests/Break/top.sv:1:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/Break/top.sv:1:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'work@top' of type 'module_inst'
    Object 'a' of type 'int_var'
    Object 'b' of type 'int_var'
    Object 'a' of type 'port'
      Object '' of type 'int_typespec'
    Object 'b' of type 'port'
      Object '' of type 'int_typespec'
    Object '' of type 'initial'
      Object '' of type 'begin'
        Object '' of type 'assignment'
          Object 'a' of type 'ref_obj'
          Object '' of type 'constant'
        Object '' of type 'assignment'
          Object 'b' of type 'ref_obj'
          Object '' of type 'constant'
        Object '' of type 'repeat'
          Object '' of type 'constant'
          Object '' of type 'begin'
            Object '' of type 'assignment'
              Object 'a' of type 'ref_obj'
              Object '' of type 'operation'
                Object 'a' of type 'ref_obj'
                Object '' of type 'constant'
            Object '' of type 'if_stmt'
              Object '' of type 'operation'
                Object 'a' of type 'ref_obj'
                Object '' of type 'constant'
              Object '' of type 'break_stmt'
            Object '' of type 'assignment'
              Object 'b' of type 'ref_obj'
              Object '' of type 'operation'
                Object 'b' of type 'ref_obj'
                Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/Break/top.sv:1.1-11.10> str='\top'
      AST_WIRE <tests/simple_tests/Break/top.sv:1.23-1.24> str='\a' output signed port=1 dimensions=[31:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/Break/top.sv:1.37-1.38> str='\b' output signed port=2 dimensions=[31:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_INITIAL <tests/simple_tests/Break/top.sv:2.4-10.7>
        AST_BLOCK <tests/simple_tests/Break/top.sv:2.12-10.7>
          AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:3.7-3.12>
            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:3.7-3.8> str='\a' in_lvalue
            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:4.7-4.12>
            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:4.7-4.8> str='\b' in_lvalue
            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0'
            AST_WIRE <tests/simple_tests/Break/top.sv:5.7-5.13> str='$break' reg range=[0:0]
              AST_RANGE <tests/simple_tests/Break/top.sv:5.7-5.13> in_param
                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13>
              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$break' in_lvalue
              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_WIRE <tests/simple_tests/Break/top.sv:5.7-5.13> str='$continue' reg range=[0:0]
              AST_RANGE <tests/simple_tests/Break/top.sv:5.7-5.13> in_param
                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0] in_param
              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
            AST_REPEAT <tests/simple_tests/Break/top.sv:5.7-5.13> str='$loop0'
              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001111'(32) signed range=[31:0] int=15
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> str='$loop0'
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13>
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$break'
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13>
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> str='$loop0'
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13>
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$continue' in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20>
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20>
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a'
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28>
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0>
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20>
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a'
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0>
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13>
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$continue' in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13>
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$break' in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13>
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$continue'
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13>
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13>
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19>
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19>
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b'
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed range=[31:0] int=5
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top(a, b);
      output signed [31:0] a;
      output signed [31:0] b;
      initial
        begin
          a = 0;
          b = 0;
          begin
            reg [0:0] 0 \$break ;
            \$break  = 0;
            reg [0:0] 0 \$continue ;
            /** AST_REPEAT **/
          end
        end
    endmodule
--- END OF AST DUMP ---
Warning: wire '\a' is assigned in a block at tests/simple_tests/Break/top.sv:3.7-3.12.
Warning: wire '\b' is assigned in a block at tests/simple_tests/Break/top.sv:4.7-4.12.
Warning: wire '\a' is assigned in a block at tests/simple_tests/Break/top.sv:6.10-6.20.
Warning: wire '\b' is assigned in a block at tests/simple_tests/Break/top.sv:8.10-8.19.
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/Break/top.sv:1.1-11.10> str='\top' basic_prep
      AST_WIRE <tests/simple_tests/Break/top.sv:1.23-1.24> str='\a' output signed basic_prep port=1 range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/Break/top.sv:1.37-1.38> str='\b' output signed basic_prep port=2 range=[31:0] dimensions=[31:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_INITIAL <tests/simple_tests/Break/top.sv:2.4-10.7> basic_prep
        AST_BLOCK <tests/simple_tests/Break/top.sv:2.12-10.7> basic_prep
          AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:3.7-3.12> basic_prep
            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:3.7-3.8> str='\a' basic_prep in_lvalue
            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:4.7-4.12> basic_prep
            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:4.7-4.8> str='\b' basic_prep in_lvalue
            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
            AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                  AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep
                  AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                    AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                    AST_BLOCK <tests/simple_tests/Break/top.sv:5.18-9.10> basic_prep
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
                      AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:6.10-6.20> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.10-6.11> str='\a' basic_prep in_lvalue
                        AST_ADD <tests/simple_tests/Break/top.sv:6.14-6.20> basic_prep
                          AST_IDENTIFIER <tests/simple_tests/Break/top.sv:6.14-6.15> str='\a' basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000001010'(32) signed basic_prep range=[31:0] int=10
                      AST_CASE <tests/simple_tests/Break/top.sv:7.10-7.28> basic_prep
                        AST_REDUCE_BOOL <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_GT <tests/simple_tests/Break/top.sv:7.13-7.20> basic_prep
                            AST_IDENTIFIER <tests/simple_tests/Break/top.sv:7.13-7.14> str='\a' basic_prep
                            AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000001100100'(32) signed basic_prep range=[31:0] int=100
                        AST_COND <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
                          AST_BLOCK <tests/simple_tests/Break/top.sv:0.0-0.0> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' basic_prep in_lvalue
                              AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
                      AST_CASE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                        AST_IDENTIFIER <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' basic_prep
                        AST_COND <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
                          AST_BLOCK <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep
                            AST_ASSIGN_EQ <tests/simple_tests/Break/top.sv:8.10-8.19> basic_prep
                              AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.10-8.11> str='\b' basic_prep in_lvalue
                              AST_ADD <tests/simple_tests/Break/top.sv:8.14-8.19> basic_prep
                                AST_IDENTIFIER <tests/simple_tests/Break/top.sv:8.14-8.15> str='\b' basic_prep
                                AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
      AST_WIRE <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$break' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/Break/top.sv:5.7-5.13> str='$repeatdecl_block0.$continue' reg basic_prep range=[0:0] dimensions=[0:0]
        AST_RANGE <tests/simple_tests/Break/top.sv:5.7-5.13> basic_prep range=[0:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/Break/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top(a, b);
      output signed [31:0] a;
      output signed [31:0] b;
      reg [0:0] 0 \$repeatdecl_block0.$break ;
      reg [0:0] 0 \$repeatdecl_block0.$continue ;
      initial
        begin
          a = 0;
          b = 0;
          begin
            \$repeatdecl_block0.$break  = 0;
            begin
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
              case (\$repeatdecl_block0.$break )
                1'b 0:
                  begin
                    \$repeatdecl_block0.$continue  = 0;
                    a = (a)+(10);
                    case (|((a)>(100)))
                      1'b 1:
                        begin
                          \$repeatdecl_block0.$continue  = 1;
                          \$repeatdecl_block0.$break  = 1;
                        end
                    endcase
                    case (\$repeatdecl_block0.$continue )
                      1'b 0:
                        b = (b)+(5);
                    endcase
                  end
              endcase
            end
          end
        end
    endmodule
--- END OF AST DUMP ---

2. Executing PREP pass.

2.1. Executing HIERARCHY pass (managing design hierarchy).

2.1.1. Analyzing design hierarchy..
Top module:  \top

2.1.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.2. Executing PROC pass (convert processes to netlists).

2.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
Cleaned up 1 empty switch.

2.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 44 switch rules as full_case in process $proc$tests/simple_tests/Break/top.sv:2$1 in module top.
Removed a total of 0 dead cases.

2.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 8 assignments to connections.

2.2.4. Executing PROC_INIT pass (extract init attributes).

2.2.5. Executing PROC_ARST pass (detect async resets in processes).

2.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~44 debug messages>

2.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
     1/101: $30\b[31:0]
     2/101: $30$repeatdecl_block0.$break[0:0]$107
     3/101: $30$repeatdecl_block0.$continue[0:0]$106
     4/101: $29\b[31:0]
     5/101: $29$repeatdecl_block0.$break[0:0]$103
     6/101: $29$repeatdecl_block0.$continue[0:0]$102
     7/101: $15\a[31:0]
     8/101: $28\b[31:0]
     9/101: $28$repeatdecl_block0.$break[0:0]$100
    10/101: $28$repeatdecl_block0.$continue[0:0]$99
    11/101: $27\b[31:0]
    12/101: $27$repeatdecl_block0.$break[0:0]$96
    13/101: $27$repeatdecl_block0.$continue[0:0]$95
    14/101: $14\a[31:0]
    15/101: $26\b[31:0]
    16/101: $26$repeatdecl_block0.$break[0:0]$93
    17/101: $26$repeatdecl_block0.$continue[0:0]$92
    18/101: $25\b[31:0]
    19/101: $25$repeatdecl_block0.$break[0:0]$89
    20/101: $25$repeatdecl_block0.$continue[0:0]$88
    21/101: $13\a[31:0]
    22/101: $24\b[31:0]
    23/101: $24$repeatdecl_block0.$break[0:0]$86
    24/101: $24$repeatdecl_block0.$continue[0:0]$85
    25/101: $23\b[31:0]
    26/101: $23$repeatdecl_block0.$break[0:0]$82
    27/101: $23$repeatdecl_block0.$continue[0:0]$81
    28/101: $12\a[31:0]
    29/101: $22\b[31:0]
    30/101: $22$repeatdecl_block0.$break[0:0]$79
    31/101: $22$repeatdecl_block0.$continue[0:0]$78
    32/101: $21\b[31:0]
    33/101: $21$repeatdecl_block0.$break[0:0]$75
    34/101: $21$repeatdecl_block0.$continue[0:0]$74
    35/101: $11\a[31:0]
    36/101: $20\b[31:0]
    37/101: $20$repeatdecl_block0.$break[0:0]$72
    38/101: $20$repeatdecl_block0.$continue[0:0]$71
    39/101: $19\b[31:0]
    40/101: $19$repeatdecl_block0.$break[0:0]$68
    41/101: $19$repeatdecl_block0.$continue[0:0]$67
    42/101: $10\a[31:0]
    43/101: $18\b[31:0]
    44/101: $18$repeatdecl_block0.$break[0:0]$65
    45/101: $18$repeatdecl_block0.$continue[0:0]$64
    46/101: $17\b[31:0]
    47/101: $17$repeatdecl_block0.$break[0:0]$61
    48/101: $17$repeatdecl_block0.$continue[0:0]$60
    49/101: $9\a[31:0]
    50/101: $16\b[31:0]
    51/101: $16$repeatdecl_block0.$break[0:0]$58
    52/101: $16$repeatdecl_block0.$continue[0:0]$57
    53/101: $15\b[31:0]
    54/101: $15$repeatdecl_block0.$break[0:0]$54
    55/101: $15$repeatdecl_block0.$continue[0:0]$53
    56/101: $8\a[31:0]
    57/101: $14\b[31:0]
    58/101: $14$repeatdecl_block0.$break[0:0]$51
    59/101: $14$repeatdecl_block0.$continue[0:0]$50
    60/101: $13\b[31:0]
    61/101: $13$repeatdecl_block0.$break[0:0]$47
    62/101: $13$repeatdecl_block0.$continue[0:0]$46
    63/101: $7\a[31:0]
    64/101: $12\b[31:0]
    65/101: $12$repeatdecl_block0.$break[0:0]$44
    66/101: $12$repeatdecl_block0.$continue[0:0]$43
    67/101: $11\b[31:0]
    68/101: $11$repeatdecl_block0.$break[0:0]$40
    69/101: $11$repeatdecl_block0.$continue[0:0]$39
    70/101: $6\a[31:0]
    71/101: $10\b[31:0]
    72/101: $10$repeatdecl_block0.$break[0:0]$37
    73/101: $10$repeatdecl_block0.$continue[0:0]$36
    74/101: $9\b[31:0]
    75/101: $9$repeatdecl_block0.$break[0:0]$33
    76/101: $9$repeatdecl_block0.$continue[0:0]$32
    77/101: $5\a[31:0]
    78/101: $8\b[31:0]
    79/101: $8$repeatdecl_block0.$break[0:0]$30
    80/101: $8$repeatdecl_block0.$continue[0:0]$29
    81/101: $7\b[31:0]
    82/101: $7$repeatdecl_block0.$break[0:0]$26
    83/101: $7$repeatdecl_block0.$continue[0:0]$25
    84/101: $4\a[31:0]
    85/101: $6\b[31:0]
    86/101: $6$repeatdecl_block0.$break[0:0]$23
    87/101: $6$repeatdecl_block0.$continue[0:0]$22
    88/101: $5\b[31:0]
    89/101: $5$repeatdecl_block0.$break[0:0]$19
    90/101: $5$repeatdecl_block0.$continue[0:0]$18
    91/101: $3\a[31:0]
    92/101: $4\b[31:0]
    93/101: $4$repeatdecl_block0.$break[0:0]$16
    94/101: $4$repeatdecl_block0.$continue[0:0]$15
    95/101: $3\b[31:0]
    96/101: $3$repeatdecl_block0.$break[0:0]$12
    97/101: $3$repeatdecl_block0.$continue[0:0]$11
    98/101: $2\a[31:0]
    99/101: $2\b[31:0]
   100/101: $2$repeatdecl_block0.$break[0:0]$9
   101/101: $2$repeatdecl_block0.$continue[0:0]$8

2.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\top.$repeatdecl_block0.$continue' from process `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
No latch inferred for signal `\top.$repeatdecl_block0.$break' from process `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
No latch inferred for signal `\top.\b' from process `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
No latch inferred for signal `\top.\a' from process `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.

2.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

2.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

2.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 44 empty switches in `\top.$proc$tests/simple_tests/Break/top.sv:2$1'.
Removing empty process `top.$proc$tests/simple_tests/Break/top.sv:2$1'.
Cleaned up 44 empty switches.

2.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~414 debug messages>

2.3. Executing FUTURE pass.

2.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 442 unused wires.
<suppressed ~1 debug messages>

2.6. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

2.7. Executing OPT pass (performing simple optimizations).

2.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

2.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.7.8. Finished OPT passes. (There is nothing left to do.)

2.8. Executing WREDUCE pass (reducing word size of cells).

2.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10. Executing MEMORY_COLLECT pass (generating $mem cells).

2.11. Executing OPT pass (performing simple optimizations).

2.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.11.4. Finished fast OPT passes.

2.12. Printing statistics.

=== top ===

   Number of wires:                  2
   Number of wire bits:             64
   Number of public wires:           2
   Number of public wire bits:      64
   Number of ports:                  2
   Number of port bits:             64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0

2.13. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

3. Executing Verilog backend.

3.1. Executing BMUXMAP pass.

3.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.45+3 (git sha1 d56716417, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.

(* top =  1  *)
(* src = "tests/simple_tests/Break/top.sv:1.1-11.10" *)
module top(a, b);
  (* src = "tests/simple_tests/Break/top.sv:1.23-1.24" *)
  output [31:0] a;
  wire [31:0] a;
  (* src = "tests/simple_tests/Break/top.sv:1.37-1.38" *)
  output [31:0] b;
  wire [31:0] b;
  assign a = 32'd110;
  assign b = 32'd50;
endmodule

4. Executing Verilog backend.

4.1. Executing BMUXMAP pass.

4.2. Executing DEMUXMAP pass.
Dumping module `\top'.

5. Executing SIM pass (simulate the circuit).

===== 0 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 5 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 10 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 15 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 20 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 25 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 30 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 35 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 40 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 45 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 50 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 55 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 60 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 65 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 70 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 75 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 80 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 85 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 90 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 95 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 100 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 105 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 110 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 115 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 120 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 125 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 130 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 135 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 140 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 145 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 150 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 155 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 160 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 165 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 170 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 175 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 180 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 185 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 190 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 195 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110

===== 200 =====

-- ph1 --

-- ph2 --

-- ph3 --
[top] get \b: 50
[top] get \a: 110
[top] get \b: 50
[top] get \a: 110

Warnings: 4 unique messages, 4 total
Yosys 0.45+3 (git sha1 d56716417, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
