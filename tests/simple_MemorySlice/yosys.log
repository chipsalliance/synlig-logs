1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file tests/build/slpp_all/surelog.log.

[WRN:PA0205] tests/simple_tests/MemorySlice/top.sv:1:1: No timescale set for "top".

[INF:CP0300] Compilation...

[INF:CP0303] tests/simple_tests/MemorySlice/top.sv:1:1: Compile module "work@top".

[INF:CP0302] Compile class "work@mailbox".

[INF:CP0302] Compile class "work@process".

[INF:CP0302] Compile class "work@semaphore".

[INF:EL0526] Design Elaboration...

[NTE:EL0503] tests/simple_tests/MemorySlice/top.sv:1:1: Top level module "work@top".

[NTE:EL0508] Nb Top level modules: 1.

[NTE:EL0509] Max instance depth: 1.

[NTE:EL0510] Nb instances: 1.

[NTE:EL0511] Nb leaf instances: 0.

[INF:UH0706] Creating UHDM Model...

[INF:UH0707] Elaborating UHDM...

[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 1
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object '' of type 'module_inst'
    Object 'N' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'N' of type 'parameter'
      Object '' of type 'constant'
    Object 'ck' of type 'logic_net'
    Object 'sin' of type 'logic_net'
    Object 'sout' of type 'logic_net'
    Object 'mem' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object '' of type 'always'
      Object '' of type 'event_control'
        Object '' of type 'operation'
          Object 'ck' of type 'ref_obj'
        Object '' of type 'begin'
          Object '' of type 'assignment'
            Object 'mem' of type 'part_select'
              Object '' of type 'operation'
                Object 'N' of type 'ref_obj'
                Object '' of type 'constant'
              Object '' of type 'constant'
            Object 'mem' of type 'part_select'
              Object '' of type 'operation'
                Object 'N' of type 'ref_obj'
                Object '' of type 'constant'
              Object '' of type 'constant'
          Object '' of type 'assignment'
            Object 'mem' of type 'bit_select'
              Object '' of type 'constant'
            Object 'sin' of type 'ref_obj'
  Object 'work@top' of type 'module_inst'
    Object 'N' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'N' of type 'parameter'
      Object '' of type 'constant'
    Object 'ck' of type 'port'
      Object '' of type 'logic_typespec'
    Object 'sin' of type 'port'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'sout' of type 'port'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'ck' of type 'logic_net'
      Object '' of type 'logic_typespec'
    Object 'sin' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object 'sout' of type 'logic_net'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'sout' of type 'ref_obj'
      Object 'mem' of type 'bit_select'
        Object '' of type 'operation'
          Object 'N' of type 'ref_obj'
          Object '' of type 'constant'
    Object 'mem' of type 'array_var'
      Object '' of type 'array_typespec'
      Object '' of type 'logic_typespec'
        Object '' of type 'range'
          Object '' of type 'constant'
          Object '' of type 'constant'
      Object '' of type 'range'
        Object '' of type 'constant'
        Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/MemorySlice/top.sv:1.1-11.10> str='\top'
      AST_PARAMETER <tests/simple_tests/MemorySlice/top.sv:1.24-1.27> str='\N' multirange=[ 0 32 ] multirange_swapped=[ 0 ]
        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) range=[31:0] int=8
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:2.17-2.19> str='\ck' input logic port=1 multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[0:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:2.39-2.42> str='\sin' input logic port=2 multirange=[ 0 4 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:2.33-2.38> basic_prep range=[3:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:3.24-3.28> str='\sout' output logic port=3 multirange=[ 0 4 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:3.18-3.23> basic_prep range=[3:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:4.13-4.16> str='\mem' logic multirange=[ 0 4 0 8 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed range=[31:0] int=31
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
      AST_ASSIGN <tests/simple_tests/MemorySlice/top.sv:5.8-5.23>
        AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.8-5.12> str='\sout'
        AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.19-5.22> str='\mem' basic_prep
          AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
            AST_SUB <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
              AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                AST_ADD <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                  AST_SUB <tests/simple_tests/MemorySlice/top.sv:5.19-5.22>
                    AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.19-5.20> str='\N'
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
              AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
            AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
              AST_SUB <tests/simple_tests/MemorySlice/top.sv:5.19-5.22>
                AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.19-5.20> str='\N'
                AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
      AST_ALWAYS <tests/simple_tests/MemorySlice/top.sv:6.1-10.4>
        ATTR \always_ff:
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
        AST_POSEDGE <tests/simple_tests/MemorySlice/top.sv:6.14-6.24>
          AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:6.22-6.24> str='\ck'
        AST_BLOCK <tests/simple_tests/MemorySlice/top.sv:6.11-6.25>
          AST_BLOCK <tests/simple_tests/MemorySlice/top.sv:7.1-10.4>
            AST_ASSIGN_LE <tests/simple_tests/MemorySlice/top.sv:8.3-8.29>
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.3-8.14> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                  AST_SUB <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/MemorySlice/top.sv:8.8-8.11>
                          AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.8-8.9> str='\N'
                          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.18-8.29> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                  AST_SUB <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/MemorySlice/top.sv:8.23-8.26>
                          AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.23-8.24> str='\N'
                          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
            AST_ASSIGN_LE <tests/simple_tests/MemorySlice/top.sv:9.3-9.17>
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:9.3-9.10> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                  AST_SUB <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1
                  AST_MUL <tests/simple_tests/MemorySlice/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) range=[31:0] int=4
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:9.14-9.17> str='\sin'
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top(ck, sin, sout);
      /** AST_PARAMETER **/
      input [0:0] ck;
      input [3:0] sin;
      output [3:0] sout;
      wire [31:0] mem;
      assign sout = mem[((((N)-(1))+(1))*(4))-(1):((N)-(1))*(4)];
      (* always_ff = 1 *)
      always @(posedge ck)
        begin
          mem[((((N)-(1))+(1))*(4))-(1):(1)*(4)] <= mem[((((N)-(2))+(1))*(4))-(1):(0)*(4)];
          mem[(((0)+(1))*(4))-(1):(0)*(4)] <= sin;
        end
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/MemorySlice/top.sv:1.1-11.10> str='\top' basic_prep
      AST_PARAMETER <tests/simple_tests/MemorySlice/top.sv:1.24-1.27> str='\N' basic_prep range=[31:0] multirange=[ 0 32 ] multirange_swapped=[ 0 ]
        AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) basic_prep range=[31:0] int=8
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:2.17-2.19> str='\ck' input logic basic_prep port=1 range=[0:0] multirange=[ 0 1 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[0:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:2.39-2.42> str='\sin' input logic basic_prep port=2 range=[3:0] multirange=[ 0 4 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:2.33-2.38> basic_prep range=[3:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:3.24-3.28> str='\sout' output logic basic_prep port=3 range=[3:0] multirange=[ 0 4 ] multirange_swapped=[ 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:3.18-3.23> basic_prep range=[3:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_WIRE <tests/simple_tests/MemorySlice/top.sv:4.13-4.16> str='\mem' logic reg basic_prep range=[31:0] multirange=[ 0 4 0 8 ] multirange_swapped=[ 0 0 ]
        AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[31:0]
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
      AST_ASSIGN <tests/simple_tests/MemorySlice/top.sv:5.8-5.23> basic_prep
        AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.8-5.12> str='\sout' basic_prep
        AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:5.19-5.22> str='\mem' basic_prep
          AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[31:28]
            AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) basic_prep range=[31:0] int=31
            AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011100'(32) basic_prep range=[31:0] int=28
      AST_ALWAYS <tests/simple_tests/MemorySlice/top.sv:6.1-10.4> basic_prep
        ATTR \always_ff:
          AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1
        AST_POSEDGE <tests/simple_tests/MemorySlice/top.sv:6.14-6.24> basic_prep
          AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:6.22-6.24> str='\ck' basic_prep
        AST_BLOCK <tests/simple_tests/MemorySlice/top.sv:6.11-6.25> basic_prep
          AST_BLOCK <tests/simple_tests/MemorySlice/top.sv:7.1-10.4> basic_prep
            AST_ASSIGN_LE <tests/simple_tests/MemorySlice/top.sv:8.3-8.29> basic_prep
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.3-8.14> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[31:4]
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) basic_prep range=[31:0] int=31
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000100'(32) basic_prep range=[31:0] int=4
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:8.18-8.29> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[27:0]
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000011011'(32) basic_prep range=[31:0] int=27
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
            AST_ASSIGN_LE <tests/simple_tests/MemorySlice/top.sv:9.3-9.17> basic_prep
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:9.3-9.10> str='\mem' basic_prep
                AST_RANGE <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> basic_prep range=[3:0]
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3
                  AST_CONSTANT <tests/simple_tests/MemorySlice/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) basic_prep range=[31:0]
              AST_IDENTIFIER <tests/simple_tests/MemorySlice/top.sv:9.14-9.17> str='\sin' basic_prep
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top(ck, sin, sout);
      /** AST_PARAMETER **/
      input [0:0] ck;
      input [3:0] sin;
      output [3:0] sout;
      reg [31:0] mem;
      assign sout = mem[31:28];
      (* always_ff = 1 *)
      always @(posedge ck)
        begin
          mem[31:4] <= mem[27:0];
          mem[3:0] <= sin;
        end
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Yosys 0.33+56 (git sha1 c4762d930, clang-15 15.0.6 -O0 -fsanitize-address-use-after-return=always -fsanitize-address-use-after-return=always -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.
Warning: Module top contains unmapped RTLIL processes. RTLIL processes
can't always be mapped directly to Verilog always blocks. Unintended
changes in simulation behavior are possible! Use "proc" to convert
processes to logic networks and registers.

module top(ck, sin, sout);
  reg \$auto$verilog_backend.cc:2184:dump_module$2  = 0;
  reg [31:0] _0_;
  input ck;
  wire ck;
  reg [31:0] mem;
  input [3:0] sin;
  wire [3:0] sin;
  output [3:0] sout;
  wire [3:0] sout;
  always @* begin
    if (\$auto$verilog_backend.cc:2184:dump_module$2 ) begin end
    _0_[31:4] = mem[27:0];
    _0_[3:0] = sin;
  end
  always @(posedge ck) begin
      mem <= _0_;
  end
  assign sout = mem[31:28];
endmodule

Warnings: 1 unique messages, 1 total
Yosys 0.33+56 (git sha1 c4762d930, clang-15 15.0.6 -O0 -fsanitize-address-use-after-return=always -fsanitize-address-use-after-return=always -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address)
