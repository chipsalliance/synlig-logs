1. Executing Verilog with UHDM frontend.
[INF:CM0023] Creating log file "tests/build/slpp_all/surelog.log".
[INF:CP0300] Compilation...
[INF:CP0301] tests/simple_tests/UnionCustomTypeMultirange/top.sv:1:1: Compile package "pkg".
[INF:CP0303] tests/simple_tests/UnionCustomTypeMultirange/top.sv:23:1: Compile module "work@top".
[INF:CP0302] Compile class "work@mailbox".
[INF:CP0302] Compile class "work@process".
[INF:CP0302] Compile class "work@semaphore".
[INF:EL0526] Design Elaboration...
[NTE:EL0503] tests/simple_tests/UnionCustomTypeMultirange/top.sv:23:1: Top level module "work@top".
[NTE:EL0508] Nb Top level modules: 1.
[NTE:EL0509] Max instance depth: 1.
[NTE:EL0510] Nb instances: 1.
[NTE:EL0511] Nb leaf instances: 0.
[INF:UH0706] Creating UHDM Model...
[INF:UH0707] Elaborating UHDM...
[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 0
[   NOTE] : 5
Object 'work@top' of type 'design'
  Object 'builtin' of type 'package'
  Object 'pkg' of type 'package'
    Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
      Object 'a' of type 'typespec_member'
      Object 'b' of type 'typespec_member'
      Object 'c' of type 'typespec_member'
    Object 'pkg::my_packed_struct_with_array_t' of type 'struct_typespec'
      Object 'my_array' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
    Object 'pkg::my_packed_union_with_array_t' of type 'union_typespec'
      Object 'my_array' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
      Object 'my_array2' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
    Object 'J' of type 'parameter'
    Object 'K' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'J' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'K' of type 'parameter'
      Object '' of type 'constant'
  Object 'work@top' of type 'module_inst'
    Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
      Object 'a' of type 'typespec_member'
      Object 'b' of type 'typespec_member'
      Object 'c' of type 'typespec_member'
    Object 'pkg::my_packed_struct_with_array_t' of type 'struct_typespec'
      Object 'my_array' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
    Object 'pkg::my_packed_union_with_array_t' of type 'union_typespec'
      Object 'my_array' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
      Object 'my_array2' of type 'typespec_member'
        Object '' of type 'packed_array_typespec'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object '' of type 'range'
            Object '' of type 'constant'
            Object '' of type 'constant'
          Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
            Object 'a' of type 'typespec_member'
            Object 'b' of type 'typespec_member'
            Object 'c' of type 'typespec_member'
    Object 'pkg' of type 'import_typespec'
    Object 'J' of type 'parameter'
    Object 'K' of type 'parameter'
    Object '' of type 'param_assign'
      Object 'J' of type 'parameter'
      Object '' of type 'constant'
    Object '' of type 'param_assign'
      Object 'K' of type 'parameter'
      Object '' of type 'constant'
    Object 't' of type 'struct_var'
      Object 'pkg::my_packed_struct_with_array_t' of type 'struct_typespec'
        Object 'my_array' of type 'typespec_member'
          Object '' of type 'packed_array_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
              Object 'a' of type 'typespec_member'
              Object 'b' of type 'typespec_member'
              Object 'c' of type 'typespec_member'
    Object 'u' of type 'union_var'
      Object 'pkg::my_packed_union_with_array_t' of type 'union_typespec'
        Object 'my_array' of type 'typespec_member'
          Object '' of type 'packed_array_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
              Object 'a' of type 'typespec_member'
              Object 'b' of type 'typespec_member'
              Object 'c' of type 'typespec_member'
        Object 'my_array2' of type 'typespec_member'
          Object '' of type 'packed_array_typespec'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object '' of type 'range'
              Object '' of type 'constant'
              Object '' of type 'constant'
            Object 'pkg::my_packed_struct_t' of type 'struct_typespec'
              Object 'a' of type 'typespec_member'
              Object 'b' of type 'typespec_member'
              Object 'c' of type 'typespec_member'
    Object '' of type 'always'
      Object '' of type 'begin'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 't.my_array[0].a' of type 'hier_path'
              Object 't' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
              Object 'a' of type 'ref_obj'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 't.my_array[1].a' of type 'hier_path'
              Object 't' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
              Object 'a' of type 'ref_obj'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 't.my_array[2].a' of type 'hier_path'
              Object 't' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
              Object 'a' of type 'ref_obj'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 't.my_array[0].b' of type 'hier_path'
              Object 't' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
              Object 'b' of type 'ref_obj'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 't.my_array[1].c' of type 'hier_path'
              Object 't' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
              Object 'c' of type 'ref_obj'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'u.my_array[0]' of type 'hier_path'
              Object 'u' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
            Object '' of type 'constant'
        Object '' of type 'immediate_assert'
          Object '' of type 'operation'
            Object 'u.my_array[1]' of type 'hier_path'
              Object 'u' of type 'ref_obj'
              Object 'my_array' of type 'bit_select'
                Object '' of type 'constant'
            Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 't.my_array[0].a' of type 'hier_path'
        Object 't' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
        Object 'a' of type 'ref_obj'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 't.my_array[1].a' of type 'hier_path'
        Object 't' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
        Object 'a' of type 'ref_obj'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 't.my_array[2].a' of type 'hier_path'
        Object 't' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
        Object 'a' of type 'ref_obj'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 't.my_array[0].b' of type 'hier_path'
        Object 't' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
        Object 'b' of type 'ref_obj'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 't.my_array[1].c' of type 'hier_path'
        Object 't' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
        Object 'c' of type 'ref_obj'
      Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'u.my_array[0]' of type 'hier_path'
        Object 'u' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
    Object '' of type 'cont_assign'
      Object 'u.my_array[1]' of type 'hier_path'
        Object 'u' of type 'ref_obj'
        Object 'my_array' of type 'bit_select'
          Object '' of type 'constant'
      Object '' of type 'operation'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
        Object '' of type 'operation'
          Object '' of type 'constant'
          Object '' of type 'constant'
          Object '' of type 'constant'
Generating RTLIL representation for module `\top'.
Dumping AST before simplification:
    AST_MODULE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:23.1-59.16> str='\top'
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='\my_packed_struct_t'
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> str='\my_packed_struct_with_array_t'
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[8:0] dimensions=[2:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> str='\my_packed_union_with_array_t'
        AST_UNION <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array2' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:3.17-3.22> str='\J' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:4.17-4.22> str='\K' dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:26.31-26.32> str='\t' logic basic_prep range=[8:0] dimensions=[8:0]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> str='\my_packed_struct_with_array_t' bits='010111000110110101111001010111110111000001100001011000110110101101100101011001000101111101110011011101000111001001110101011000110111010001011111011101110110100101110100011010000101111101100001011100100111001001100001011110010101111101110100'(240) basic_prep range=[239:0] int=1635344244 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[8:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=8 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:34.30-34.31> str='\u' logic basic_prep range=[35:0] dimensions=[35:0]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> str='\my_packed_union_with_array_t' bits='0101110001101101011110010101111101110000011000010110001101101011011001010110010001011111011101010110111001101001011011110110111001011111011101110110100101110100011010000101111101100001011100100111001001100001011110010101111101110100'(232) basic_prep range=[231:0] int=1635344244 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[35:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=35 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:28.8-28.30>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:28.10-28.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:29.8-29.30>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:29.10-29.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:30.8-30.30>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:30.10-30.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:31.8-31.30>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:31.10-31.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:32.8-32.30>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:32.10-32.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.8-41.4>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.10-36.18> str='\u' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
        AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.24-41.4>
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:40.3-40.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:39.3-39.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:38.3-38.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:37.3-37.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.8-47.4>
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.10-42.18> str='\u' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
            AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
              AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                  AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12 in_lvalue
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0] in_lvalue
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
                AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1 in_lvalue
        AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.24-47.4>
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:46.3-46.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:45.3-45.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:44.3-44.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_CONCAT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:43.3-43.22>
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
      AST_ALWAYS <tests/simple_tests/UnionCustomTypeMultirange/top.sv:49.1-58.4>
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/UnionCustomTypeMultirange/top.sv:49.13-58.4>
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.3-50.35>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.10-50.33>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.10-50.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.3-51.35>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.10-51.33>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.10-51.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.3-52.35>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.10-52.33>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.10-52.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.3-53.35>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.10-53.33>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.10-53.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.3-54.35>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.10-54.33>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.10-54.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed range=[31:0] int=2
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) range=[0:0]
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.3-56.45>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.10-56.43>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.10-56.11> str='\u' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='111000101010'(12) range=[11:0] int=3626
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.3-57.45>
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.10-57.43>
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.10-57.11> str='\u' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                  AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                    AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                    AST_MUL <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                      AST_ADD <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                        AST_SUB <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0>
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed range=[31:0] int=12
                          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed range=[31:0]
                        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
                      AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='101010111000'(12) range=[11:0] int=2744
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='\pkg::my_packed_struct_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> str='\pkg::my_packed_struct_with_array_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[8:0] dimensions=[2:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> str='\pkg::my_packed_union_with_array_t' basic_prep
        AST_UNION <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array2' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:3.17-3.22> str='\pkg::J' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:4.17-4.22> str='\pkg::K' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST before simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\my_packed_struct_with_array_t" *)
      wire [8:0] t;
      (* wiretype = "\my_packed_union_with_array_t" *)
      wire [35:0] u;
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      assign t[(2)+((((2)-(0))+(1))*(0)):(2)+((((2)-(0))+(1))*(0))] = 1'b 1;
      assign t[(2)+((((2)-(0))+(1))*(1)):(2)+((((2)-(0))+(1))*(1))] = 1'b 0;
      assign t[(2)+((((2)-(0))+(1))*(2)):(2)+((((2)-(0))+(1))*(2))] = 1'b 1;
      assign t[(1)+((((2)-(0))+(1))*(0)):(1)+((((2)-(0))+(1))*(0))] = 1'b 1;
      assign t[(0)+((((2)-(0))+(1))*(1)):(0)+((((2)-(0))+(1))*(1))] = 1'b 0;
      assign u[(12)+((((12)-(0))+(1))*(0)):(0)+((((12)-(0))+(1))*(0))] = {{1'b 1, 1'b 1, 1'b 1}, {1'b 0, 1'b 0, 1'b 0}, {1'b 1, 1'b 0, 1'b 1}, {1'b 0, 1'b 1, 1'b 0}};
      assign u[(12)+((((12)-(0))+(1))*(1)):(0)+((((12)-(0))+(1))*(1))] = {{1'b 1, 1'b 0, 1'b 1}, {1'b 0, 1'b 1, 1'b 0}, {1'b 1, 1'b 1, 1'b 1}, {1'b 0, 1'b 0, 1'b 0}};
      (* always_comb = 1 *)
      always @*
        begin
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
        end
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---
Dumping AST after simplification:
    AST_MODULE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:23.1-59.16> str='\top' basic_prep
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='\my_packed_struct_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> str='\my_packed_struct_with_array_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[8:0] dimensions=[2:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> str='\my_packed_union_with_array_t' basic_prep
        AST_UNION <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array2' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:3.17-3.22> str='\J' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:4.17-4.22> str='\K' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:26.31-26.32> str='\t' logic basic_prep range=[8:0] dimensions=[8:0]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> str='\my_packed_struct_with_array_t' bits='010111000110110101111001010111110111000001100001011000110110101101100101011001000101111101110011011101000111001001110101011000110111010001011111011101110110100101110100011010000101111101100001011100100111001001100001011110010101111101110100'(240) basic_prep range=[239:0] int=1635344244 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[8:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=8 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_WIRE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:34.30-34.31> str='\u' logic basic_prep range=[35:0] dimensions=[35:0]
        ATTR \wiretype:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> str='\my_packed_union_with_array_t' bits='0101110001101101011110010101111101110000011000010110001101101011011001010110010001011111011101010110111001101001011011110110111001011111011101110110100101110100011010000101111101100001011100100111001001100001011110010101111101110100'(232) basic_prep range=[231:0] int=1635344244 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[35:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=35 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:28.8-28.30> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:28.10-28.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[2:2] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:29.8-29.30> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:29.10-29.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[5:5] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:30.8-30.30> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:30.10-30.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[8:8] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) signed basic_prep range=[31:0] int=8 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) signed basic_prep range=[31:0] int=8 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:31.8-31.30> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:31.10-31.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[1:1] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:32.8-32.30> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:32.10-32.18> str='\t' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[3:3] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.8-41.4> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.10-36.18> str='\u' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[12:0] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed basic_prep range=[31:0] int=12 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:36.24-41.4> bits='111000101010'(12) basic_prep range=[11:0] int=3626
      AST_ASSIGN <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.8-47.4> basic_prep
        AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.10-42.18> str='\u' basic_prep in_lvalue
          AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[25:13] in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011001'(32) signed basic_prep range=[31:0] int=25 in_lvalue
            AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001101'(32) signed basic_prep range=[31:0] int=13 in_lvalue
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:42.24-47.4> bits='101010111000'(12) basic_prep range=[11:0] int=2744
      AST_ALWAYS <tests/simple_tests/UnionCustomTypeMultirange/top.sv:49.1-58.4> basic_prep
        ATTR \always_comb:
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) basic_prep range=[31:0] int=1 in_param
        AST_BLOCK <tests/simple_tests/UnionCustomTypeMultirange/top.sv:49.13-58.4> basic_prep
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.3-50.35> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.10-50.33> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:50.10-50.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[2:2]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) signed basic_prep range=[31:0] int=2
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.3-51.35> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.10-51.33> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:51.10-51.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[5:5]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000101'(32) signed basic_prep range=[31:0] int=5
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.3-52.35> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.10-52.33> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:52.10-52.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[8:8]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) signed basic_prep range=[31:0] int=8
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001000'(32) signed basic_prep range=[31:0] int=8
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.3-53.35> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.10-53.33> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:53.10-53.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[1:1]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000001'(32) signed basic_prep range=[31:0] int=1
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='1'(1) basic_prep range=[0:0] int=1
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.3-54.35> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.10-54.33> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:54.10-54.11> str='\t' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[3:3]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) signed basic_prep range=[31:0] int=3
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='0'(1) basic_prep range=[0:0]
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.3-56.45> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.10-56.43> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:56.10-56.11> str='\u' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[12:0]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001100'(32) signed basic_prep range=[31:0] int=12
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0]
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='111000101010'(12) basic_prep range=[11:0] int=3626
          AST_ASSERT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.3-57.45> basic_prep
            AST_EQ <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.10-57.43> basic_prep
              AST_IDENTIFIER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:57.10-57.11> str='\u' basic_prep
                AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[25:13]
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011001'(32) signed basic_prep range=[31:0] int=25
                  AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000001101'(32) signed basic_prep range=[31:0] int=13
              AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='101010111000'(12) basic_prep range=[11:0] int=2744
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='\pkg::my_packed_struct_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> basic_prep
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
          AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> str='\pkg::my_packed_struct_with_array_t' basic_prep
        AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:17.11-19.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[8:0] dimensions=[2:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_TYPEDEF <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> str='\pkg::my_packed_union_with_array_t' basic_prep
        AST_UNION <tests/simple_tests/UnionCustomTypeMultirange/top.sv:12.11-15.4> basic_prep
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
          AST_STRUCT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:6.11-10.4> str='my_array2' basic_prep range=[35:0] dimensions=[2:0][3:0]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:7.11-7.12> str='a' logic basic_prep range=[2:2]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:8.11-8.12> str='b' logic basic_prep range=[1:1]
            AST_STRUCT_ITEM <tests/simple_tests/UnionCustomTypeMultirange/top.sv:9.11-9.12> str='c' logic basic_prep range=[0:0]
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:3.17-3.22> str='\pkg::J' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000011'(32) basic_prep range=[31:0] int=3 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
      AST_PARAMETER <tests/simple_tests/UnionCustomTypeMultirange/top.sv:4.17-4.22> str='\pkg::K' basic_prep range=[31:0] dimensions=[31:0] in_param
        AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000010'(32) basic_prep range=[31:0] int=2 in_param
        AST_RANGE <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> basic_prep range=[31:0] in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000011111'(32) signed basic_prep range=[31:0] int=31 in_param
          AST_CONSTANT <tests/simple_tests/UnionCustomTypeMultirange/top.sv:0.0-0.0> bits='00000000000000000000000000000000'(32) signed basic_prep range=[31:0] in_param
--- END OF AST DUMP ---
Dumping Verilog AST after simplification:
    module top();
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      /** AST_PARAMETER **/
      (* wiretype = "\my_packed_struct_with_array_t" *)
      wire [8:0] t;
      (* wiretype = "\my_packed_union_with_array_t" *)
      wire [35:0] u;
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      assign t[2:2] = 1'b 1;
      assign t[5:5] = 1'b 0;
      assign t[8:8] = 1'b 1;
      assign t[1:1] = 1'b 1;
      assign t[3:3] = 1'b 0;
      assign u[12:0] = 12'b 111000101010;
      assign u[25:13] = 12'b 101010111000;
      (* always_comb = 1 *)
      always @*
        begin
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
          /** AST_ASSERT **/
        end
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
      /** AST_TYPEDEF **/
    endmodule
--- END OF AST DUMP ---

2. Executing Verilog backend.

2.1. Executing BMUXMAP pass.

2.2. Executing DEMUXMAP pass.
/* Generated by Synlig (git sha1 c4fc1e288, clang++-15 15.0.6 -Og -fPIC -O1 -fno-omit-frame-pointer -fno-optimize-sibling-calls -fsanitize=address) */
Dumping module `\top'.
Warning: Module top contains RTLIL processes with sync rules. Such RTLIL processes can't always be mapped directly to Verilog always blocks. unintended changes in simulation behavior are possible! Use "proc" to convert processes to logic networks and registers.

module top();
  reg \$auto$verilog_backend.cc:2352:dump_module$16  = 0;
  reg _00_;
  reg _01_;
  reg _02_;
  reg _03_;
  reg _04_;
  reg _05_;
  reg _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire [8:0] t;
  wire [35:0] u;
  always @*
    if (_00_) begin
      assert (_07_);
    end
  always @*
    if (_01_) begin
      assert (_08_);
    end
  always @*
    if (_02_) begin
      assert (_09_);
    end
  always @*
    if (_03_) begin
      assert (_10_);
    end
  always @*
    if (_04_) begin
      assert (_11_);
    end
  always @*
    if (_05_) begin
      assert (_12_);
    end
  always @*
    if (_06_) begin
      assert (_13_);
    end
  assign _07_ = t[2] == 1'h1;
  assign _08_ = t[5] == 1'h0;
  assign _09_ = t[8] == 1'h1;
  assign _10_ = t[1] == 1'h1;
  assign _11_ = t[3] == 1'h0;
  assign _12_ = u[12:0] == 12'he2a;
  assign _13_ = u[25:13] == 12'hab8;
  always @* begin
    if (\$auto$verilog_backend.cc:2352:dump_module$16 ) begin end
    _00_ = 1'h0;
    _00_ = 1'h1;
    _01_ = 1'h0;
    _01_ = 1'h1;
    _02_ = 1'h0;
    _02_ = 1'h1;
    _03_ = 1'h0;
    _03_ = 1'h1;
    _04_ = 1'h0;
    _04_ = 1'h1;
    _05_ = 1'h0;
    _05_ = 1'h1;
    _06_ = 1'h0;
    _06_ = 1'h1;
  end
  always @* begin
  end
  assign t[2] = 1'h1;
  assign t[5] = 1'h0;
  assign t[8] = 1'h1;
  assign t[1] = 1'h1;
  assign t[3] = 1'h0;
  assign u[12:0] = 13'h0e2a;
  assign u[25:13] = 13'h0ab8;
endmodule

3. Executing HIERARCHY pass (managing design hierarchy).
Module top directly or indirectly contains formal properties -> setting "keep" attribute.

4. Executing PROC pass (convert processes to netlists).

4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 7 redundant assignments.
Promoted 7 assignments to connections.

4.4. Executing PROC_INIT pass (extract init attributes).

4.5. Executing PROC_ARST pass (detect async resets in processes).

4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\top.$proc$tests/simple_tests/UnionCustomTypeMultirange/top.sv:49$1'.

4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top.$proc$tests/simple_tests/UnionCustomTypeMultirange/top.sv:49$1'.
Cleaned up 0 empty switches.

4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~9 debug messages>

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.6. Executing OPT_DFF pass (perform DFF optimizations).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 14 unused wires.
<suppressed ~1 debug messages>

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.16. Finished OPT passes. (There is nothing left to do.)

6. Executing ASYNC2SYNC pass.

7. Executing SAT pass (solving SAT problems in the circuit).

Setting up time step 1:
Final constraint equation: { } = { }
Imported 21 cells to SAT database.
No constraints for initial state found.


Setting up time step 1:
Final constraint equation: { } = { }
Imported 21 cells to SAT database.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.

** Trying induction with length 1 **

Setting up time step 2:
Final constraint equation: { } = { }
Imported 21 cells to SAT database.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import show expression: $auto$rtlil.cc:2515:And$51
Import show expression: $auto$rtlil.cc:2485:Not$49
Import show expression: $auto$rtlil.cc:2515:And$46
Import show expression: $auto$rtlil.cc:2485:Not$44
Import show expression: $auto$rtlil.cc:2515:And$41
Import show expression: $auto$rtlil.cc:2485:Not$39
Import show expression: $auto$rtlil.cc:2515:And$36
Import show expression: $auto$rtlil.cc:2485:Not$34
Import show expression: $auto$rtlil.cc:2515:And$31
Import show expression: $auto$rtlil.cc:2485:Not$29
Import show expression: $auto$rtlil.cc:2515:And$26
Import show expression: $auto$rtlil.cc:2485:Not$24
Import show expression: $auto$rtlil.cc:2515:And$21
Import show expression: $auto$rtlil.cc:2485:Not$19
Import show expression: \t
Import show expression: \u

[base case 1] Solving problem with 128 variables and 242 clauses..
Base case for induction length 1 proven.

Setting up time step 2:
Final constraint equation: { } = { }
Imported 21 cells to SAT database.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import proof for assert: 1'1 when 1'1.
Import show expression: $auto$rtlil.cc:2515:And$51
Import show expression: $auto$rtlil.cc:2485:Not$49
Import show expression: $auto$rtlil.cc:2515:And$46
Import show expression: $auto$rtlil.cc:2485:Not$44
Import show expression: $auto$rtlil.cc:2515:And$41
Import show expression: $auto$rtlil.cc:2485:Not$39
Import show expression: $auto$rtlil.cc:2515:And$36
Import show expression: $auto$rtlil.cc:2485:Not$34
Import show expression: $auto$rtlil.cc:2515:And$31
Import show expression: $auto$rtlil.cc:2485:Not$29
Import show expression: $auto$rtlil.cc:2515:And$26
Import show expression: $auto$rtlil.cc:2485:Not$24
Import show expression: $auto$rtlil.cc:2515:And$21
Import show expression: $auto$rtlil.cc:2485:Not$19
Import show expression: \t
Import show expression: \u

[induction step 1] Solving problem with 128 variables and 243 clauses..
Induction step proven: SUCCESS!

                  /$$$$$$      /$$$$$$$$     /$$$$$$$    
                 /$$__  $$    | $$_____/    | $$__  $$   
                | $$  \ $$    | $$          | $$  \ $$   
                | $$  | $$    | $$$$$       | $$  | $$   
                | $$  | $$    | $$__/       | $$  | $$   
                | $$/$$ $$    | $$          | $$  | $$   
                |  $$$$$$/ /$$| $$$$$$$$ /$$| $$$$$$$//$$
                 \____ $$$|__/|________/|__/|_______/|__/
                       \__/                              

Warnings: 1 unique messages, 1 total
